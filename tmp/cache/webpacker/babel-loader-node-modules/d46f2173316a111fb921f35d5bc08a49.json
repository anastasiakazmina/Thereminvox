{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n    var autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var loop = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"32n\");\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"E2\", \"1n\", time);\n    }, \"1n\");\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"A2\", \"16n\", time);\n    }, \"16n\");\n    distortion.wet.value = 0;\n    var synth = new Tone.Synth();\n    synth.chain(distortion, autoPanner, autoWah, bitCrusher, chorus, freeverb, Tone.Master);\n    _this.state = {\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frequency: 1.5\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false,\n        roomSize: 1\n      },\n      loop: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"toggleLoop\", \"changeEffectWetValue\", \"changeDistortionValue\", \"toggleAutoPanner\", \"changeautoPannerValue\", \"changeautoPannerWetValue\", \"toggleAutoWah\", \"changeautoWahValue\", \"changeautoWahWetValue\", \"toggleBitCrusher\", \"changebitCrusherValue\", \"changebitCrusherWetValue\", \"toggleChorus\", \"changechorusValue\", \"changechorusWetValue\", \"toggleFreeverb\", \"changefreeverbValue\", \"changefreeverbWetValue\", \"changechorusWetValue\", \"toggleEffect\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start(\"0m\");\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          on = _this$state$autoPanne.on;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleBitCrusher\",\n    value: function toggleBitCrusher() {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          on = _this$state$bitCrushe.on;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleFreeverb\",\n    value: function toggleFreeverb() {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          on = _this$state$freeverb.on;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleChorus\",\n    value: function toggleChorus() {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          on = _this$state$chorus.on,\n          frequency = _this$state$chorus.frequency;\n      this.setState({\n        chorus: {\n          effect: effect,\n          on: on,\n          frequency: frequency\n        }\n      });\n    }\n  }, {\n    key: \"toggleAutoWah\",\n    value: function toggleAutoWah() {\n      var _this$state$autoWah = this.state.autoWah,\n          effect = _this$state$autoWah.effect,\n          wet = _this$state$autoWah.wet,\n          on = _this$state$autoWah.on;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahValue\",\n    value: function changeautoWahValue(value) {\n      var _this$state$autoWah2 = this.state.autoWah,\n          effect = _this$state$autoWah2.effect,\n          wet = _this$state$autoWah2.wet,\n          on = _this$state$autoWah2.on;\n      effect.autoWah = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahWetValue\",\n    value: function changeautoWahWetValue(value) {\n      var _this$state$autoWah3 = this.state.autoWah,\n          effect = _this$state$autoWah3.effect,\n          wet = _this$state$autoWah3.wet,\n          on = _this$state$autoWah3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerValue\",\n    value: function changeautoPannerValue(value) {\n      var _this$state$autoPanne2 = this.state.autoPanner,\n          effect = _this$state$autoPanne2.effect,\n          wet = _this$state$autoPanne2.wet,\n          on = _this$state$autoPanne2.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerWetValue\",\n    value: function changeautoPannerWetValue(value) {\n      var _this$state$autoPanne3 = this.state.autoPanner,\n          effect = _this$state$autoPanne3.effect,\n          wet = _this$state$autoPanne3.wet,\n          on = _this$state$autoPanne3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherValue\",\n    value: function changebitCrusherValue(value) {\n      var _this$state$bitCrushe2 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe2.effect,\n          wet = _this$state$bitCrushe2.wet,\n          on = _this$state$bitCrushe2.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherWetValue\",\n    value: function changebitCrusherWetValue(value) {\n      var _this$state$bitCrushe3 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe3.effect,\n          wet = _this$state$bitCrushe3.wet,\n          on = _this$state$bitCrushe3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbValue\",\n    value: function changefreeverbValue(value) {\n      var _this$state$freeverb2 = this.state.freeverb,\n          effect = _this$state$freeverb2.effect,\n          wet = _this$state$freeverb2.wet,\n          on = _this$state$freeverb2.on,\n          roomSize = _this$state$freeverb2.roomSize;\n      effect.roomSize = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbWetValue\",\n    value: function changefreeverbWetValue(value) {\n      var _this$state$freeverb3 = this.state.freeverb,\n          effect = _this$state$freeverb3.effect,\n          wet = _this$state$freeverb3.wet,\n          on = _this$state$freeverb3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusValue\",\n    value: function changechorusValue(value) {\n      var _this$state$chorus2 = this.state.chorus,\n          effect = _this$state$chorus2.effect,\n          wet = _this$state$chorus2.wet,\n          on = _this$state$chorus2.on;\n      effect.chorus = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusWetValue\",\n    value: function changechorusWetValue(value) {\n      var _this$state$chorus3 = this.state.chorus,\n          effect = _this$state$chorus3.effect,\n          wet = _this$state$chorus3.wet,\n          on = _this$state$chorus3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          distortion = _this$state.distortion,\n          synth = _this$state.synth,\n          autoPanner = _this$state.autoPanner,\n          autoWah = _this$state.autoWah,\n          bitCrusher = _this$state.bitCrusher,\n          chorus = _this$state.chorus,\n          freeverb = _this$state.freeverb,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3;\n      var toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"BoxPlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleSynth;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleSynth;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Change Distortion Wet Value\", React.createElement(Slider, {\n        name: \"distortion\",\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), \"Change Distortion Value\", React.createElement(Slider, {\n        name: \"distortion\",\n        min: \"0\",\n        max: \"100\",\n        value: distortion.effect.distortion,\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Distortion\",\n        current: distortion.on,\n        handleClick: function handleClick() {\n          return toggleEffect(\"distortion\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Bit Crusher\", React.createElement(Slider, {\n        min: \"1\",\n        max: \"10\",\n        value: bitCrusher.effect.bitCrusher,\n        handleValueChange: this.changebitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }), \"Change Bit Crusher Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: bitCrusher.effect.wet.value,\n        handleValueChange: this.changebitCrusherWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Bit Crusher\",\n        current: bitCrusher.on,\n        handleClick: this.toggleBitCrusher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, \"Auto Panner\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoPanner.effect.autoPanner,\n        handleValueChange: this.changeautoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }), \"Change Auto Panner Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: autoPanner.effect.wet.value,\n        handleValueChange: this.changeautoPannerWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"AutoPanner\",\n        current: autoPanner.on,\n        handleClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"Auto Wah\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoWah.effect.autoWah,\n        handleValueChange: this.changeautoWahValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }), \"Change Auto Wah Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"8\",\n        value: autoWah.effect.wet.value,\n        handleValueChange: this.changeautoWahWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Auto Wah\",\n        current: autoWah.on,\n        handleClick: this.toggleAutoWah,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, \"Chorus\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), \"Change Chorus Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: chorus.effect.wet.value,\n        handleValueChange: this.changechorusWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Chorus\",\n        current: chorus.on,\n        handleClick: this.toggleChorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"Freeverb\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }), \"Change Freeverb Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: freeverb.effect.wet.value,\n        handleValueChange: this.changefreeverbWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Freeverb\",\n        current: freeverb.on,\n        handleClick: this.toggleFreeverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component); //      handleClick={() => toggleEffect(\"distortion\")}\n\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","Synth","props","distortion","Distortion","oversample","autoPanner","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoWah","AutoWah","sensitivity","gain","follower","attack","release","chorus","Chorus","delayTime","spread","bitCrusher","BitCrusher","bits","freeverb","Freeverb","roomSize","dampening","loop","Loop","time","synth","triggerAttackRelease","loop2","loop3","wet","value","chain","Master","state","effect","on","instrument","loop1","bindAll","Transport","bpm","start","loopName","stop","setState","effectName","toggleEffect","toggleLoop","toggleSynth","changeEffectWetValue","changeDistortionValue","changebitCrusherValue","changebitCrusherWetValue","toggleBitCrusher","changeautoPannerValue","changeautoPannerWetValue","toggleAutoPanner","changeautoWahValue","changeautoWahWetValue","toggleAutoWah","changechorusValue","changechorusWetValue","toggleChorus","changefreeverbWetValue","toggleFreeverb","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n\n    let autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"32n\");\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"E2\", \"1n\", time);\n    }, \"1n\");\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"A2\", \"16n\", time);\n    }, \"16n\");\n\n    distortion.wet.value = 0;\n\n    let synth = new Tone.Synth();\n    synth.chain(\n      distortion,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb,\n      Tone.Master\n    );\n\n    this.state = {\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false, frequency: 1.5 },\n      freeverb: { effect: freeverb, wet: 0, on: false, roomSize: 1 },\n      loop: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false }\n    };\n\n    _.bindAll(\n      this,\n      \"toggleLoop\",\n      \"changeEffectWetValue\",\n      \"changeDistortionValue\",\n      \"toggleAutoPanner\",\n      \"changeautoPannerValue\",\n      \"changeautoPannerWetValue\",\n      \"toggleAutoWah\",\n      \"changeautoWahValue\",\n      \"changeautoWahWetValue\",\n      \"toggleBitCrusher\",\n      \"changebitCrusherValue\",\n      \"changebitCrusherWetValue\",\n      \"toggleChorus\",\n      \"changechorusValue\",\n      \"changechorusWetValue\",\n      \"toggleFreeverb\",\n      \"changefreeverbValue\",\n      \"changefreeverbWetValue\",\n      \"changechorusWetValue\",\n      \"toggleEffect\"\n    );\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName];\n\n    on == true ? loop.stop() : loop.start(\"0m\");\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    });\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  toggleAutoPanner() {\n    let { effect, on } = this.state.autoPanner;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleBitCrusher() {\n    let { effect, on } = this.state.bitCrusher;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleFreeverb() {\n    let { effect, on } = this.state.freeverb;\n\n    this.setState({\n      freeverb: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleChorus() {\n    let { effect, on, frequency } = this.state.chorus;\n\n    this.setState({\n      chorus: {\n        effect,\n        on,\n        frequency\n      }\n    });\n  }\n\n  toggleAutoWah() {\n    let { effect, wet, on } = this.state.autoWah;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.distortion = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.autoWah = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahWetValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.baseFrequency = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerWetValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.bits = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherWetValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbValue(value) {\n    let { effect, wet, on, roomSize } = this.state.freeverb;\n\n    effect.roomSize = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbWetValue(value) {\n    let { effect, wet, on } = this.state.freeverb;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.chorus = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusWetValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let {\n      distortion,\n      synth,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb,\n      loop1,\n      loop2,\n      loop3\n    } = this.state;\n    let { toggleEffect } = this;\n    return (\n      <div>\n        <div className=\"Box\">\n          <div className=\"BoxPlay\">\n            <PlaySwitch\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => this.toggleLoop}\n            />\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => this.toggleSynth}\n            />\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => this.toggleSynth}\n            />\n          </div>\n          <div className=\"DistortionBox\">\n            Change Distortion Wet Value\n            <Slider\n              name=\"distortion\"\n              min=\"0\"\n              max=\"1\"\n              value={distortion.effect.wet.value}\n              handleValueChange={this.changeEffectWetValue}\n            />\n            Change Distortion Value\n            <Slider\n              name=\"distortion\"\n              min=\"0\"\n              max=\"100\"\n              value={distortion.effect.distortion}\n              handleValueChange={this.changeDistortionValue}\n            />\n            <ToggleSwitch\n              value=\"Distortion\"\n              current={distortion.on}\n              handleClick={() => toggleEffect(\"distortion\")}\n            />\n          </div>\n          <div className=\"DistortionBox2\">\n            Bit Crusher\n            <Slider\n              min=\"1\"\n              max=\"10\"\n              value={bitCrusher.effect.bitCrusher}\n              handleValueChange={this.changebitCrusherValue}\n            />\n            Change Bit Crusher Wet Value\n            <Slider\n              min=\"0\"\n              max=\"10\"\n              value={bitCrusher.effect.wet.value}\n              handleValueChange={this.changebitCrusherWetValue}\n            />\n            <ToggleSwitch\n              value=\"Bit Crusher\"\n              current={bitCrusher.on}\n              handleClick={this.toggleBitCrusher}\n            />\n          </div>\n          <div className=\"DistortionBox\">\n            Auto Panner\n            <Slider\n              min=\"0\"\n              max=\"100\"\n              value={autoPanner.effect.autoPanner}\n              handleValueChange={this.changeautoPannerValue}\n            />\n            Change Auto Panner Wet Value\n            <Slider\n              min=\"0\"\n              max=\"10\"\n              value={autoPanner.effect.wet.value}\n              handleValueChange={this.changeautoPannerWetValue}\n            />\n            <ToggleSwitch\n              value=\"AutoPanner\"\n              current={autoPanner.on}\n              handleClick={this.toggleAutoPanner}\n            />\n          </div>\n          <div className=\"DistortionBox3\">\n            Auto Wah\n            <Slider\n              min=\"0\"\n              max=\"100\"\n              value={autoWah.effect.autoWah}\n              handleValueChange={this.changeautoWahValue}\n            />\n            Change Auto Wah Wet Value\n            <Slider\n              min=\"0\"\n              max=\"8\"\n              value={autoWah.effect.wet.value}\n              handleValueChange={this.changeautoWahWetValue}\n            />\n            <ToggleSwitch\n              value=\"Auto Wah\"\n              current={autoWah.on}\n              handleClick={this.toggleAutoWah}\n            />\n          </div>\n\n          <div className=\"DistortionBox\">\n            Chorus\n            <Slider\n              min=\"1.5\"\n              max=\"10\"\n              value={chorus.effect.chorus}\n              handleValueChange={this.changechorusValue}\n            />\n            Change Chorus Wet Value\n            <Slider\n              min=\"0\"\n              max=\"5\"\n              value={chorus.effect.wet.value}\n              handleValueChange={this.changechorusWetValue}\n            />\n            <ToggleSwitch\n              value=\"Chorus\"\n              current={chorus.on}\n              handleClick={this.toggleChorus}\n            />\n          </div>\n          <div className=\"DistortionBox4\">\n            Freeverb\n            <Slider\n              min=\"1.5\"\n              max=\"10\"\n              value={chorus.effect.chorus}\n              handleValueChange={this.changechorusValue}\n            />\n            Change Freeverb Wet Value\n            <Slider\n              min=\"0\"\n              max=\"5\"\n              value={freeverb.effect.wet.value}\n              handleValueChange={this.changefreeverbWetValue}\n            />\n            <ToggleSwitch\n              value=\"Freeverb\"\n              current={freeverb.on}\n              handleClick={this.toggleFreeverb}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//      handleClick={() => toggleEffect(\"distortion\")}\n"]},"metadata":{},"sourceType":"module"}