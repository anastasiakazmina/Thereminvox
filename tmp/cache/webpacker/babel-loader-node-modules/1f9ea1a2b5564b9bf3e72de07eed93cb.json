{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport Slider from \"../components/Slider\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n    distortion.wet.value = 0;\n    var synth = new Tone.Synth();\n    synth.chain(distortion, Tone.Master);\n    _this.state = {\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: synth\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"startSynth\", \"toggleDistortion\", \"changeDistortionWetValue\");\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = this.state.synth;\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease(\"C2\", \"8n\", time);\n      }, \"4n\");\n      loop.start(\"0m\"); //.stop(\"16m\");\n\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionWetValue\",\n    value: function changeDistortionWetValue(value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var distortion = this.state.distortion;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Start\"), React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: changeDistortionWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Toggle Distortion\"));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","Slider","Synth","props","distortion","Distortion","oversample","wet","value","synth","chain","Master","state","effect","on","bindAll","loop","Loop","time","triggerAttackRelease","start","Transport","bpm","setState","startSynth","changeDistortionWetValue","toggleDistortion","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport Slider from \"../components/Slider\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n\n    distortion.wet.value = 0;\n\n    let synth = new Tone.Synth();\n    synth.chain(distortion, Tone.Master);\n\n    this.state = {\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth\n    };\n\n    _.bindAll(\n      this,\n      \"startSynth\",\n      \"toggleDistortion\",\n      \"changeDistortionWetValue\"\n    );\n  }\n\n  startSynth() {\n    let { synth } = this.state;\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    loop.start(\"0m\"); //.stop(\"16m\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleDistortion() {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionWetValue(value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let { distortion } = this.state;\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n\n        <Slider\n          min=\"0\"\n          max=\"1\"\n          value={distortion.effect.wet.value}\n          handleValueChange={changeDistortionWetValue}\n        />\n        <div onClick={this.toggleDistortion}>Toggle Distortion</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}