{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport Tone from \"tone\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n    _this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false\n    };\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleFilter = _this.toggleFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion = _this.toggleDistortion.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion100 = _this.toggleDistortion100.bind(_assertThisInitialized(_this));\n    _this.toggleAutoPanner = _this.toggleAutoPanner.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = new Tone.Synth(); //.toMaster();\n\n      synth.chain(this.state.distortion, this.state.autoPanner, Tone.Master);\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease(\"C2\", \"8n\", time);\n      }, \"4n\");\n      loop.start(\"0m\").stop(\"16m\");\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleFilter\",\n    value: function toggleFilter() {\n      var autoFilter = new Tone.AutoFilter({\n        frequency: 1,\n        type: \"sine\",\n        depth: 0,\n        baseFrequency: 200,\n        octaves: 0.6,\n        filter: {\n          type: \"lowpass\",\n          rolloff: -12,\n          Q: 1\n        }\n      }).toMaster();\n      this.setState({\n        autoFilter: autoFilter\n      });\n      var synth = this.state.synth;\n      this.state.synth.connect(autoFilter);\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      var feedbackDelay1 = new Tone.FeedbackDelay({\n        delayTime: \"32n\",\n        maxDelay: 10\n      }).toMaster();\n      var feedbackDelay2 = new Tone.FeedbackDelay({\n        delayTime: \"8n\",\n        maxDelay: 10\n      }).toMaster();\n      this.state.synth.connect(feedbackDelay1);\n      this.state.synth.connect(feedbackDelay2);\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      var tremolo = new Tone.Tremolo({\n        frequency: 10,\n        type: \"sine\",\n        depth: 2,\n        spread: 360\n      }).toMaster();\n      this.state.synth.connect(tremolo);\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      console.log(\"toggle\");\n\n      if (this.state.distortionIsOn == true) {\n        console.log(\"true\"); //this.state.synth.disconnect();\n        //  this.state.synth.chain(Tone.Master);\n\n        this.state.distortion.wet.value = 0;\n        this.setState({\n          distortionIsOn: false\n        });\n      } else {\n        console.log(\"false\");\n        this.state.synth.chain(this.state.distortion, Tone.Master);\n        this.state.distortion.wet.value = 1;\n        this.setState({\n          distortionIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      console.log(\"autoPlay\");\n\n      if (this.state.autoPannerIsOn == true) {\n        console.log(\"true\"); //this.state.synth.disconnect();\n        //  this.state.synth.chain(Tone.Master);\n\n        this.state.autoPanner.wet.value = 0;\n        this.setState({\n          autoPanner: false\n        });\n      } else {\n        console.log(\"false\");\n        synth.chain(this.state.autoPanner, Tone.Master);\n        this.state.autoPanner.wet.value = 1;\n        this.setState({\n          autoPanner: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleDistortion100\",\n    value: function toggleDistortion100() {\n      var distortion = this.state.distortion;\n      distortion.distortion = 100;\n      this.setState({\n        distortion: distortion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Toggle Filter\"), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Toggle Feedback Delay\"), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Toggle Tremolo\"), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Toggle Distortion \", this.state.distortionIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Toggle Distortion 100\"), React.createElement(\"div\", {\n        onClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"AutoPanner \", this.state.autoPannerIsOn));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","distortion","Distortion","oversample","autoPanner","AutoPanner","frequency","type","depth","state","distortionIsOn","autoPannerIsOn","startSynth","bind","toggleFilter","toggleFeedbackDelay","toggleTremolo","toggleDistortion","toggleDistortion100","toggleAutoPanner","synth","chain","Master","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","value","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","toMaster","setState","connect","feedbackDelay1","FeedbackDelay","delayTime","maxDelay","feedbackDelay2","tremolo","Tremolo","spread","console","log","wet","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tone from \"tone\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n\n    this.state = {\n      distortion: distortion,\n      distortionIsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false\n    };\n\n    this.startSynth = this.startSynth.bind(this);\n    this.toggleFilter = this.toggleFilter.bind(this);\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this);\n    this.toggleTremolo = this.toggleTremolo.bind(this);\n    this.toggleDistortion = this.toggleDistortion.bind(this);\n    this.toggleDistortion100 = this.toggleDistortion100.bind(this);\n    this.toggleAutoPanner = this.toggleAutoPanner.bind(this);\n  }\n\n  startSynth() {\n    let synth = new Tone.Synth(); //.toMaster();\n    synth.chain(this.state.distortion, this.state.autoPanner, Tone.Master);\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    loop.start(\"0m\").stop(\"16m\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleFilter() {\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 0,\n      baseFrequency: 200,\n      octaves: 0.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    }).toMaster();\n\n    this.setState({\n      autoFilter: autoFilter\n    });\n\n    let { synth } = this.state;\n    this.state.synth.connect(autoFilter);\n  }\n\n  toggleFeedbackDelay() {\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: \"32n\",\n      maxDelay: 10\n    }).toMaster();\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: \"8n\",\n      maxDelay: 10\n    }).toMaster();\n\n    this.state.synth.connect(feedbackDelay1);\n    this.state.synth.connect(feedbackDelay2);\n  }\n\n  toggleTremolo() {\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 2,\n      spread: 360\n    }).toMaster();\n\n    this.state.synth.connect(tremolo);\n  }\n\n  toggleDistortion() {\n    console.log(\"toggle\");\n\n    if (this.state.distortionIsOn == true) {\n      console.log(\"true\");\n      //this.state.synth.disconnect();\n      //  this.state.synth.chain(Tone.Master);\n\n      this.state.distortion.wet.value = 0;\n\n      this.setState({\n        distortionIsOn: false\n      });\n    } else {\n      console.log(\"false\");\n      this.state.synth.chain(this.state.distortion, Tone.Master);\n      this.state.distortion.wet.value = 1;\n\n      this.setState({\n        distortionIsOn: true\n      });\n    }\n  }\n\n  toggleAutoPanner() {\n    console.log(\"autoPlay\");\n\n    if (this.state.autoPannerIsOn == true) {\n      console.log(\"true\");\n      //this.state.synth.disconnect();\n      //  this.state.synth.chain(Tone.Master);\n\n      this.state.autoPanner.wet.value = 0;\n\n      this.setState({\n        autoPanner: false\n      });\n    } else {\n      console.log(\"false\");\n      synth.chain(this.state.autoPanner, Tone.Master);\n      this.state.autoPanner.wet.value = 1;\n\n      this.setState({\n        autoPanner: true\n      });\n    }\n  }\n\n  toggleDistortion100() {\n    let { distortion } = this.state;\n    distortion.distortion = 100;\n\n    this.setState({\n      distortion: distortion\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleFilter}>Toggle Filter</div>\n        <div onClick={this.toggleFeedbackDelay}>Toggle Feedback Delay</div>\n        <div onClick={this.toggleTremolo}>Toggle Tremolo</div>\n        <div onClick={this.toggleDistortion}>\n          Toggle Distortion {this.state.distortionIsOn}\n        </div>\n        <div onClick={this.toggleDistortion100}>Toggle Distortion 100</div>\n        <div onClick={this.toggleAutoPanner}>\n          AutoPanner {this.state.autoPannerIsOn}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}