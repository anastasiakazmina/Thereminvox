{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport Tone from \"tone\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    _this.state = (_this$state = {\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      distortion: distortion,\n      distortionIsOn: false,\n      autoFilter: autoFilter,\n      feedbackDelay1: feedbackDelay1\n    }, _defineProperty(_this$state, \"feedbackDelay1\", false), _defineProperty(_this$state, \"autoFilter\", autoFilter), _defineProperty(_this$state, \"autoFilterIsOn\", false), _defineProperty(_this$state, \"autoPanner\", autoPanner), _defineProperty(_this$state, \"autoPannerIsOn\", false), _defineProperty(_this$state, \"autoWah\", autoWah), _defineProperty(_this$state, \"autoWahIsOn\", false), _defineProperty(_this$state, \"bitCrusher\", bitCrusher), _defineProperty(_this$state, \"bitCrusherIsOn\", false), _defineProperty(_this$state, \"chebyshev\", chebyshev), _defineProperty(_this$state, \"chebyshevIsOn\", false), _defineProperty(_this$state, \"chorus\", chorus), _defineProperty(_this$state, \"chorusIsOn\", false), _defineProperty(_this$state, \"convolver\", convolver), _defineProperty(_this$state, \"convolverIsOn\", false), _defineProperty(_this$state, \"effect\", effect), _defineProperty(_this$state, \"effectIsOn\", false), _this$state);\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleAutoFilter = _this.toggleAutoFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion = _this.toggleDistortion.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion100 = _this.toggleDistortion100.bind(_assertThisInitialized(_this));\n    _this.toggleAutoPanner = _this.toggleAutoPanner.bind(_assertThisInitialized(_this));\n    _this.toggleAutoWah = _this.toggleAutoWah.bind(_assertThisInitialized(_this));\n    _this.toggleBitCrusher = _this.toggleBitCrusher.bind(_assertThisInitialized(_this));\n    _this.toggleChebyshev = _this.toggleChebyshev.bind(_assertThisInitialized(_this));\n    _this.toggleChorus = _this.toggleChorus.bind(_assertThisInitialized(_this));\n    _this.toggleConvolver = _this.toggleConvolver.bind(_assertThisInitialized(_this));\n    _this.toggleEffect = _this.toggleEffect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = new Tone.Synth(); //.toMaster();\n\n      synth.chain(this.state.distortion, this.state.autoFilter, this.state.feedbackDelay1, this.state.feedbackDelay2, this.state.tremolo, this.state.autoPanner, this.state.autoWah, this.state.bitCrusher, this.state.chebyshev, this.state.chorus, this.state.convolver, this.state.effect, Tone.Master);\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease(\"C2\", \"8n\", time);\n      }, \"4n\");\n      loop.start(\"0m\").stop(\"16m\");\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleAutoFilter\",\n    value: function toggleAutoFilter() {\n      var autoFilter = new Tone.AutoFilter({\n        frequency: 1,\n        type: \"sine\",\n        depth: 0,\n        baseFrequency: 200,\n        octaves: 0.6,\n        filter: {\n          type: \"lowpass\",\n          rolloff: -12,\n          Q: 1\n        }\n      });\n      this.setState({\n        autoFilter: autoFilter\n      });\n      var synth = this.state.synth;\n      this.state.synth.connect(autoFilter);\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      var feedbackDelay1 = new Tone.FeedbackDelay({\n        delayTime: \"32n\",\n        maxDelay: 10\n      }).toMaster();\n      var feedbackDelay2 = new Tone.FeedbackDelay({\n        delayTime: \"8n\",\n        maxDelay: 10\n      }).toMaster();\n      this.state.synth.connect(feedbackDelay1);\n      this.state.synth.connect(feedbackDelay2);\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      this.state.synth.connect(tremolo);\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      console.log(\"toggle\");\n\n      if (this.state.distortionIsOn == true) {\n        console.log(\"true\");\n        this.state.distortion.wet.value = 0;\n        this.setState({\n          distortionIsOn: false\n        });\n      } else {\n        console.log(\"false\");\n        this.state.synth.chain(this.state.distortion, Tone.Master);\n        this.state.distortion.wet.value = 1;\n        this.setState({\n          distortionIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      console.log(\"autoPlay\");\n\n      if (this.state.autoPannerIsOn == true) {\n        this.state.autoPanner.wet.value = 0;\n        this.setState({\n          autoPannerIsOn: false\n        });\n      } else {\n        this.state.autoPanner.wet.value = 1;\n        this.setState({\n          autoPannerIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoWah\",\n    value: function toggleAutoWah() {\n      if (this.state.autoWahIsOn == true) {\n        this.state.autoWahIsOn.wet.value = 0;\n        this.setState({\n          autoWahIsOn: false\n        });\n      } else {\n        this.state.autoWah.wet.value = 1;\n        this.setState({\n          autoWahIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleBitCrusher\",\n    value: function toggleBitCrusher() {\n      if (this.state.bitCrusherIsOn == true) {\n        this.state.bitCrusherIsOn.wet.value = 0;\n        this.setState({\n          bitCrusherIsOn: false\n        });\n      } else {\n        this.state.bitCrusher.wet.value = 1;\n        this.setState({\n          bitCrusherIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleChebyshev\",\n    value: function toggleChebyshev() {\n      if (this.state.chebyshevIsOn == true) {\n        this.state.chebyshevIsOn.wet.value = 0;\n        this.setState({\n          chebyshevIsOn: false\n        });\n      } else {\n        this.state.chebyshev.wet.value = 1;\n        this.setState({\n          chebyshevIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleChorus\",\n    value: function toggleChorus() {\n      if (this.state.chorusIsOn == true) {\n        this.state.chorusIsOn.wet.value = 0;\n        this.setState({\n          chorusIsOn: false\n        });\n      } else {\n        this.state.chorus.wet.value = 1;\n        this.setState({\n          chorusIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleConvolver\",\n    value: function toggleConvolver() {\n      if (this.state.convolverIsOn == true) {\n        this.state.convolverIsOn.wet.value = 0;\n        this.setState({\n          convolverIsOn: false\n        });\n      } else {\n        this.state.convolver.wet.value = 1;\n        this.setState({\n          convolverIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect() {\n      if (this.state.effectIsOn == true) {\n        this.state.effectIsOn.wet.value = 0;\n        this.setState({\n          effectIsOn: false\n        });\n      } else {\n        this.state.effect.wet.value = 1;\n        this.setState({\n          effectIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleDistortion100\",\n    value: function toggleDistortion100() {\n      var distortion = this.state.distortion;\n      distortion.distortion = 100;\n      this.setState({\n        distortion: distortion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleAutoFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Toggle Filter\"), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Toggle Feedback Delay\"), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Toggle Tremolo\"), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Toggle Distortion \", this.state.distortionIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"Toggle Distortion 100\"), React.createElement(\"div\", {\n        onClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"AutoPanner \", this.state.autoPannerIsOn), React.createElement(\"div\", {\n        onClick: this.toggleAutoWah,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"AutoWah\", this.state.autoWahIsOn), React.createElement(\"div\", {\n        onClick: this.toggleBitCrusher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, \"Bit Crusher\", this.state.bitCrusherIsOn), React.createElement(\"div\", {\n        onClick: this.toggleChebyshev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \"Chebyshev\", this.state.chebyshevIsOn), React.createElement(\"div\", {\n        onClick: this.toggleChorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"Chorus\", this.state.chorusIsOn), React.createElement(\"div\", {\n        onClick: this.toggleConvolver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Convolver\", this.state.convolverIsOn), React.createElement(\"div\", {\n        onClick: this.toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Effect\", this.state.effectIsOn));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","distortion","Distortion","oversample","tremolo","Tremolo","frequency","type","depth","spread","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","feedbackDelay1","FeedbackDelay","delayTime","maxDelay","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","state","tremoloIsOn","distortionIsOn","startSynth","bind","toggleAutoFilter","toggleFeedbackDelay","toggleTremolo","toggleDistortion","toggleDistortion100","toggleAutoPanner","toggleAutoWah","toggleBitCrusher","toggleChebyshev","toggleChorus","toggleConvolver","toggleEffect","synth","chain","feedbackDelay2","Master","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","value","setState","connect","toMaster","console","log","autoPannerIsOn","autoWahIsOn","bitCrusherIsOn","chebyshevIsOn","chorusIsOn","convolverIsOn","effectIsOn","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tone from \"tone\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n\n    let effect = new Tone.Effect({\n      wet: 1\n    });\n\n    this.state = {\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      distortion: distortion,\n      distortionIsOn: false,\n      autoFilter: autoFilter,\n      feedbackDelay1: feedbackDelay1,\n      feedbackDelay1: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      effect: effect,\n      effectIsOn: false\n    };\n\n    this.startSynth = this.startSynth.bind(this);\n    this.toggleAutoFilter = this.toggleAutoFilter.bind(this);\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this);\n    this.toggleTremolo = this.toggleTremolo.bind(this);\n    this.toggleDistortion = this.toggleDistortion.bind(this);\n    this.toggleDistortion100 = this.toggleDistortion100.bind(this);\n    this.toggleAutoPanner = this.toggleAutoPanner.bind(this);\n    this.toggleAutoWah = this.toggleAutoWah.bind(this);\n    this.toggleBitCrusher = this.toggleBitCrusher.bind(this);\n    this.toggleChebyshev = this.toggleChebyshev.bind(this);\n    this.toggleChorus = this.toggleChorus.bind(this);\n    this.toggleConvolver = this.toggleConvolver.bind(this);\n    this.toggleEffect = this.toggleEffect.bind(this);\n  }\n\n  startSynth() {\n    let synth = new Tone.Synth(); //.toMaster();\n    synth.chain(\n      this.state.distortion,\n      this.state.autoFilter,\n      this.state.feedbackDelay1,\n      this.state.feedbackDelay2,\n      this.state.tremolo,\n      this.state.autoPanner,\n      this.state.autoWah,\n      this.state.bitCrusher,\n      this.state.chebyshev,\n      this.state.chorus,\n      this.state.convolver,\n      this.state.effect,\n      Tone.Master\n    );\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    loop.start(\"0m\").stop(\"16m\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleAutoFilter() {\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 0,\n      baseFrequency: 200,\n      octaves: 0.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    this.setState({\n      autoFilter: autoFilter\n    });\n\n    let { synth } = this.state;\n    this.state.synth.connect(autoFilter);\n  }\n\n  toggleFeedbackDelay() {\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: \"32n\",\n      maxDelay: 10\n    }).toMaster();\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: \"8n\",\n      maxDelay: 10\n    }).toMaster();\n\n    this.state.synth.connect(feedbackDelay1);\n    this.state.synth.connect(feedbackDelay2);\n  }\n\n  toggleTremolo() {\n    this.state.synth.connect(tremolo);\n  }\n\n  toggleDistortion() {\n    console.log(\"toggle\");\n\n    if (this.state.distortionIsOn == true) {\n      console.log(\"true\");\n\n      this.state.distortion.wet.value = 0;\n\n      this.setState({\n        distortionIsOn: false\n      });\n    } else {\n      console.log(\"false\");\n      this.state.synth.chain(this.state.distortion, Tone.Master);\n      this.state.distortion.wet.value = 1;\n\n      this.setState({\n        distortionIsOn: true\n      });\n    }\n  }\n\n  toggleAutoPanner() {\n    console.log(\"autoPlay\");\n\n    if (this.state.autoPannerIsOn == true) {\n      this.state.autoPanner.wet.value = 0;\n\n      this.setState({\n        autoPannerIsOn: false\n      });\n    } else {\n      this.state.autoPanner.wet.value = 1;\n\n      this.setState({\n        autoPannerIsOn: true\n      });\n    }\n  }\n\n  toggleAutoWah() {\n    if (this.state.autoWahIsOn == true) {\n      this.state.autoWahIsOn.wet.value = 0;\n\n      this.setState({\n        autoWahIsOn: false\n      });\n    } else {\n      this.state.autoWah.wet.value = 1;\n\n      this.setState({\n        autoWahIsOn: true\n      });\n    }\n  }\n\n  toggleBitCrusher() {\n    if (this.state.bitCrusherIsOn == true) {\n      this.state.bitCrusherIsOn.wet.value = 0;\n\n      this.setState({\n        bitCrusherIsOn: false\n      });\n    } else {\n      this.state.bitCrusher.wet.value = 1;\n\n      this.setState({\n        bitCrusherIsOn: true\n      });\n    }\n  }\n\n  toggleChebyshev() {\n    if (this.state.chebyshevIsOn == true) {\n      this.state.chebyshevIsOn.wet.value = 0;\n\n      this.setState({\n        chebyshevIsOn: false\n      });\n    } else {\n      this.state.chebyshev.wet.value = 1;\n\n      this.setState({\n        chebyshevIsOn: true\n      });\n    }\n  }\n\n  toggleChorus() {\n    if (this.state.chorusIsOn == true) {\n      this.state.chorusIsOn.wet.value = 0;\n\n      this.setState({\n        chorusIsOn: false\n      });\n    } else {\n      this.state.chorus.wet.value = 1;\n\n      this.setState({\n        chorusIsOn: true\n      });\n    }\n  }\n\n  toggleConvolver() {\n    if (this.state.convolverIsOn == true) {\n      this.state.convolverIsOn.wet.value = 0;\n\n      this.setState({\n        convolverIsOn: false\n      });\n    } else {\n      this.state.convolver.wet.value = 1;\n\n      this.setState({\n        convolverIsOn: true\n      });\n    }\n  }\n\n  toggleEffect() {\n    if (this.state.effectIsOn == true) {\n      this.state.effectIsOn.wet.value = 0;\n\n      this.setState({\n        effectIsOn: false\n      });\n    } else {\n      this.state.effect.wet.value = 1;\n\n      this.setState({\n        effectIsOn: true\n      });\n    }\n  }\n\n  toggleDistortion100() {\n    let { distortion } = this.state;\n    distortion.distortion = 100;\n\n    this.setState({\n      distortion: distortion\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleAutoFilter}>Toggle Filter</div>\n        <div onClick={this.toggleFeedbackDelay}>Toggle Feedback Delay</div>\n        <div onClick={this.toggleTremolo}>Toggle Tremolo</div>\n        <div onClick={this.toggleDistortion}>\n          Toggle Distortion {this.state.distortionIsOn}\n        </div>\n        <div onClick={this.toggleDistortion100}>Toggle Distortion 100</div>\n        <div onClick={this.toggleAutoPanner}>\n          AutoPanner {this.state.autoPannerIsOn}\n        </div>\n        <div onClick={this.toggleAutoWah}>AutoWah{this.state.autoWahIsOn}</div>\n        <div onClick={this.toggleBitCrusher}>\n          Bit Crusher{this.state.bitCrusherIsOn}\n        </div>\n        <div onClick={this.toggleChebyshev}>\n          Chebyshev{this.state.chebyshevIsOn}\n        </div>\n        <div onClick={this.toggleChorus}>Chorus{this.state.chorusIsOn}</div>\n        <div onClick={this.toggleConvolver}>\n          Convolver{this.state.convolverIsOn}\n        </div>\n        <div onClick={this.toggleEffect}>Effect{this.state.effectIsOn}</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}