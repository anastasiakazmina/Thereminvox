{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\nimport BitCrusher from \"../components/effects/BitCrusher\";\nimport Chebyshev from \"../components/effects/Chebyshev\";\nimport AutoPanner from \"../components/effects/AutoPanner\";\nimport AutoFilter from \"../components/effects/AutoFilter\";\nimport AutoWah from \"../components/effects/AutoWah\";\nimport Freeverb from \"../components/effects/Freeverb\";\nimport Vibrato from \"../components/effects/Vibrato\";\nimport Tremolo from \"../components/effects/Tremolo\";\nimport Chorus from \"../components/effects/Chorus\";\nimport Convolver from \"../components/effects/Convolver\";\nimport Effect from \"../components/effects/Effect\";\nimport FeedbackEffect from \"../components/effects/FeedbackEffect\";\nimport JCReverb from \"../components/effects/JCReverb\";\nimport Phaser from \"../components/effects/Phaser\";\nimport Knob from \"../components/Knob\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: \"4n\",\n      maxDelay: 0.8\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n    var autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var jCReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    distortion.wet.value = 0;\n    autoPanner.wet.value = 0;\n    bitCrusher.wet.value = 0.354;\n    feedbackDelay.wet.value = 0.354;\n    chebyshev.wet.value = 0.5740443284426575;\n    autoFilter.wet.value = 0;\n    autoWah.wet.value = 0;\n    freeverb.wet.value = 0;\n    vibrato.wet.value = 0;\n    tremolo.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    jCReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    var synth = new Tone.PolySynth();\n    var loop1 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease([\"C2\", \"8n\"], time);\n    }, \"32n\");\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease([\"C2\"], \"4n\", time);\n    }, \"16n\");\n    var loop3 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease([\"A2\", \"16n\"], \"16n\", time);\n    }, \"32n\");\n    var loop4 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease([\"A6\", \"2n\"], \"8n\", time);\n    }, \"16n\");\n    var loop5 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease([\"G4\", \"G4\", \"F4\", \"F4\", \"E4\", \"E4\", \"D4\", \"G4\", \"G4\", \"F4\", \"F4\", \"E4\", \"E4\", \"D4\"], \"32n\", time);\n    }, \"16n\");\n    synth.chain(bitCrusher, chebyshev, autoPanner, distortion, autoFilter, autoWah, freeverb, vibrato, feedbackDelay, tremolo, chorus, convolver, effect, feedbackEffect, jCReverb, phaser, Tone.Master);\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      jCReverb: {\n        effect: jCReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"generateRandom\", \"toggleLoop\", \"toggleEffect\", \"changeEffectWetValue\", \"changeEffectWetValue\", \"changeAutoPannerWetValue\", \"changeDistortionValue\", \"changeAutoPannerValue\", \"changeBitCrasherValue\", \"changeFreeverbValue\", \"changeAutoFilterValue\", \"changeAutoWahValue\", \"changeChebyshevValue\", \"changeFeedbackDelayValue\", \"changeVibratoValue\", \"changeFeedbackDelayWetValue\", \"changeChebyshevWetValue\", \"changeBitCrasherWetValue\", \"changeVibratoWetValue\", \"changeTremoloWetValue\", \"changeTremoloValue\", \"changeChorusWetValue\", \"changeChorusValue\", \"changeConvolverWetValue\", \"changeConvolverValue\", \"changeEffectWetValue\", \"changeEffectValue\", \"changeFeedbackEffectWetValue\", \"changeFeedbackEffectValue\", \"changeJCReverbWetValue\", \"changeJCReverbValue\", \"changePhaserWetValue\", \"changePhaserValue\");\n\n    Tone.Transport.bpm.value = 30;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue(\"distortion\", random / 30);\n        this.changeFreeverbValue(\"freeverb\", random / 30);\n        this.changeAutoFilterValue(\"autoFilter\", random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start(\"0m\");\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeAutoPannerWetValue\",\n    value: function changeAutoPannerWetValue(effectName, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackEffectValue\",\n    value: function changeFeedbackEffectValue(effectName, value) {\n      var _this$state$feedbackE = this.state.feedbackEffect,\n          effect = _this$state$feedbackE.effect,\n          wet = _this$state$feedbackE.wet,\n          on = _this$state$feedbackE.on;\n      effect.feedbackEffect = value;\n      this.setState({\n        feedbackEffect: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changePhaserValue\",\n    value: function changePhaserValue(effectName, value) {\n      var _this$state$phaser = this.state.phaser,\n          effect = _this$state$phaser.effect,\n          wet = _this$state$phaser.wet,\n          on = _this$state$phaser.on;\n      effect.phaser = value;\n      this.setState({\n        phaser: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeJCReverbValue\",\n    value: function changeJCReverbValue(effectName, value) {\n      var _this$state$jCReverb = this.state.jCReverb,\n          effect = _this$state$jCReverb.effect,\n          wet = _this$state$jCReverb.wet,\n          on = _this$state$jCReverb.on;\n      effect.jCReverb = value;\n      this.setState({\n        jCReverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, value) {\n      var _this$state$effect = this.state.effect,\n          effect = _this$state$effect.effect,\n          wet = _this$state$effect.wet,\n          on = _this$state$effect.on;\n      effect.effect = value;\n      this.setState({\n        effect: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeConvolverValue\",\n    value: function changeConvolverValue(effectName, value) {\n      var _this$state$convolver = this.state.convolver,\n          effect = _this$state$convolver.effect,\n          wet = _this$state$convolver.wet,\n          on = _this$state$convolver.on;\n      effect.convolver = value;\n      this.setState({\n        convolver: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChorusValue\",\n    value: function changeChorusValue(effectName, value) {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          wet = _this$state$chorus.wet,\n          on = _this$state$chorus.on;\n      effect.chorus = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeTremoloValue\",\n    value: function changeTremoloValue(effectName, value) {\n      var _this$state$tremolo = this.state.tremolo,\n          effect = _this$state$tremolo.effect,\n          wet = _this$state$tremolo.wet,\n          on = _this$state$tremolo.on;\n      effect.tremolo = value;\n      this.setState({\n        tremolo: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerValue\",\n    value: function changeAutoPannerValue(effectName, value) {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          wet = _this$state$autoPanne.wet,\n          on = _this$state$autoPanne.on;\n      effect.autoPanner = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeBitCrasherValue\",\n    value: function changeBitCrasherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbValue\",\n    value: function changeFreeverbValue(effectName, value) {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          wet = _this$state$freeverb.wet,\n          on = _this$state$freeverb.on;\n      effect.freeverb = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoFilterValue\",\n    value: function changeAutoFilterValue(effectName, value) {\n      var _this$state$autoFilte = this.state.autoFilter,\n          effect = _this$state$autoFilte.effect,\n          wet = _this$state$autoFilte.wet,\n          on = _this$state$autoFilte.on;\n      effect.autoFilter = value;\n      this.setState({\n        autoFilter: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoWahValue\",\n    value: function changeAutoWahValue(effectName, value) {\n      var _this$state$autoWah = this.state.autoWah,\n          effect = _this$state$autoWah.effect,\n          wet = _this$state$autoWah.wet,\n          on = _this$state$autoWah.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChebyshevValue\",\n    value: function changeChebyshevValue(effectName, value) {\n      var _this$state$chebyshev = this.state.chebyshev,\n          effect = _this$state$chebyshev.effect,\n          wet = _this$state$chebyshev.wet,\n          on = _this$state$chebyshev.on;\n      effect.chebyshev = value;\n      this.setState({\n        chebyshev: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeVibratoValue\",\n    value: function changeVibratoValue(effectName, value) {\n      var _this$state$vibrato = this.state.vibrato,\n          effect = _this$state$vibrato.effect,\n          wet = _this$state$vibrato.wet,\n          on = _this$state$vibrato.on;\n      effect.vibrato = value;\n      this.setState({\n        vibrato: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayWetValue\",\n    value: function changeFeedbackDelayWetValue(effectName, value) {\n      var _this$state$effectNam4 = this.state[effectName],\n          effect = _this$state$effectNam4.effect,\n          wet = _this$state$effectNam4.wet,\n          on = _this$state$effectNam4.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changePhaserWetValue\",\n    value: function changePhaserWetValue(effectName, value) {\n      var _this$state$effectNam5 = this.state[effectName],\n          effect = _this$state$effectNam5.effect,\n          wet = _this$state$effectNam5.wet,\n          on = _this$state$effectNam5.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeJCReverbWetValue\",\n    value: function changeJCReverbWetValue(effectName, value) {\n      var _this$state$effectNam6 = this.state[effectName],\n          effect = _this$state$effectNam6.effect,\n          wet = _this$state$effectNam6.wet,\n          on = _this$state$effectNam6.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeFeedbackEffectWetValue\",\n    value: function changeFeedbackEffectWetValue(effectName, value) {\n      var _this$state$effectNam7 = this.state[effectName],\n          effect = _this$state$effectNam7.effect,\n          wet = _this$state$effectNam7.wet,\n          on = _this$state$effectNam7.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam8 = this.state[effectName],\n          effect = _this$state$effectNam8.effect,\n          wet = _this$state$effectNam8.wet,\n          on = _this$state$effectNam8.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeConvolverWetValue\",\n    value: function changeConvolverWetValue(effectName, value) {\n      var _this$state$effectNam9 = this.state[effectName],\n          effect = _this$state$effectNam9.effect,\n          wet = _this$state$effectNam9.wet,\n          on = _this$state$effectNam9.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeChorusWetValue\",\n    value: function changeChorusWetValue(effectName, value) {\n      var _this$state$effectNam10 = this.state[effectName],\n          effect = _this$state$effectNam10.effect,\n          wet = _this$state$effectNam10.wet,\n          on = _this$state$effectNam10.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeTremoloWetValue\",\n    value: function changeTremoloWetValue(effectName, value) {\n      var _this$state$effectNam11 = this.state[effectName],\n          effect = _this$state$effectNam11.effect,\n          wet = _this$state$effectNam11.wet,\n          on = _this$state$effectNam11.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeChebyshevWetValue\",\n    value: function changeChebyshevWetValue(effectName, value) {\n      var _this$state$effectNam12 = this.state[effectName],\n          effect = _this$state$effectNam12.effect,\n          wet = _this$state$effectNam12.wet,\n          on = _this$state$effectNam12.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeBitCrasherWetValue\",\n    value: function changeBitCrasherWetValue(effectName, value) {\n      var _this$state$effectNam13 = this.state[effectName],\n          effect = _this$state$effectNam13.effect,\n          wet = _this$state$effectNam13.wet,\n          on = _this$state$effectNam13.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeVibratoWetValue\",\n    value: function changeVibratoWetValue(effectName, value) {\n      var _this$state$effectNam14 = this.state[effectName],\n          effect = _this$state$effectNam14.effect,\n          wet = _this$state$effectNam14.wet,\n          on = _this$state$effectNam14.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          feedbackDelay = _this$state2.feedbackDelay,\n          autoPanner = _this$state2.autoPanner,\n          bitCrusher = _this$state2.bitCrusher,\n          chebyshev = _this$state2.chebyshev,\n          autoFilter = _this$state2.autoFilter,\n          autoWah = _this$state2.autoWah,\n          freeverb = _this$state2.freeverb,\n          vibrato = _this$state2.vibrato,\n          tremolo = _this$state2.tremolo,\n          chorus = _this$state2.chorus,\n          convolver = _this$state2.convolver,\n          effect = _this$state2.effect,\n          feedbackEffect = _this$state2.feedbackEffect,\n          jCReverb = _this$state2.jCReverb,\n          phaser = _this$state2.phaser,\n          synth = _this$state2.synth,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4,\n          loop5 = _this$state2.loop5;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LoopContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop4\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop5.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop5\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"effectsBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DistortionSynth1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"distortion\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828\n        },\n        __self: this\n      }, React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"feedbackDelay\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }, React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"bitCrusher\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      }, React.createElement(Chebyshev, Object.assign({}, this.state.chebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"chebyshev\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevValue: this.changeChebyshevValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"effectsBoard2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DistortionSynth5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }, React.createElement(AutoPanner, Object.assign({}, this.state.autoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"autoPanner\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoPannerValue: this.changeAutoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, React.createElement(AutoFilter, Object.assign({}, this.state.autoFilter, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"autoFilter\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoFilterValue: this.changeAutoFilterValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870\n        },\n        __self: this\n      }, React.createElement(AutoWah, Object.assign({}, this.state.autoWah, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"autoWah\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoWahValue: this.changeAutoWahValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878\n        },\n        __self: this\n      }, React.createElement(Freeverb, Object.assign({}, this.state.freeverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"freeverb\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFreeverbValue: this.changeFreeverbValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"effectsBoard3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DistortionSynth9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      }, React.createElement(Vibrato, Object.assign({}, this.state.vibrato, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"vibrato\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeVibratoValue: this.changeVibratoValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        },\n        __self: this\n      }, React.createElement(Tremolo, Object.assign({}, this.state.tremolo, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"tremolo\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeTremoloValue: this.changeTremoloValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, React.createElement(Chorus, Object.assign({}, this.state.chorus, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"chorus\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChorusValue: this.changeChorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912\n        },\n        __self: this\n      }, React.createElement(Convolver, Object.assign({}, this.state.convolver, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"convolver\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeConvolverValue: this.changeConvolverValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"effectsBoard4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DistortionSynth13\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }, React.createElement(Effect, Object.assign({}, this.state.effect, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"effect\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeEffectValue: this.changeEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth14\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        },\n        __self: this\n      }, React.createElement(FeedbackEffect, Object.assign({}, this.state.feedbackEffect, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"feedbackEffect\");\n        },\n        changeEffectWetValue: this.changeFeedbackEffectWetValue,\n        changeFeedbackEffectValue: this.changeFeedbackEffectValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth15\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }, React.createElement(JCReverb, Object.assign({}, this.state.jCReverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"jCReverb\");\n        },\n        changeEffectWetValue: this.changeJCReverbWetValue,\n        changeJCReverbValue: this.changeJCReverbValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      }, React.createElement(Phaser, Object.assign({}, this.state.phaser, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"phaser\");\n        },\n        changeEffectWetValue: this.changePhaserWetValue,\n        changePhaserValue: this.changePhaserValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 947\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","BitCrusher","Chebyshev","AutoPanner","AutoFilter","AutoWah","Freeverb","Vibrato","Tremolo","Chorus","Convolver","Effect","FeedbackEffect","JCReverb","Phaser","Knob","Synth","props","distortion","oversample","feedbackDelay","delayTime","maxDelay","bitCrusher","bits","chebyshev","order","autoPanner","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoFilter","autoWah","sensitivity","gain","follower","attack","release","freeverb","roomSize","dampening","vibrato","tremolo","spread","chorus","convolver","onload","noOp","normalize","effect","wet","feedbackEffect","feedback","jCReverb","phaser","stages","value","synth","PolySynth","loop1","Pattern","time","note","triggerAttackRelease","loop2","Loop","loop3","loop4","loop5","chain","Master","state","lastChange","Date","now","timeout","on","instrument","loop","bindAll","Transport","bpm","start","generateRandom","min","max","Math","floor","random","getRandomArbitrary","setState","changeDistortionValue","changeFreeverbValue","changeAutoFilterValue","setTimeout","loopName","stop","effectName","toggleEffect","toggleLoop","changeEffectWetValue","changeFeedbackDelayValue","changeBitCrusherValue","changeChebyshevValue","changeAutoPannerValue","changeAutoWahValue","changeVibratoValue","changeTremoloValue","changeChorusValue","changeConvolverValue","changeEffectValue","changeFeedbackEffectWetValue","changeFeedbackEffectValue","changeJCReverbWetValue","changeJCReverbValue","changePhaserWetValue","changePhaserValue","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\nimport BitCrusher from \"../components/effects/BitCrusher\";\nimport Chebyshev from \"../components/effects/Chebyshev\";\nimport AutoPanner from \"../components/effects/AutoPanner\";\nimport AutoFilter from \"../components/effects/AutoFilter\";\nimport AutoWah from \"../components/effects/AutoWah\";\nimport Freeverb from \"../components/effects/Freeverb\";\nimport Vibrato from \"../components/effects/Vibrato\";\nimport Tremolo from \"../components/effects/Tremolo\";\nimport Chorus from \"../components/effects/Chorus\";\nimport Convolver from \"../components/effects/Convolver\";\nimport Effect from \"../components/effects/Effect\";\nimport FeedbackEffect from \"../components/effects/FeedbackEffect\";\nimport JCReverb from \"../components/effects/JCReverb\";\nimport Phaser from \"../components/effects/Phaser\";\n\nimport Knob from \"../components/Knob\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: \"4n\",\n      maxDelay: 0.8\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n\n    let autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n\n    let effect = new Tone.Effect({\n      wet: 1\n    });\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n\n    let jCReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n\n    distortion.wet.value = 0;\n    autoPanner.wet.value = 0;\n    bitCrusher.wet.value = 0.354;\n    feedbackDelay.wet.value = 0.354;\n    chebyshev.wet.value = 0.5740443284426575;\n    autoFilter.wet.value = 0;\n    autoWah.wet.value = 0;\n    freeverb.wet.value = 0;\n    vibrato.wet.value = 0;\n    tremolo.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    jCReverb.wet.value = 0;\n    phaser.wet.value = 0;\n\n    let synth = new Tone.PolySynth();\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease([\"C2\", \"8n\"], time);\n    }, \"32n\");\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease([\"C2\"], \"4n\", time);\n    }, \"16n\");\n\n    let loop3 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease([\"A2\", \"16n\"], \"16n\", time);\n    }, \"32n\");\n\n    let loop4 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease([\"A6\", \"2n\"], \"8n\", time);\n    }, \"16n\");\n\n    let loop5 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(\n        [\n          \"G4\",\n          \"G4\",\n          \"F4\",\n          \"F4\",\n          \"E4\",\n          \"E4\",\n          \"D4\",\n          \"G4\",\n          \"G4\",\n          \"F4\",\n          \"F4\",\n          \"E4\",\n          \"E4\",\n          \"D4\"\n        ],\n        \"32n\",\n        time\n      );\n    }, \"16n\");\n\n    synth.chain(\n      bitCrusher,\n      chebyshev,\n      autoPanner,\n      distortion,\n      autoFilter,\n      autoWah,\n      freeverb,\n      vibrato,\n      feedbackDelay,\n      tremolo,\n      chorus,\n      convolver,\n      effect,\n      feedbackEffect,\n      jCReverb,\n      phaser,\n      Tone.Master\n    );\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      autoFilter: { effect: autoFilter, wet: 0, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chebyshev: { effect: chebyshev, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      freeverb: { effect: freeverb, wet: 0, on: false },\n      feedbackDelay: { effect: feedbackDelay, wet: 0, on: false },\n      vibrato: { effect: vibrato, wet: 0, on: false },\n      tremolo: { effect: tremolo, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false },\n      convolver: { effect: convolver, wet: 0, on: false },\n      effect: { effect: effect, wet: 0, on: false },\n      feedbackEffect: { effect: feedbackEffect, wet: 0, on: false },\n      jCReverb: { effect: jCReverb, wet: 0, on: false },\n      phaser: { effect: phaser, wet: 0, on: false },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false },\n      loop5: { loop: loop5, on: false }\n    };\n\n    _.bindAll(\n      this,\n      \"generateRandom\",\n      \"toggleLoop\",\n      \"toggleEffect\",\n      \"changeEffectWetValue\",\n      \"changeEffectWetValue\",\n      \"changeAutoPannerWetValue\",\n      \"changeDistortionValue\",\n      \"changeAutoPannerValue\",\n      \"changeBitCrasherValue\",\n      \"changeFreeverbValue\",\n      \"changeAutoFilterValue\",\n      \"changeAutoWahValue\",\n      \"changeChebyshevValue\",\n      \"changeFeedbackDelayValue\",\n      \"changeVibratoValue\",\n      \"changeFeedbackDelayWetValue\",\n      \"changeChebyshevWetValue\",\n      \"changeBitCrasherWetValue\",\n      \"changeVibratoWetValue\",\n      \"changeTremoloWetValue\",\n      \"changeTremoloValue\",\n      \"changeChorusWetValue\",\n      \"changeChorusValue\",\n      \"changeConvolverWetValue\",\n      \"changeConvolverValue\",\n      \"changeEffectWetValue\",\n      \"changeEffectValue\",\n      \"changeFeedbackEffectWetValue\",\n      \"changeFeedbackEffectValue\",\n      \"changeJCReverbWetValue\",\n      \"changeJCReverbValue\",\n      \"changePhaserWetValue\",\n      \"changePhaserValue\"\n    );\n\n    Tone.Transport.bpm.value = 30;\n    Tone.Transport.start();\n  }\n\n  componentDidMount() {\n    this.generateRandom();\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state;\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000);\n\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      });\n\n      this.changeDistortionValue(\"distortion\", random / 30);\n      this.changeFreeverbValue(\"freeverb\", random / 30);\n      this.changeAutoFilterValue(\"autoFilter\", random / 30);\n    }\n\n    setTimeout(() => this.generateRandom(), timeout);\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName];\n\n    on == true ? loop.stop() : loop.start(\"0m\");\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    });\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeAutoPannerWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.distortion = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackEffectValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackEffect;\n\n    effect.feedbackEffect = value;\n\n    this.setState({\n      feedbackEffect: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changePhaserValue(effectName, value) {\n    let { effect, wet, on } = this.state.phaser;\n\n    effect.phaser = value;\n\n    this.setState({\n      phaser: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeJCReverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.jCReverb;\n\n    effect.jCReverb = value;\n\n    this.setState({\n      jCReverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectValue(effectName, value) {\n    let { effect, wet, on } = this.state.effect;\n\n    effect.effect = value;\n\n    this.setState({\n      effect: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeConvolverValue(effectName, value) {\n    let { effect, wet, on } = this.state.convolver;\n\n    effect.convolver = value;\n\n    this.setState({\n      convolver: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeChorusValue(effectName, value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.chorus = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeTremoloValue(effectName, value) {\n    let { effect, wet, on } = this.state.tremolo;\n\n    effect.tremolo = value;\n\n    this.setState({\n      tremolo: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeAutoPannerValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.autoPanner = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeBitCrasherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.bits = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFreeverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb;\n\n    effect.freeverb = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeAutoFilterValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoFilter;\n\n    effect.autoFilter = value;\n\n    this.setState({\n      autoFilter: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeAutoWahValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.baseFrequency = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeChebyshevValue(effectName, value) {\n    let { effect, wet, on } = this.state.chebyshev;\n\n    effect.chebyshev = value;\n\n    this.setState({\n      chebyshev: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay;\n\n    effect.maxDelay = value;\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeVibratoValue(effectName, value) {\n    let { effect, wet, on } = this.state.vibrato;\n\n    effect.vibrato = value;\n\n    this.setState({\n      vibrato: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackDelayWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changePhaserWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeJCReverbWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeConvolverWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeChorusWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeTremoloWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeChebyshevWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeBitCrasherWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeVibratoWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let {\n      distortion,\n      feedbackDelay,\n      autoPanner,\n      bitCrusher,\n      chebyshev,\n      autoFilter,\n      autoWah,\n      freeverb,\n      vibrato,\n      tremolo,\n      chorus,\n      convolver,\n      effect,\n      feedbackEffect,\n      jCReverb,\n      phaser,\n\n      synth,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      loop5\n    } = this.state;\n    let { toggleEffect } = this;\n\n    return (\n      <div>\n        <div className=\"LoopContainer\">\n          <PlaySwitch\n            name=\"play\"\n            value={loop1.on}\n            handleToggleClick={() => this.toggleLoop(\"loop1\")}\n          />\n\n          <PlaySwitch\n            name=\"play\"\n            value={loop2.on}\n            handleToggleClick={() => this.toggleLoop(\"loop2\")}\n          />\n\n          <PlaySwitch\n            name=\"play\"\n            value={loop3.on}\n            handleToggleClick={() => this.toggleLoop(\"loop3\")}\n          />\n\n          <PlaySwitch\n            name=\"play\"\n            value={loop4.on}\n            handleToggleClick={() => this.toggleLoop(\"loop4\")}\n          />\n\n          <PlaySwitch\n            name=\"play\"\n            value={loop5.on}\n            handleToggleClick={() => this.toggleLoop(\"loop5\")}\n          />\n        </div>\n        <div className=\"effectsBoard\">\n          <div className=\"DistortionSynth1\">\n            <Distortion\n              {...this.state.distortion}\n              toggleEffect={() => toggleEffect(\"distortion\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeDistortionValue={this.changeDistortionValue}\n            />\n          </div>\n          <div className=\"DistortionSynth2\">\n            <FeedbackDelay\n              {...this.state.feedbackDelay}\n              toggleEffect={() => toggleEffect(\"feedbackDelay\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n            />\n          </div>\n          <div className=\"DistortionSynth3\">\n            <BitCrusher\n              {...this.state.bitCrusher}\n              toggleEffect={() => toggleEffect(\"bitCrusher\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeBitCrusherValue={this.changeBitCrusherValue}\n            />\n          </div>\n          <div className=\"DistortionSynth4\">\n            <Chebyshev\n              {...this.state.chebyshev}\n              toggleEffect={() => toggleEffect(\"chebyshev\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeChebyshevValue={this.changeChebyshevValue}\n            />\n          </div>\n        </div>\n        <div className=\"effectsBoard2\">\n          <div className=\"DistortionSynth5\">\n            <AutoPanner\n              {...this.state.autoPanner}\n              toggleEffect={() => toggleEffect(\"autoPanner\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeAutoPannerValue={this.changeAutoPannerValue}\n            />\n          </div>\n          <div className=\"DistortionSynth6\">\n            <AutoFilter\n              {...this.state.autoFilter}\n              toggleEffect={() => toggleEffect(\"autoFilter\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeAutoFilterValue={this.changeAutoFilterValue}\n            />\n          </div>\n          <div className=\"DistortionSynth7\">\n            <AutoWah\n              {...this.state.autoWah}\n              toggleEffect={() => toggleEffect(\"autoWah\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeAutoWahValue={this.changeAutoWahValue}\n            />\n          </div>\n          <div className=\"DistortionSynth8\">\n            <Freeverb\n              {...this.state.freeverb}\n              toggleEffect={() => toggleEffect(\"freeverb\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeFreeverbValue={this.changeFreeverbValue}\n            />\n          </div>\n        </div>\n        <div className=\"effectsBoard3\">\n          <div className=\"DistortionSynth9\">\n            <Vibrato\n              {...this.state.vibrato}\n              toggleEffect={() => toggleEffect(\"vibrato\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeVibratoValue={this.changeVibratoValue}\n            />\n          </div>\n          <div className=\"DistortionSynth10\">\n            <Tremolo\n              {...this.state.tremolo}\n              toggleEffect={() => toggleEffect(\"tremolo\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeTremoloValue={this.changeTremoloValue}\n            />\n          </div>\n          <div className=\"DistortionSynth11\">\n            <Chorus\n              {...this.state.chorus}\n              toggleEffect={() => toggleEffect(\"chorus\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeChorusValue={this.changeChorusValue}\n            />\n          </div>\n          <div className=\"DistortionSynth12\">\n            <Convolver\n              {...this.state.convolver}\n              toggleEffect={() => toggleEffect(\"convolver\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeConvolverValue={this.changeConvolverValue}\n            />\n          </div>\n        </div>\n        <div className=\"effectsBoard4\">\n          <div className=\"DistortionSynth13\">\n            <Effect\n              {...this.state.effect}\n              toggleEffect={() => toggleEffect(\"effect\")}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeEffectValue={this.changeEffectValue}\n            />\n          </div>\n          <div className=\"DistortionSynth14\">\n            <FeedbackEffect\n              {...this.state.feedbackEffect}\n              toggleEffect={() => toggleEffect(\"feedbackEffect\")}\n              changeEffectWetValue={this.changeFeedbackEffectWetValue}\n              changeFeedbackEffectValue={this.changeFeedbackEffectValue}\n            />\n          </div>\n          <div className=\"DistortionSynth15\">\n            <JCReverb\n              {...this.state.jCReverb}\n              toggleEffect={() => toggleEffect(\"jCReverb\")}\n              changeEffectWetValue={this.changeJCReverbWetValue}\n              changeJCReverbValue={this.changeJCReverbValue}\n            />\n          </div>\n          <div className=\"DistortionSynth16\">\n            <Phaser\n              {...this.state.phaser}\n              toggleEffect={() => toggleEffect(\"phaser\")}\n              changeEffectWetValue={this.changePhaserWetValue}\n              changePhaserValue={this.changePhaserValue}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}