{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/components/effects/Distortion.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport PlaySwitch from \"../PlaySwitch\";\nimport ToggleSwitch from \"../ToggleSwitch\";\nimport Slider from \"../Slider\";\nimport Knob from \"../Knob\";\n\nvar Distortion =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Distortion, _React$Component);\n\n  function Distortion(props) {\n    _classCallCheck(this, Distortion);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Distortion).call(this, props));\n  }\n\n  _createClass(Distortion, [{\n    key: \"render\",\n    value: function render() {\n      var name = \"distortion\";\n      var _this$props = this.props,\n          effect = _this$props.effect,\n          on = _this$props.on,\n          toggleEffect = _this$props.toggleEffect,\n          changeEffectWetValue = _this$props.changeEffectWetValue,\n          changeDistortionValue = _this$props.changeDistortionValue;\n      return React.createElement(\"div\", {\n        className: \"Effect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Distortion\"), React.createElement(\"div\", {\n        className: \"controlsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"controlsRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Wet\"), React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"1\",\n        value: effect.wet.value,\n        handleValueChange: changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"controlsRow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Distortion\"), React.createElement(Slider, {\n        name: name,\n        min: \"0\",\n        max: \"100\",\n        value: effect.distortion,\n        handleValueChange: changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(ToggleSwitch, {\n        value: \"Distortion\",\n        current: on,\n        handleClick: toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), \"Bit Crusher\", React.createElement(Slider, {\n        min: \"1\",\n        max: \"10\",\n        value: bitCrusher.effect.bitCrusher,\n        handleValueChange: this.changebitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \"Change Bit Crusher Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: bitCrusher.effect.wet.value,\n        handleValueChange: this.changebitCrusherWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Bit Crusher\",\n        current: bitCrusher.on,\n        handleClick: this.toggleBitCrusher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"Auto Panner\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoPanner.effect.autoPanner,\n        handleValueChange: this.changeautoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \"Change Auto Panner Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: autoPanner.effect.wet.value,\n        handleValueChange: this.changeautoPannerWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"AutoPanner\",\n        current: autoPanner.on,\n        handleClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \"Auto Wah\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoWah.effect.autoWah,\n        handleValueChange: this.changeautoWahValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), \"Change Auto Wah Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"8\",\n        value: autoWah.effect.wet.value,\n        handleValueChange: this.changeautoWahWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Auto Wah\",\n        current: autoWah.on,\n        handleClick: this.toggleAutoWah,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \"Chorus\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), \"Change Chorus Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: chorus.effect.wet.value,\n        handleValueChange: this.changechorusWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Chorus\",\n        current: chorus.on,\n        handleClick: this.toggleChorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \"Freeverb\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), \"Change Freeverb Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: freeverb.effect.wet.value,\n        handleValueChange: this.changefreeverbWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Freeverb\",\n        current: freeverb.on,\n        handleClick: this.toggleFreeverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Distortion;\n}(React.Component);\n\nexport { Distortion as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/components/effects/Distortion.jsx"],"names":["React","PlaySwitch","ToggleSwitch","Slider","Knob","Distortion","props","name","effect","on","toggleEffect","changeEffectWetValue","changeDistortionValue","wet","value","distortion","bitCrusher","changebitCrusherValue","changebitCrusherWetValue","toggleBitCrusher","autoPanner","changeautoPannerValue","changeautoPannerWetValue","toggleAutoPanner","autoWah","changeautoWahValue","changeautoWahWetValue","toggleAutoWah","chorus","changechorusValue","changechorusWetValue","toggleChorus","freeverb","changefreeverbWetValue","toggleFreeverb","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport PlaySwitch from \"../PlaySwitch\";\nimport ToggleSwitch from \"../ToggleSwitch\";\nimport Slider from \"../Slider\";\nimport Knob from \"../Knob\";\n\nexport default class Distortion extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let name = \"distortion\";\n    const {\n      effect,\n      on,\n      toggleEffect,\n      changeEffectWetValue,\n      changeDistortionValue\n    } = this.props;\n\n    return (\n      <div className=\"Effect\">\n        <h1>Distortion</h1>\n        <div className=\"controlsContainer\">\n          <div className=\"controlsRow\">\n            <h2>Wet</h2>\n\n            <Slider\n              name={name}\n              min=\"0\"\n              max=\"1\"\n              value={effect.wet.value}\n              handleValueChange={changeEffectWetValue}\n            />\n          </div>\n\n          <div className=\"controlsRow\">\n            <h2>Distortion</h2>\n            <Slider\n              name={name}\n              min=\"0\"\n              max=\"100\"\n              value={effect.distortion}\n              handleValueChange={changeDistortionValue}\n            />\n          </div>\n        </div>\n        <ToggleSwitch\n          value=\"Distortion\"\n          current={on}\n          handleClick={toggleEffect}\n        />\n        Bit Crusher\n        <Slider\n          min=\"1\"\n          max=\"10\"\n          value={bitCrusher.effect.bitCrusher}\n          handleValueChange={this.changebitCrusherValue}\n        />\n        Change Bit Crusher Wet Value\n        <Slider\n          min=\"0\"\n          max=\"10\"\n          value={bitCrusher.effect.wet.value}\n          handleValueChange={this.changebitCrusherWetValue}\n        />\n        <ToggleSwitch\n          value=\"Bit Crusher\"\n          current={bitCrusher.on}\n          handleClick={this.toggleBitCrusher}\n        />\n        Auto Panner\n        <Slider\n          min=\"0\"\n          max=\"100\"\n          value={autoPanner.effect.autoPanner}\n          handleValueChange={this.changeautoPannerValue}\n        />\n        Change Auto Panner Wet Value\n        <Slider\n          min=\"0\"\n          max=\"10\"\n          value={autoPanner.effect.wet.value}\n          handleValueChange={this.changeautoPannerWetValue}\n        />\n        <ToggleSwitch\n          value=\"AutoPanner\"\n          current={autoPanner.on}\n          handleClick={this.toggleAutoPanner}\n        />\n        Auto Wah\n        <Slider\n          min=\"0\"\n          max=\"100\"\n          value={autoWah.effect.autoWah}\n          handleValueChange={this.changeautoWahValue}\n        />\n        Change Auto Wah Wet Value\n        <Slider\n          min=\"0\"\n          max=\"8\"\n          value={autoWah.effect.wet.value}\n          handleValueChange={this.changeautoWahWetValue}\n        />\n        <ToggleSwitch\n          value=\"Auto Wah\"\n          current={autoWah.on}\n          handleClick={this.toggleAutoWah}\n        />\n        Chorus\n        <Slider\n          min=\"1.5\"\n          max=\"10\"\n          value={chorus.effect.chorus}\n          handleValueChange={this.changechorusValue}\n        />\n        Change Chorus Wet Value\n        <Slider\n          min=\"0\"\n          max=\"5\"\n          value={chorus.effect.wet.value}\n          handleValueChange={this.changechorusWetValue}\n        />\n        <ToggleSwitch\n          value=\"Chorus\"\n          current={chorus.on}\n          handleClick={this.toggleChorus}\n        />\n        Freeverb\n        <Slider\n          min=\"1.5\"\n          max=\"10\"\n          value={chorus.effect.chorus}\n          handleValueChange={this.changechorusValue}\n        />\n        Change Freeverb Wet Value\n        <Slider\n          min=\"0\"\n          max=\"5\"\n          value={freeverb.effect.wet.value}\n          handleValueChange={this.changefreeverbWetValue}\n        />\n        <ToggleSwitch\n          value=\"Freeverb\"\n          current={freeverb.on}\n          handleClick={this.toggleFreeverb}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}