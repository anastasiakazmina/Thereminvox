{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n    var autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var loop = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n    distortion.wet.value = 0;\n    var synth = new Tone.Synth();\n    synth.chain(distortion, autoPanner, autoWah, bitCrusher, chorus, freeverb, Tone.Master);\n    _this.state = {\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frequency: 1.5\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false,\n        roomSize: 1\n      },\n      loop: loop\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"toggleSynth\", \"toggleDistortion\", \"changeDistortionWetValue\", \"changeDistortionValue\", \"toggleAutoPanner\", \"changeautoPannerValue\", \"changeautoPannerWetValue\", \"toggleAutoWah\", \"changeautoWahValue\", \"changeautoWahWetValue\", \"toggleBitCrusher\", \"changebitCrusherValue\", \"changebitCrusherWetValue\", \"toggleChorus\", \"changechorusValue\", \"changechorusWetValue\", \"toggleFreeverb\", \"changefreeverbValue\", \"changefreeverbWetValue\", \"changechorusWetValue\");\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleSynth\",\n    value: function toggleSynth() {\n      var _this$state = this.state,\n          synth = _this$state.synth,\n          loop = _this$state.loop;\n      var instrument = synth.instrument,\n          on = synth.on;\n      on == true ? loop.stop() : loop.start(\"0m\");\n      this.setState({\n        synth: {\n          instrument: instrument,\n          on: !on\n        }\n      });\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          on = _this$state$autoPanne.on;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleBitCrusher\",\n    value: function toggleBitCrusher() {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          on = _this$state$bitCrushe.on;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleFreeverb\",\n    value: function toggleFreeverb() {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          on = _this$state$freeverb.on;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleChorus\",\n    value: function toggleChorus() {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          on = _this$state$chorus.on,\n          frequency = _this$state$chorus.frequency;\n      this.setState({\n        chorus: {\n          effect: effect,\n          on: on,\n          frequency: frequency\n        }\n      });\n    }\n  }, {\n    key: \"toggleAutoWah\",\n    value: function toggleAutoWah() {\n      var _this$state$autoWah = this.state.autoWah,\n          effect = _this$state$autoWah.effect,\n          wet = _this$state$autoWah.wet,\n          on = _this$state$autoWah.on;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionWetValue\",\n    value: function changeDistortionWetValue(value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(value) {\n      var _this$state$distortio3 = this.state.distortion,\n          effect = _this$state$distortio3.effect,\n          wet = _this$state$distortio3.wet,\n          on = _this$state$distortio3.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahValue\",\n    value: function changeautoWahValue(value) {\n      var _this$state$autoWah2 = this.state.autoWah,\n          effect = _this$state$autoWah2.effect,\n          wet = _this$state$autoWah2.wet,\n          on = _this$state$autoWah2.on;\n      effect.autoWah = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahWetValue\",\n    value: function changeautoWahWetValue(value) {\n      var _this$state$autoWah3 = this.state.autoWah,\n          effect = _this$state$autoWah3.effect,\n          wet = _this$state$autoWah3.wet,\n          on = _this$state$autoWah3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerValue\",\n    value: function changeautoPannerValue(value) {\n      var _this$state$autoPanne2 = this.state.autoPanner,\n          effect = _this$state$autoPanne2.effect,\n          wet = _this$state$autoPanne2.wet,\n          on = _this$state$autoPanne2.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerWetValue\",\n    value: function changeautoPannerWetValue(value) {\n      var _this$state$autoPanne3 = this.state.autoPanner,\n          effect = _this$state$autoPanne3.effect,\n          wet = _this$state$autoPanne3.wet,\n          on = _this$state$autoPanne3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherValue\",\n    value: function changebitCrusherValue(value) {\n      var _this$state$bitCrushe2 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe2.effect,\n          wet = _this$state$bitCrushe2.wet,\n          on = _this$state$bitCrushe2.on;\n      effect.wet.value = on == true ? value : 0;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherWetValue\",\n    value: function changebitCrusherWetValue(value) {\n      var _this$state$bitCrushe3 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe3.effect,\n          wet = _this$state$bitCrushe3.wet,\n          on = _this$state$bitCrushe3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbValue\",\n    value: function changefreeverbValue(value) {\n      var _this$state$freeverb2 = this.state.freeverb,\n          effect = _this$state$freeverb2.effect,\n          wet = _this$state$freeverb2.wet,\n          on = _this$state$freeverb2.on,\n          roomSize = _this$state$freeverb2.roomSize;\n      effect.roomSize = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbWetValue\",\n    value: function changefreeverbWetValue(value) {\n      var _this$state$freeverb3 = this.state.freeverb,\n          effect = _this$state$freeverb3.effect,\n          wet = _this$state$freeverb3.wet,\n          on = _this$state$freeverb3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusValue\",\n    value: function changechorusValue(value) {\n      var _this$state$chorus2 = this.state.chorus,\n          effect = _this$state$chorus2.effect,\n          wet = _this$state$chorus2.wet,\n          on = _this$state$chorus2.on;\n      effect.chorus = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusWetValue\",\n    value: function changechorusWetValue(value) {\n      var _this$state$chorus3 = this.state.chorus,\n          effect = _this$state$chorus3.effect,\n          wet = _this$state$chorus3.wet,\n          on = _this$state$chorus3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth,\n          autoPanner = _this$state2.autoPanner,\n          autoWah = _this$state2.autoWah,\n          bitCrusher = _this$state2.bitCrusher,\n          chorus = _this$state2.chorus,\n          freeverb = _this$state2.freeverb;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"BoxPlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: synth.on,\n        handleToggleClick: this.toggleSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Change Distortion Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeDistortionWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }), \"Change Distortion Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: distortion.effect.distortion,\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Distortion\",\n        current: distortion.on,\n        handleClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \"Bit Crusher\", React.createElement(Slider, {\n        min: \"1\",\n        max: \"10\",\n        value: bitCrusher.effect.bitCrusher,\n        handleValueChange: this.changebitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }), \"Change Bit Crusher Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: bitCrusher.effect.wet.value,\n        handleValueChange: this.changebitCrusherWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Bit Crusher\",\n        current: bitCrusher.on,\n        handleClick: this.toggleBitCrusher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"Auto Panner\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoPanner.effect.autoPanner,\n        handleValueChange: this.changeautoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }), \"Change Auto Panner Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: autoPanner.effect.wet.value,\n        handleValueChange: this.changeautoPannerWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"AutoPanner\",\n        current: autoPanner.on,\n        handleClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, \"Auto Wah\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoWah.effect.autoWah,\n        handleValueChange: this.changeautoWahValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }), \"Change Auto Wah Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"8\",\n        value: autoWah.effect.wet.value,\n        handleValueChange: this.changeautoWahWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Auto Wah\",\n        current: autoWah.on,\n        handleClick: this.toggleAutoWah,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"Chorus\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }), \"Change Chorus Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: chorus.effect.wet.value,\n        handleValueChange: this.changechorusWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Chorus\",\n        current: chorus.on,\n        handleClick: this.toggleChorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        min: \"0\",\n        max: \"10\",\n        value: chorus.effect.frequency,\n        handleValueChange: this.changechorusFrequency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, \"Freeverb\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }), \"Change Freeverb Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: freeverb.effect.wet.value,\n        handleValueChange: this.changefreeverbWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Freeverb\",\n        current: freeverb.on,\n        handleClick: this.toggleFreeverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","Synth","props","distortion","Distortion","oversample","autoPanner","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoWah","AutoWah","sensitivity","gain","follower","attack","release","chorus","Chorus","delayTime","spread","bitCrusher","BitCrusher","bits","freeverb","Freeverb","roomSize","dampening","loop","Loop","time","synth","triggerAttackRelease","wet","value","chain","Master","state","effect","on","instrument","bindAll","stop","start","setState","Transport","bpm","toggleSynth","changeDistortionWetValue","changeDistortionValue","toggleDistortion","changebitCrusherValue","changebitCrusherWetValue","toggleBitCrusher","changeautoPannerValue","changeautoPannerWetValue","toggleAutoPanner","changeautoWahValue","changeautoWahWetValue","toggleAutoWah","changechorusValue","changechorusWetValue","toggleChorus","changechorusFrequency","changefreeverbWetValue","toggleFreeverb","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n\n    let autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    distortion.wet.value = 0;\n\n    let synth = new Tone.Synth();\n    synth.chain(\n      distortion,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb,\n      Tone.Master\n    );\n\n    this.state = {\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false, frequency: 1.5 },\n      freeverb: { effect: freeverb, wet: 0, on: false, roomSize: 1 },\n      loop\n    };\n\n    _.bindAll(\n      this,\n      \"toggleSynth\",\n      \"toggleDistortion\",\n      \"changeDistortionWetValue\",\n      \"changeDistortionValue\",\n      \"toggleAutoPanner\",\n      \"changeautoPannerValue\",\n      \"changeautoPannerWetValue\",\n      \"toggleAutoWah\",\n      \"changeautoWahValue\",\n      \"changeautoWahWetValue\",\n      \"toggleBitCrusher\",\n      \"changebitCrusherValue\",\n      \"changebitCrusherWetValue\",\n      \"toggleChorus\",\n      \"changechorusValue\",\n      \"changechorusWetValue\",\n      \"toggleFreeverb\",\n      \"changefreeverbValue\",\n      \"changefreeverbWetValue\",\n      \"changechorusWetValue\"\n    );\n  }\n\n  toggleSynth() {\n    let { synth, loop } = this.state;\n    let { instrument, on } = synth;\n\n    on == true ? loop.stop() : loop.start(\"0m\");\n\n    this.setState({\n      synth: {\n        instrument: instrument,\n        on: !on\n      }\n    });\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleDistortion() {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  toggleAutoPanner() {\n    let { effect, on } = this.state.autoPanner;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleBitCrusher() {\n    let { effect, on } = this.state.bitCrusher;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleFreeverb() {\n    let { effect, on } = this.state.freeverb;\n\n    this.setState({\n      freeverb: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleChorus() {\n    let { effect, on, frequency } = this.state.chorus;\n\n    this.setState({\n      chorus: {\n        effect,\n        on,\n        frequency\n      }\n    });\n  }\n\n  toggleAutoWah() {\n    let { effect, wet, on } = this.state.autoWah;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionWetValue(value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionValue(value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.distortion = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.autoWah = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahWetValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.baseFrequency = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerWetValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.wet.value = on == true ? value : 0;\n    effect.bits = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherWetValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbValue(value) {\n    let { effect, wet, on, roomSize } = this.state.freeverb;\n\n    effect.roomSize = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbWetValue(value) {\n    let { effect, wet, on } = this.state.freeverb;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.chorus = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusWetValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let {\n      distortion,\n      synth,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb\n    } = this.state;\n    return (\n      <div>\n        <div className=\"Box\">\n          <div className=\"BoxPlay\">\n            <PlaySwitch\n              name=\"play\"\n              value={synth.on}\n              handleToggleClick={this.toggleSynth}\n            />\n          </div>\n          <div className=\"DistortionBox\">\n            Change Distortion Wet Value\n            <Slider\n              min=\"0\"\n              max=\"1\"\n              value={distortion.effect.wet.value}\n              handleValueChange={this.changeDistortionWetValue}\n            />\n            Change Distortion Value\n            <Slider\n              min=\"0\"\n              max=\"100\"\n              value={distortion.effect.distortion}\n              handleValueChange={this.changeDistortionValue}\n            />\n            <ToggleSwitch\n              value=\"Distortion\"\n              current={distortion.on}\n              handleClick={this.toggleDistortion}\n            />\n          </div>\n          <div className=\"DistortionBox2\">\n            Bit Crusher\n            <Slider\n              min=\"1\"\n              max=\"10\"\n              value={bitCrusher.effect.bitCrusher}\n              handleValueChange={this.changebitCrusherValue}\n            />\n            Change Bit Crusher Wet Value\n            <Slider\n              min=\"0\"\n              max=\"10\"\n              value={bitCrusher.effect.wet.value}\n              handleValueChange={this.changebitCrusherWetValue}\n            />\n            <ToggleSwitch\n              value=\"Bit Crusher\"\n              current={bitCrusher.on}\n              handleClick={this.toggleBitCrusher}\n            />\n          </div>\n          <div className=\"DistortionBox\">\n            Auto Panner\n            <Slider\n              min=\"0\"\n              max=\"100\"\n              value={autoPanner.effect.autoPanner}\n              handleValueChange={this.changeautoPannerValue}\n            />\n            Change Auto Panner Wet Value\n            <Slider\n              min=\"0\"\n              max=\"10\"\n              value={autoPanner.effect.wet.value}\n              handleValueChange={this.changeautoPannerWetValue}\n            />\n            <ToggleSwitch\n              value=\"AutoPanner\"\n              current={autoPanner.on}\n              handleClick={this.toggleAutoPanner}\n            />\n          </div>\n          <div className=\"DistortionBox3\">\n            Auto Wah\n            <Slider\n              min=\"0\"\n              max=\"100\"\n              value={autoWah.effect.autoWah}\n              handleValueChange={this.changeautoWahValue}\n            />\n            Change Auto Wah Wet Value\n            <Slider\n              min=\"0\"\n              max=\"8\"\n              value={autoWah.effect.wet.value}\n              handleValueChange={this.changeautoWahWetValue}\n            />\n            <ToggleSwitch\n              value=\"Auto Wah\"\n              current={autoWah.on}\n              handleClick={this.toggleAutoWah}\n            />\n          </div>\n\n          <div className=\"DistortionBox\">\n            Chorus\n            <Slider\n              min=\"1.5\"\n              max=\"10\"\n              value={chorus.effect.chorus}\n              handleValueChange={this.changechorusValue}\n            />\n            Change Chorus Wet Value\n            <Slider\n              min=\"0\"\n              max=\"5\"\n              value={chorus.effect.wet.value}\n              handleValueChange={this.changechorusWetValue}\n            />\n            <ToggleSwitch\n              value=\"Chorus\"\n              current={chorus.on}\n              handleClick={this.toggleChorus}\n            />\n            <ToggleSwitch\n              min=\"0\"\n              max=\"10\"\n              value={chorus.effect.frequency}\n              handleValueChange={this.changechorusFrequency}\n            />\n          </div>\n          <div className=\"DistortionBox4\">\n            Freeverb\n            <Slider\n              min=\"1.5\"\n              max=\"10\"\n              value={chorus.effect.chorus}\n              handleValueChange={this.changechorusValue}\n            />\n            Change Freeverb Wet Value\n            <Slider\n              min=\"0\"\n              max=\"5\"\n              value={freeverb.effect.wet.value}\n              handleValueChange={this.changefreeverbWetValue}\n            />\n            <ToggleSwitch\n              value=\"Freeverb\"\n              current={freeverb.on}\n              handleClick={this.toggleFreeverb}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}