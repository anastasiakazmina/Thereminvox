{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport Tone from \"tone\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n    var feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n    distortion.wet.value = 0;\n    autoFilter.wet.value = 0;\n    feedbackDelay1.wet.value = 0;\n    feedbackDelay2.wet.value = 0;\n    tremolo.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    vibrato.wet.value = 0;\n    var synth = new Tone.Synth();\n    synth.chain(distortion, autoFilter, feedbackDelay1, feedbackDelay2, tremolo, autoPanner, autoWah, bitCrusher, chebyshev, chorus, convolver, effect, feedbackEffect, freeverb, jcReverb, phaser, pingPongDelay, pitchShift, reverb, stereoWidener, vibrato, Tone.Master);\n    _this.state = (_this$state = {\n      synth: synth,\n      tremolo: tremolo,\n      tremoloIsOn: tremoloIsOn,\n      distortion: distortion,\n      distortionIsOn: distortionIsOn,\n      autoFilter: autoFilter,\n      feedbackDelay1: feedbackDelay1,\n      feedbackDelay1IsOn: feedbackDelay1IsOn,\n      feedbackDelay2: feedbackDelay2,\n      feedbackDelay2IsOn: feedbackDelay2IsOn\n    }, _defineProperty(_this$state, \"autoFilter\", autoFilter), _defineProperty(_this$state, \"autoFilterIsOn\", autoFilterIsOn), _defineProperty(_this$state, \"autoPanner\", autoPanner), _defineProperty(_this$state, \"autoPannerIsOn\", autoPannerIsOn), _defineProperty(_this$state, \"autoWah\", autoWah), _defineProperty(_this$state, \"autoWahIsOn\", autoWahIsOn), _defineProperty(_this$state, \"bitCrusher\", bitCrusher), _defineProperty(_this$state, \"bitCrusherIsOn\", bitCrusherIsOn), _defineProperty(_this$state, \"chebyshev\", chebyshev), _defineProperty(_this$state, \"chebyshevIsOn\", chebyshevIsOn), _defineProperty(_this$state, \"chorus\", chorus), _defineProperty(_this$state, \"chorusIsOn\", chorusIsOn), _defineProperty(_this$state, \"convolver\", convolver), _defineProperty(_this$state, \"convolverIsOn\", convolverIsOn), _defineProperty(_this$state, \"effect\", effect), _defineProperty(_this$state, \"effectIsOn\", effectIsOn), _defineProperty(_this$state, \"feedbackEffect\", feedbackEffect), _defineProperty(_this$state, \"feedbackEffectIsO\", feedbackEffectIsO), _defineProperty(_this$state, \"freeverb\", freeverb), _defineProperty(_this$state, \"freeverbIsOn\", freeverbIsOn), _defineProperty(_this$state, \"jcReverb\", jcReverb), _defineProperty(_this$state, \"jcReverbIsOn\", jcReverbIsOn), _defineProperty(_this$state, \"phaser\", phaser), _defineProperty(_this$state, \"phaserIsOn\", phaserIsOn), _defineProperty(_this$state, \"pingPongDelay\", pingPongDelay), _defineProperty(_this$state, \"pingPongDelayIsOn\", pingPongDelayIsOn), _defineProperty(_this$state, \"pitchShift\", pitchShift), _defineProperty(_this$state, \"pitchShiftIsOn\", pitchShiftIsOn), _defineProperty(_this$state, \"reverb\", reverb), _defineProperty(_this$state, \"reverbIsOn\", reverbIsOn), _defineProperty(_this$state, \"stereoWidener\", stereoWidener), _defineProperty(_this$state, \"stereoWidenerIsOn\", stereoWidenerIsOn), _defineProperty(_this$state, \"vibrato\", vibrato), _defineProperty(_this$state, \"vibratoIsOn\", vibratoIsOn), _this$state);\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = this.state.synth;\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease(\"C2\", \"8n\", time);\n      }, \"4n\");\n      loop.start(\"0m\").stop(\"16m\");\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      var distortion = this.state.distortion;\n      distortion.wet.value = 1;\n      this.setState({\n        distortion: distortion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Start\"));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","distortion","Distortion","oversample","tremolo","Tremolo","frequency","type","depth","spread","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","feedbackDelay1","FeedbackDelay","delayTime","maxDelay","feedbackDelay2","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","vibrato","Vibrato","value","synth","chain","Master","state","tremoloIsOn","distortionIsOn","feedbackDelay1IsOn","feedbackDelay2IsOn","autoFilterIsOn","autoPannerIsOn","autoWahIsOn","bitCrusherIsOn","chebyshevIsOn","chorusIsOn","convolverIsOn","effectIsOn","feedbackEffectIsO","freeverbIsOn","jcReverbIsOn","phaserIsOn","pingPongDelayIsOn","pitchShiftIsOn","reverbIsOn","stereoWidenerIsOn","vibratoIsOn","startSynth","bind","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","setState","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tone from \"tone\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n\n    let effect = new Tone.Effect({\n      wet: 1\n    });\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n\n    distortion.wet.value = 0;\n    autoFilter.wet.value = 0;\n    feedbackDelay1.wet.value = 0;\n    feedbackDelay2.wet.value = 0;\n    tremolo.wet.value = 0;\n    autoPanner.wet.value = 0;\n    autoWah.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    chebyshev.wet.value = 0;\n    chorus.wet.value = 0;\n    convolver.wet.value = 0;\n    effect.wet.value = 0;\n    feedbackEffect.wet.value = 0;\n    freeverb.wet.value = 0;\n    jcReverb.wet.value = 0;\n    phaser.wet.value = 0;\n    pingPongDelay.wet.value = 0;\n    pitchShift.wet.value = 0;\n    reverb.wet.value = 0;\n    stereoWidener.wet.value = 0;\n    vibrato.wet.value = 0;\n\n    let synth = new Tone.Synth();\n    synth.chain(\n      distortion,\n      autoFilter,\n      feedbackDelay1,\n      feedbackDelay2,\n      tremolo,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chebyshev,\n      chorus,\n      convolver,\n      effect,\n      feedbackEffect,\n      freeverb,\n      jcReverb,\n      phaser,\n      pingPongDelay,\n      pitchShift,\n      reverb,\n      stereoWidener,\n      vibrato,\n      Tone.Master\n    );\n\n    this.state = {\n      synth,\n      tremolo,\n      tremoloIsOn,\n      distortion,\n      distortionIsOn,\n      autoFilter,\n      feedbackDelay1,\n      feedbackDelay1IsOn,\n      feedbackDelay2,\n      feedbackDelay2IsOn,\n      autoFilter,\n      autoFilterIsOn,\n      autoPanner,\n      autoPannerIsOn,\n      autoWah,\n      autoWahIsOn,\n      bitCrusher,\n      bitCrusherIsOn,\n      chebyshev,\n      chebyshevIsOn,\n      chorus,\n      chorusIsOn,\n      convolver,\n      convolverIsOn,\n      effect,\n      effectIsOn,\n      feedbackEffect,\n      feedbackEffectIsO,\n      freeverb,\n      freeverbIsOn,\n      jcReverb,\n      jcReverbIsOn,\n      phaser,\n      phaserIsOn,\n      pingPongDelay,\n      pingPongDelayIsOn,\n      pitchShift,\n      pitchShiftIsOn,\n      reverb,\n      reverbIsOn,\n      stereoWidener,\n      stereoWidenerIsOn,\n      vibrato,\n      vibratoIsOn\n    };\n\n    this.startSynth = this.startSynth.bind(this);\n  }\n\n  startSynth() {\n    let { synth } = this.state;\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    loop.start(\"0m\").stop(\"16m\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleDistortion() {\n    let { distortion } = this.state;\n\n    distortion.wet.value = 1;\n\n    this.setState({\n      distortion\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}