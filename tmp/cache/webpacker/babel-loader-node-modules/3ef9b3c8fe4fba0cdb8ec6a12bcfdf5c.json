{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n    var loop = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n    distortion.wet.value = 0;\n    var synth = new Tone.Synth();\n    synth.chain(distortion, Tone.Master);\n    _this.state = {\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      loop: loop\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"toggleSynth\", \"toggleDistortion\", \"changeDistortionWetValue\", \"changeDistortionValue\");\n\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleSynth\",\n    value: function toggleSynth() {\n      var _this$state = this.state,\n          synth = _this$state.synth,\n          loop = _this$state.loop;\n      var instrument = synth.instrument,\n          on = synth.on;\n      on == true ? loop.stop() : loop.start(\"0m\");\n      this.setState({\n        synth: {\n          instrument: instrument,\n          on: !on\n        }\n      });\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionWetValue\",\n    value: function changeDistortionWetValue(value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(value) {\n      var _this$state$distortio3 = this.state.distortion,\n          effect = _this$state$distortio3.effect,\n          wet = _this$state$distortio3.wet,\n          on = _this$state$distortio3.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Toggle Synth\", React.createElement(ToggleSwitch, {\n        name: \"play\",\n        value: synth.on,\n        handleToggleClick: this.toggleSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), \"Change Distortion Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeDistortionWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), \"change Distortion Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: distortion.effect.distortion,\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), \"Knob\", React.createElement(Knob, {\n        min: \"\",\n        max: \"\",\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), \"ToggleDistortion\", React.createElement(ToggleSwitch, {\n        name: \"play\",\n        value: distortion.on,\n        handleToggleClick: this.toggleSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","ToggleSwitch","Slider","Knob","Synth","props","distortion","Distortion","oversample","loop","Loop","time","synth","triggerAttackRelease","wet","value","chain","Master","state","effect","on","instrument","bindAll","stop","start","setState","Transport","bpm","toggleSynth","changeDistortionWetValue","changeDistortionValue","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    distortion.wet.value = 0;\n\n    let synth = new Tone.Synth();\n    synth.chain(distortion, Tone.Master);\n\n    this.state = {\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      loop\n    };\n\n    _.bindAll(\n      this,\n      \"toggleSynth\",\n      \"toggleDistortion\",\n      \"changeDistortionWetValue\",\n      \"changeDistortionValue\"\n    );\n  }\n\n  toggleSynth() {\n    let { synth, loop } = this.state;\n    let { instrument, on } = synth;\n\n    on == true ? loop.stop() : loop.start(\"0m\");\n\n    this.setState({\n      synth: {\n        instrument: instrument,\n        on: !on\n      }\n    });\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleDistortion() {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionWetValue(value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionValue(value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.distortion = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let { distortion, synth } = this.state;\n    return (\n      <div>\n        Toggle Synth\n        <ToggleSwitch\n          name=\"play\"\n          value={synth.on}\n          handleToggleClick={this.toggleSynth}\n        />\n        Change Distortion Wet Value\n        <Slider\n          min=\"0\"\n          max=\"1\"\n          value={distortion.effect.wet.value}\n          handleValueChange={this.changeDistortionWetValue}\n        />\n        change Distortion Value\n        <Slider\n          min=\"0\"\n          max=\"100\"\n          value={distortion.effect.distortion}\n          handleValueChange={this.changeDistortionValue}\n        />\n        Knob\n        <Knob min=\"\" max=\"\" handleValueChange={this.changeDistortionValue} />\n        ToggleDistortion\n        <ToggleSwitch\n          name=\"play\"\n          value={distortion.on}\n          handleToggleClick={this.toggleSynth}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}