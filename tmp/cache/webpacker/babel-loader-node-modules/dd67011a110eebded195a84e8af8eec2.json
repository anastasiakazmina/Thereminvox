{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n    var autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: \"4n\",\n      maxDelay: 0.8\n    });\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    var synth = new Tone.PolySynth();\n    synth.chain(distortion, autoPanner, autoWah, bitCrusher, chorus, freeverb, feedbackDelay, Tone.Master);\n    var synth1 = new Tone.Synth();\n    var synth2 = new Tone.Synth();\n    var synth3 = new Tone.Synth();\n    var loop1 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"32n\");\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"E2\", \"32n\", time);\n    }, \"1n\");\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"D2\", \"1n\", time);\n    }, \"16n\");\n    var loop4 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"A2\", \"16n\", time);\n    }, \"16n\");\n    _this.state = {\n      lastChange: Date.now(),\n      randomDelay: 0,\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frequency: 1.5\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false,\n        roomSize: 1\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop3,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"toggleLoop\", \"toggleEffect\", \"changeFeedbackDelayWetValue\", \"changeFeedbackDelayValue\", \"changeEffectWetValue\", \"changeDistortionValue\", \"toggleAutoPanner\", \"changeautoPannerValue\", \"changeautoPannerWetValue\", \"toggleAutoWah\", \"changeautoWahValue\", \"changeautoWahWetValue\", \"toggleBitCrusher\", \"changebitCrusherValue\", \"changebitCrusherWetValue\", \"toggleChorus\", \"changechorusValue\", \"changechorusWetValue\", \"toggleFreeverb\", \"changefreeverbValue\", \"changefreeverbWetValue\", \"changechorusWetValue\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start(\"0m\");\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          on = _this$state$autoPanne.on;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleBitCrusher\",\n    value: function toggleBitCrusher() {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          on = _this$state$bitCrushe.on;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleFreeverb\",\n    value: function toggleFreeverb() {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          on = _this$state$freeverb.on;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleChorus\",\n    value: function toggleChorus() {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          on = _this$state$chorus.on,\n          frequency = _this$state$chorus.frequency;\n      this.setState({\n        chorus: {\n          effect: effect,\n          on: on,\n          frequency: frequency\n        }\n      });\n    }\n  }, {\n    key: \"toggleAutoWah\",\n    value: function toggleAutoWah() {\n      var _this$state$autoWah = this.state.autoWah,\n          effect = _this$state$autoWah.effect,\n          wet = _this$state$autoWah.wet,\n          on = _this$state$autoWah.on;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeFeedbackDelayWetValue\",\n    value: function changeFeedbackDelayWetValue(effectName, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahValue\",\n    value: function changeautoWahValue(value) {\n      var _this$state$autoWah2 = this.state.autoWah,\n          effect = _this$state$autoWah2.effect,\n          wet = _this$state$autoWah2.wet,\n          on = _this$state$autoWah2.on;\n      effect.autoWah = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahWetValue\",\n    value: function changeautoWahWetValue(value) {\n      var _this$state$autoWah3 = this.state.autoWah,\n          effect = _this$state$autoWah3.effect,\n          wet = _this$state$autoWah3.wet,\n          on = _this$state$autoWah3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerValue\",\n    value: function changeautoPannerValue(value) {\n      var _this$state$autoPanne2 = this.state.autoPanner,\n          effect = _this$state$autoPanne2.effect,\n          wet = _this$state$autoPanne2.wet,\n          on = _this$state$autoPanne2.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerWetValue\",\n    value: function changeautoPannerWetValue(value) {\n      var _this$state$autoPanne3 = this.state.autoPanner,\n          effect = _this$state$autoPanne3.effect,\n          wet = _this$state$autoPanne3.wet,\n          on = _this$state$autoPanne3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherValue\",\n    value: function changebitCrusherValue(value) {\n      var _this$state$bitCrushe2 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe2.effect,\n          wet = _this$state$bitCrushe2.wet,\n          on = _this$state$bitCrushe2.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherWetValue\",\n    value: function changebitCrusherWetValue(value) {\n      var _this$state$bitCrushe3 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe3.effect,\n          wet = _this$state$bitCrushe3.wet,\n          on = _this$state$bitCrushe3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbValue\",\n    value: function changefreeverbValue(value) {\n      var _this$state$freeverb2 = this.state.freeverb,\n          effect = _this$state$freeverb2.effect,\n          wet = _this$state$freeverb2.wet,\n          on = _this$state$freeverb2.on,\n          roomSize = _this$state$freeverb2.roomSize;\n      effect.roomSize = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbWetValue\",\n    value: function changefreeverbWetValue(value) {\n      var _this$state$freeverb3 = this.state.freeverb,\n          effect = _this$state$freeverb3.effect,\n          wet = _this$state$freeverb3.wet,\n          on = _this$state$freeverb3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusValue\",\n    value: function changechorusValue(value) {\n      var _this$state$chorus2 = this.state.chorus,\n          effect = _this$state$chorus2.effect,\n          wet = _this$state$chorus2.wet,\n          on = _this$state$chorus2.on;\n      effect.chorus = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusWetValue\",\n    value: function changechorusWetValue(value) {\n      var _this$state$chorus3 = this.state.chorus,\n          effect = _this$state$chorus3.effect,\n          wet = _this$state$chorus3.wet,\n          on = _this$state$chorus3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          distortion = _this$state.distortion,\n          synth = _this$state.synth,\n          autoPanner = _this$state.autoPanner,\n          autoWah = _this$state.autoWah,\n          bitCrusher = _this$state.bitCrusher,\n          chorus = _this$state.chorus,\n          freeverb = _this$state.freeverb,\n          feedbackDelay = _this$state.feedbackDelay,\n          loop1 = _this$state.loop1,\n          loop2 = _this$state.loop2,\n          loop3 = _this$state.loop3,\n          loop4 = _this$state.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"Toggle Loop 1\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop(\"loop1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }), \"Toggle Loop 2\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop(\"loop2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }), \"Toggle Loop 3\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop(\"loop3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }), \"Toggle Loop 4\", React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop(\"loop4\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"effectsBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"distortion\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      })), React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"feedbackDelay\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","Synth","props","distortion","oversample","autoPanner","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoFilter","autoWah","AutoWah","sensitivity","gain","follower","attack","release","chorus","Chorus","delayTime","spread","bitCrusher","BitCrusher","bits","freeverb","Freeverb","roomSize","dampening","feedbackDelay","maxDelay","wet","value","synth","PolySynth","chain","Master","synth1","synth2","synth3","loop1","Loop","time","triggerAttackRelease","loop2","loop3","loop4","state","lastChange","Date","now","randomDelay","effect","on","instrument","loop","bindAll","Transport","bpm","start","loopName","stop","setState","effectName","toggleEffect","toggleLoop","changeEffectWetValue","changeDistortionValue","changeFeedbackDelayValue","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n\n    let autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: \"4n\",\n      maxDelay: 0.8\n    });\n\n    distortion.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n\n    let synth = new Tone.PolySynth();\n    synth.chain(\n      distortion,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb,\n      feedbackDelay,\n      Tone.Master\n    );\n    let synth1 = new Tone.Synth();\n    let synth2 = new Tone.Synth();\n    let synth3 = new Tone.Synth();\n\n    let loop1 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"32n\");\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"E2\", \"32n\", time);\n    }, \"1n\");\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"D2\", \"1n\", time);\n    }, \"16n\");\n\n    let loop4 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"A2\", \"16n\", time);\n    }, \"16n\");\n\n    this.state = {\n      lastChange: Date.now(),\n      randomDelay: 0,\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false, frequency: 1.5 },\n      freeverb: { effect: freeverb, wet: 0, on: false, roomSize: 1 },\n      feedbackDelay: { effect: feedbackDelay, wet: 0, on: false },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop3, on: false }\n    };\n\n    _.bindAll(\n      this,\n      \"toggleLoop\",\n      \"toggleEffect\",\n      \"changeFeedbackDelayWetValue\",\n      \"changeFeedbackDelayValue\",\n      \"changeEffectWetValue\",\n      \"changeDistortionValue\",\n      \"toggleAutoPanner\",\n      \"changeautoPannerValue\",\n      \"changeautoPannerWetValue\",\n      \"toggleAutoWah\",\n      \"changeautoWahValue\",\n      \"changeautoWahWetValue\",\n      \"toggleBitCrusher\",\n      \"changebitCrusherValue\",\n      \"changebitCrusherWetValue\",\n      \"toggleChorus\",\n      \"changechorusValue\",\n      \"changechorusWetValue\",\n      \"toggleFreeverb\",\n      \"changefreeverbValue\",\n      \"changefreeverbWetValue\",\n      \"changechorusWetValue\"\n    );\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName];\n\n    on == true ? loop.stop() : loop.start(\"0m\");\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    });\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  toggleAutoPanner() {\n    let { effect, on } = this.state.autoPanner;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleBitCrusher() {\n    let { effect, on } = this.state.bitCrusher;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleFreeverb() {\n    let { effect, on } = this.state.freeverb;\n\n    this.setState({\n      freeverb: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleChorus() {\n    let { effect, on, frequency } = this.state.chorus;\n\n    this.setState({\n      chorus: {\n        effect,\n        on,\n        frequency\n      }\n    });\n  }\n\n  toggleAutoWah() {\n    let { effect, wet, on } = this.state.autoWah;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackDelayWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.distortion = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay;\n\n    effect.maxDelay = value;\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.autoWah = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahWetValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.baseFrequency = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerWetValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.bits = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherWetValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbValue(value) {\n    let { effect, wet, on, roomSize } = this.state.freeverb;\n\n    effect.roomSize = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbWetValue(value) {\n    let { effect, wet, on } = this.state.freeverb;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.chorus = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusWetValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let {\n      distortion,\n      synth,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb,\n      feedbackDelay,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state;\n    let { toggleEffect } = this;\n\n    return (\n      <div>\n        Toggle Loop 1\n        <PlaySwitch\n          name=\"play\"\n          value={loop1.on}\n          handleToggleClick={() => this.toggleLoop(\"loop1\")}\n        />\n        Toggle Loop 2\n        <PlaySwitch\n          name=\"play\"\n          value={loop2.on}\n          handleToggleClick={() => this.toggleLoop(\"loop2\")}\n        />\n        Toggle Loop 3\n        <PlaySwitch\n          name=\"play\"\n          value={loop3.on}\n          handleToggleClick={() => this.toggleLoop(\"loop3\")}\n        />\n        Toggle Loop 4\n        <PlaySwitch\n          name=\"play\"\n          value={loop4.on}\n          handleToggleClick={() => this.toggleLoop(\"loop4\")}\n        />\n        <div className=\"effectsBoard\">\n          <Distortion\n            {...this.state.distortion}\n            toggleEffect={() => toggleEffect(\"distortion\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n          />\n          <FeedbackDelay\n            {...this.state.feedbackDelay}\n            toggleEffect={() => toggleEffect(\"feedbackDelay\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}