{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport Tone from \"tone\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n    var autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    _this.state = (_this$state = {\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      distortion: distortion,\n      distortionIsOn: false,\n      autoFilter: autoFilter,\n      feedbackDelay1: feedbackDelay1\n    }, _defineProperty(_this$state, \"feedbackDelay1\", false), _defineProperty(_this$state, \"autoFilter\", autoFilter), _defineProperty(_this$state, \"autoFilterIsOn\", false), _defineProperty(_this$state, \"autoPanner\", autoPanner), _defineProperty(_this$state, \"autoPannerIsOn\", false), _defineProperty(_this$state, \"autoWah\", autoWah), _defineProperty(_this$state, \"autoWahIsOn\", false), _defineProperty(_this$state, \"bitCrusher\", bitCrusher), _defineProperty(_this$state, \"bitCrusherIsOn\", false), _defineProperty(_this$state, \"chebyshev\", chebyshev), _defineProperty(_this$state, \"chebyshevIsOn\", false), _defineProperty(_this$state, \"chorus\", chorus), _defineProperty(_this$state, \"chorusIsOn\", false), _defineProperty(_this$state, \"convolver\", convolver), _defineProperty(_this$state, \"convolverIsOn\", false), _defineProperty(_this$state, \"effect\", effect), _defineProperty(_this$state, \"effectIsOn\", false), _defineProperty(_this$state, \"feedbackEffect\", feedbackEffect), _defineProperty(_this$state, \"feedbackEffectIsOn\", false), _defineProperty(_this$state, \"freeverb\", freeverb), _defineProperty(_this$state, \"freeverbIsOn\", false), _defineProperty(_this$state, \"jcReverb\", jcReverb), _defineProperty(_this$state, \"jcReverbIsOn\", false), _defineProperty(_this$state, \"phaser\", phaser), _defineProperty(_this$state, \"phaserIsOn\", false), _defineProperty(_this$state, \"pingPongDelay\", pingPongDelay), _defineProperty(_this$state, \"pingPongDelayIsOn\", false), _this$state);\n    _this.startSynth = _this.startSynth.bind(_assertThisInitialized(_this));\n    _this.toggleAutoFilter = _this.toggleAutoFilter.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackDelay = _this.toggleFeedbackDelay.bind(_assertThisInitialized(_this));\n    _this.toggleTremolo = _this.toggleTremolo.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion = _this.toggleDistortion.bind(_assertThisInitialized(_this));\n    _this.toggleDistortion100 = _this.toggleDistortion100.bind(_assertThisInitialized(_this));\n    _this.toggleAutoPanner = _this.toggleAutoPanner.bind(_assertThisInitialized(_this));\n    _this.toggleAutoWah = _this.toggleAutoWah.bind(_assertThisInitialized(_this));\n    _this.toggleBitCrusher = _this.toggleBitCrusher.bind(_assertThisInitialized(_this));\n    _this.toggleChebyshev = _this.toggleChebyshev.bind(_assertThisInitialized(_this));\n    _this.toggleChorus = _this.toggleChorus.bind(_assertThisInitialized(_this));\n    _this.toggleConvolver = _this.toggleConvolver.bind(_assertThisInitialized(_this));\n    _this.toggleEffect = _this.toggleEffect.bind(_assertThisInitialized(_this));\n    _this.toggleFeedbackEffect = _this.toggleFeedbackEffect.bind(_assertThisInitialized(_this));\n    _this.toggleFreeverb = _this.toggleFreeverb.bind(_assertThisInitialized(_this));\n    _this.toggleJCReverb = _this.toggleJCReverb.bind(_assertThisInitialized(_this));\n    _this.togglePhaser = _this.togglePhaser.bind(_assertThisInitialized(_this));\n    _this.togglepingPongDelay = _this.togglepingPongDelay.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"startSynth\",\n    value: function startSynth() {\n      var synth = new Tone.Synth(); //.toMaster();\n\n      synth.chain(this.state.distortion, this.state.autoFilter, this.state.feedbackDelay1, this.state.feedbackDelay2, this.state.tremolo, this.state.autoPanner, this.state.autoWah, this.state.bitCrusher, this.state.chebyshev, this.state.chorus, this.state.convolver, this.state.effect, this.state.feedbackEffect, this.state.freeverb, this.state.jcReverb, this.state.phaser, this.state.pingPongDelay, Tone.Master);\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease(\"C2\", \"8n\", time);\n      }, \"4n\");\n      loop.start(\"0m\").stop(\"16m\");\n      Tone.Transport.bpm.value = 115;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"toggleAutoFilter\",\n    value: function toggleAutoFilter() {\n      var autoFilter = new Tone.AutoFilter({\n        frequency: 1,\n        type: \"sine\",\n        depth: 0,\n        baseFrequency: 200,\n        octaves: 0.6,\n        filter: {\n          type: \"lowpass\",\n          rolloff: -12,\n          Q: 1\n        }\n      });\n      this.setState({\n        autoFilter: autoFilter\n      });\n      var synth = this.state.synth;\n      this.state.synth.connect(autoFilter);\n    }\n  }, {\n    key: \"toggleFeedbackDelay\",\n    value: function toggleFeedbackDelay() {\n      var feedbackDelay1 = new Tone.FeedbackDelay({\n        delayTime: \"32n\",\n        maxDelay: 10\n      }).toMaster();\n      var feedbackDelay2 = new Tone.FeedbackDelay({\n        delayTime: \"8n\",\n        maxDelay: 10\n      }).toMaster();\n      this.state.synth.connect(feedbackDelay1);\n      this.state.synth.connect(feedbackDelay2);\n    }\n  }, {\n    key: \"toggleTremolo\",\n    value: function toggleTremolo() {\n      this.state.synth.connect(tremolo);\n    }\n  }, {\n    key: \"toggleDistortion\",\n    value: function toggleDistortion() {\n      console.log(\"toggle\");\n\n      if (this.state.distortionIsOn == true) {\n        console.log(\"true\");\n        this.state.distortion.wet.value = 0;\n        this.setState({\n          distortionIsOn: false\n        });\n      } else {\n        console.log(\"false\");\n        this.state.synth.chain(this.state.distortion, Tone.Master);\n        this.state.distortion.wet.value = 1;\n        this.setState({\n          distortionIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      console.log(\"autoPlay\");\n\n      if (this.state.autoPannerIsOn == true) {\n        this.state.autoPanner.wet.value = 0;\n        this.setState({\n          autoPannerIsOn: false\n        });\n      } else {\n        this.state.autoPanner.wet.value = 1;\n        this.setState({\n          autoPannerIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleAutoWah\",\n    value: function toggleAutoWah() {\n      if (this.state.autoWahIsOn == true) {\n        this.state.autoWahIsOn.wet.value = 0;\n        this.setState({\n          autoWahIsOn: false\n        });\n      } else {\n        this.state.autoWah.wet.value = 1;\n        this.setState({\n          autoWahIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleBitCrusher\",\n    value: function toggleBitCrusher() {\n      if (this.state.bitCrusherIsOn == true) {\n        this.state.bitCrusherIsOn.wet.value = 0;\n        this.setState({\n          bitCrusherIsOn: false\n        });\n      } else {\n        this.state.bitCrusher.wet.value = 1;\n        this.setState({\n          bitCrusherIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleChebyshev\",\n    value: function toggleChebyshev() {\n      if (this.state.chebyshevIsOn == true) {\n        this.state.chebyshevIsOn.wet.value = 0;\n        this.setState({\n          chebyshevIsOn: false\n        });\n      } else {\n        this.state.chebyshev.wet.value = 1;\n        this.setState({\n          chebyshevIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleChorus\",\n    value: function toggleChorus() {\n      if (this.state.chorusIsOn == true) {\n        this.state.chorusIsOn.wet.value = 0;\n        this.setState({\n          chorusIsOn: false\n        });\n      } else {\n        this.state.chorus.wet.value = 1;\n        this.setState({\n          chorusIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleConvolver\",\n    value: function toggleConvolver() {\n      if (this.state.convolverIsOn == true) {\n        this.state.convolverIsOn.wet.value = 0;\n        this.setState({\n          convolverIsOn: false\n        });\n      } else {\n        this.state.convolver.wet.value = 1;\n        this.setState({\n          convolverIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect() {\n      if (this.state.effectIsOn == true) {\n        this.state.effectIsOn.wet.value = 0;\n        this.setState({\n          effectIsOn: false\n        });\n      } else {\n        this.state.effect.wet.value = 1;\n        this.setState({\n          effectIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleFeedbackEffect\",\n    value: function toggleFeedbackEffect() {\n      if (this.state.feedbackEffectIsOn == true) {\n        this.state.feedbackEffectIsOn.wet.value = 0;\n        this.setState({\n          feedbackEffectIsOn: false\n        });\n      } else {\n        this.state.feedbackEffect.wet.value = 1;\n        this.setState({\n          feedbackEffectIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleFreeverb\",\n    value: function toggleFreeverb() {\n      if (this.state.freeverbIsOn == true) {\n        this.state.freeverbIsOn.wet.value = 0;\n        this.setState({\n          freeverbIsOn: false\n        });\n      } else {\n        this.state.freeverb.wet.value = 1;\n        this.setState({\n          freeverbIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleJCReverb\",\n    value: function toggleJCReverb() {\n      if (this.state.jcReverbIsOn == true) {\n        this.state.jcReverbIsOn.wet.value = 0;\n        this.setState({\n          jcReverbIsOn: false\n        });\n      } else {\n        this.state.jcReverb.wet.value = 1;\n        this.setState({\n          jcReverbIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"togglePhaser\",\n    value: function togglePhaser() {\n      if (this.state.phaserIsOn == true) {\n        this.state.phaserIsOn.wet.value = 0;\n        this.setState({\n          phaserIsOn: false\n        });\n      } else {\n        this.state.phaser.wet.value = 1;\n        this.setState({\n          phaserIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"togglepingPongDelay\",\n    value: function togglepingPongDelay() {\n      if (this.state.pingPongDelayIsOn == true) {\n        this.state.pingPongDelayIsOn.wet.value = 0;\n        this.setState({\n          pingPongDelayIsOn: false\n        });\n      } else {\n        this.state.pingPongDelay.wet.value = 1;\n        this.setState({\n          pingPongDelayIsOn: true\n        });\n      }\n    }\n  }, {\n    key: \"toggleDistortion100\",\n    value: function toggleDistortion100() {\n      var distortion = this.state.distortion;\n      distortion.distortion = 100;\n      this.setState({\n        distortion: distortion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.startSynth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Start\"), React.createElement(\"div\", {\n        onClick: this.toggleAutoFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, \"Toggle Filter\"), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Toggle Feedback Delay\"), React.createElement(\"div\", {\n        onClick: this.toggleTremolo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"Toggle Tremolo\"), React.createElement(\"div\", {\n        onClick: this.toggleDistortion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Toggle Distortion \", this.state.distortionIsOn), React.createElement(\"div\", {\n        onClick: this.toggleDistortion100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"Toggle Distortion 100\"), React.createElement(\"div\", {\n        onClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }, \"AutoPanner \", this.state.autoPannerIsOn), React.createElement(\"div\", {\n        onClick: this.toggleAutoWah,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \"AutoWah\", this.state.autoWahIsOn), React.createElement(\"div\", {\n        onClick: this.toggleBitCrusher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, \"Bit Crusher\", this.state.bitCrusherIsOn), React.createElement(\"div\", {\n        onClick: this.toggleChebyshev,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, \"Chebyshev\", this.state.chebyshevIsOn), React.createElement(\"div\", {\n        onClick: this.toggleChorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"Chorus\", this.state.chorusIsOn), React.createElement(\"div\", {\n        onClick: this.toggleConvolver,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"Convolver\", this.state.convolverIsOn), React.createElement(\"div\", {\n        onClick: this.toggleEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"Effect\", this.state.effectIsOn), React.createElement(\"div\", {\n        onClick: this.toggleFeedbackEffect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, \"Feedback Effect\", this.state.feedbackEffectIsOn), React.createElement(\"div\", {\n        onClick: this.toggleFreeverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"Freeverb\", this.state.freeverbIsOn), React.createElement(\"div\", {\n        onClick: this.toggleJCReverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, \"JCReverb\", this.state.jcReverbIsOn), React.createElement(\"div\", {\n        onClick: this.togglePhaser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, \"Phaser\", this.state.phaserIsOn), React.createElement(\"div\", {\n        onClick: this.togglepingPongDelay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Ping Pong Delay\", this.state.pingPongDelayIsOn));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["React","Tone","Synth","props","distortion","Distortion","oversample","tremolo","Tremolo","frequency","type","depth","spread","autoFilter","AutoFilter","baseFrequency","octaves","filter","rolloff","Q","feedbackDelay1","FeedbackDelay","delayTime","maxDelay","autoPanner","AutoPanner","autoWah","AutoWah","sensitivity","gain","follower","attack","release","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","feedbackEffect","FeedbackEffect","feedback","freeverb","Freeverb","roomSize","dampening","jcReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","state","tremoloIsOn","distortionIsOn","startSynth","bind","toggleAutoFilter","toggleFeedbackDelay","toggleTremolo","toggleDistortion","toggleDistortion100","toggleAutoPanner","toggleAutoWah","toggleBitCrusher","toggleChebyshev","toggleChorus","toggleConvolver","toggleEffect","toggleFeedbackEffect","toggleFreeverb","toggleJCReverb","togglePhaser","togglepingPongDelay","synth","chain","feedbackDelay2","Master","loop","Loop","time","triggerAttackRelease","start","stop","Transport","bpm","value","setState","connect","toMaster","console","log","autoPannerIsOn","autoWahIsOn","bitCrusherIsOn","chebyshevIsOn","chorusIsOn","convolverIsOn","effectIsOn","feedbackEffectIsOn","freeverbIsOn","jcReverbIsOn","phaserIsOn","pingPongDelayIsOn","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tone from \"tone\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 100,\n      oversample: \"4x\"\n    });\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: \"sine\",\n      depth: 0.5,\n      spread: 180\n    });\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: 0.25,\n      maxDelay: 1\n    });\n\n    let autoPanner = new Tone.AutoPanner({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n\n    let effect = new Tone.Effect({\n      wet: 1\n    });\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    let jcReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n\n    this.state = {\n      tremolo: tremolo,\n      tremoloIsOn: false,\n      distortion: distortion,\n      distortionIsOn: false,\n      autoFilter: autoFilter,\n      feedbackDelay1: feedbackDelay1,\n      feedbackDelay1: false,\n      autoFilter: autoFilter,\n      autoFilterIsOn: false,\n      autoPanner: autoPanner,\n      autoPannerIsOn: false,\n      autoWah: autoWah,\n      autoWahIsOn: false,\n      bitCrusher: bitCrusher,\n      bitCrusherIsOn: false,\n      chebyshev: chebyshev,\n      chebyshevIsOn: false,\n      chorus: chorus,\n      chorusIsOn: false,\n      convolver: convolver,\n      convolverIsOn: false,\n      effect: effect,\n      effectIsOn: false,\n      feedbackEffect: feedbackEffect,\n      feedbackEffectIsOn: false,\n      freeverb: freeverb,\n      freeverbIsOn: false,\n      jcReverb: jcReverb,\n      jcReverbIsOn: false,\n      phaser: phaser,\n      phaserIsOn: false,\n      pingPongDelay: pingPongDelay,\n      pingPongDelayIsOn: false\n    };\n\n    this.startSynth = this.startSynth.bind(this);\n    this.toggleAutoFilter = this.toggleAutoFilter.bind(this);\n    this.toggleFeedbackDelay = this.toggleFeedbackDelay.bind(this);\n    this.toggleTremolo = this.toggleTremolo.bind(this);\n    this.toggleDistortion = this.toggleDistortion.bind(this);\n    this.toggleDistortion100 = this.toggleDistortion100.bind(this);\n    this.toggleAutoPanner = this.toggleAutoPanner.bind(this);\n    this.toggleAutoWah = this.toggleAutoWah.bind(this);\n    this.toggleBitCrusher = this.toggleBitCrusher.bind(this);\n    this.toggleChebyshev = this.toggleChebyshev.bind(this);\n    this.toggleChorus = this.toggleChorus.bind(this);\n    this.toggleConvolver = this.toggleConvolver.bind(this);\n    this.toggleEffect = this.toggleEffect.bind(this);\n    this.toggleFeedbackEffect = this.toggleFeedbackEffect.bind(this);\n    this.toggleFreeverb = this.toggleFreeverb.bind(this);\n    this.toggleJCReverb = this.toggleJCReverb.bind(this);\n    this.togglePhaser = this.togglePhaser.bind(this);\n    this.togglepingPongDelay = this.togglepingPongDelay.bind(this);\n  }\n\n  startSynth() {\n    let synth = new Tone.Synth(); //.toMaster();\n    synth.chain(\n      this.state.distortion,\n      this.state.autoFilter,\n      this.state.feedbackDelay1,\n      this.state.feedbackDelay2,\n      this.state.tremolo,\n      this.state.autoPanner,\n      this.state.autoWah,\n      this.state.bitCrusher,\n      this.state.chebyshev,\n      this.state.chorus,\n      this.state.convolver,\n      this.state.effect,\n      this.state.feedbackEffect,\n      this.state.freeverb,\n      this.state.jcReverb,\n      this.state.phaser,\n      this.state.pingPongDelay,\n      Tone.Master\n    );\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    loop.start(\"0m\").stop(\"16m\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  toggleAutoFilter() {\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 0,\n      baseFrequency: 200,\n      octaves: 0.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    this.setState({\n      autoFilter: autoFilter\n    });\n\n    let { synth } = this.state;\n    this.state.synth.connect(autoFilter);\n  }\n\n  toggleFeedbackDelay() {\n    let feedbackDelay1 = new Tone.FeedbackDelay({\n      delayTime: \"32n\",\n      maxDelay: 10\n    }).toMaster();\n\n    let feedbackDelay2 = new Tone.FeedbackDelay({\n      delayTime: \"8n\",\n      maxDelay: 10\n    }).toMaster();\n\n    this.state.synth.connect(feedbackDelay1);\n    this.state.synth.connect(feedbackDelay2);\n  }\n\n  toggleTremolo() {\n    this.state.synth.connect(tremolo);\n  }\n\n  toggleDistortion() {\n    console.log(\"toggle\");\n\n    if (this.state.distortionIsOn == true) {\n      console.log(\"true\");\n\n      this.state.distortion.wet.value = 0;\n\n      this.setState({\n        distortionIsOn: false\n      });\n    } else {\n      console.log(\"false\");\n      this.state.synth.chain(this.state.distortion, Tone.Master);\n      this.state.distortion.wet.value = 1;\n\n      this.setState({\n        distortionIsOn: true\n      });\n    }\n  }\n\n  toggleAutoPanner() {\n    console.log(\"autoPlay\");\n\n    if (this.state.autoPannerIsOn == true) {\n      this.state.autoPanner.wet.value = 0;\n\n      this.setState({\n        autoPannerIsOn: false\n      });\n    } else {\n      this.state.autoPanner.wet.value = 1;\n\n      this.setState({\n        autoPannerIsOn: true\n      });\n    }\n  }\n\n  toggleAutoWah() {\n    if (this.state.autoWahIsOn == true) {\n      this.state.autoWahIsOn.wet.value = 0;\n\n      this.setState({\n        autoWahIsOn: false\n      });\n    } else {\n      this.state.autoWah.wet.value = 1;\n\n      this.setState({\n        autoWahIsOn: true\n      });\n    }\n  }\n\n  toggleBitCrusher() {\n    if (this.state.bitCrusherIsOn == true) {\n      this.state.bitCrusherIsOn.wet.value = 0;\n\n      this.setState({\n        bitCrusherIsOn: false\n      });\n    } else {\n      this.state.bitCrusher.wet.value = 1;\n\n      this.setState({\n        bitCrusherIsOn: true\n      });\n    }\n  }\n\n  toggleChebyshev() {\n    if (this.state.chebyshevIsOn == true) {\n      this.state.chebyshevIsOn.wet.value = 0;\n\n      this.setState({\n        chebyshevIsOn: false\n      });\n    } else {\n      this.state.chebyshev.wet.value = 1;\n\n      this.setState({\n        chebyshevIsOn: true\n      });\n    }\n  }\n\n  toggleChorus() {\n    if (this.state.chorusIsOn == true) {\n      this.state.chorusIsOn.wet.value = 0;\n\n      this.setState({\n        chorusIsOn: false\n      });\n    } else {\n      this.state.chorus.wet.value = 1;\n\n      this.setState({\n        chorusIsOn: true\n      });\n    }\n  }\n\n  toggleConvolver() {\n    if (this.state.convolverIsOn == true) {\n      this.state.convolverIsOn.wet.value = 0;\n\n      this.setState({\n        convolverIsOn: false\n      });\n    } else {\n      this.state.convolver.wet.value = 1;\n\n      this.setState({\n        convolverIsOn: true\n      });\n    }\n  }\n\n  toggleEffect() {\n    if (this.state.effectIsOn == true) {\n      this.state.effectIsOn.wet.value = 0;\n\n      this.setState({\n        effectIsOn: false\n      });\n    } else {\n      this.state.effect.wet.value = 1;\n\n      this.setState({\n        effectIsOn: true\n      });\n    }\n  }\n\n  toggleFeedbackEffect() {\n    if (this.state.feedbackEffectIsOn == true) {\n      this.state.feedbackEffectIsOn.wet.value = 0;\n\n      this.setState({\n        feedbackEffectIsOn: false\n      });\n    } else {\n      this.state.feedbackEffect.wet.value = 1;\n\n      this.setState({\n        feedbackEffectIsOn: true\n      });\n    }\n  }\n\n  toggleFreeverb() {\n    if (this.state.freeverbIsOn == true) {\n      this.state.freeverbIsOn.wet.value = 0;\n\n      this.setState({\n        freeverbIsOn: false\n      });\n    } else {\n      this.state.freeverb.wet.value = 1;\n\n      this.setState({\n        freeverbIsOn: true\n      });\n    }\n  }\n\n  toggleJCReverb() {\n    if (this.state.jcReverbIsOn == true) {\n      this.state.jcReverbIsOn.wet.value = 0;\n\n      this.setState({\n        jcReverbIsOn: false\n      });\n    } else {\n      this.state.jcReverb.wet.value = 1;\n\n      this.setState({\n        jcReverbIsOn: true\n      });\n    }\n  }\n\n  togglePhaser() {\n    if (this.state.phaserIsOn == true) {\n      this.state.phaserIsOn.wet.value = 0;\n\n      this.setState({\n        phaserIsOn: false\n      });\n    } else {\n      this.state.phaser.wet.value = 1;\n\n      this.setState({\n        phaserIsOn: true\n      });\n    }\n  }\n\n  togglepingPongDelay() {\n    if (this.state.pingPongDelayIsOn == true) {\n      this.state.pingPongDelayIsOn.wet.value = 0;\n\n      this.setState({\n        pingPongDelayIsOn: false\n      });\n    } else {\n      this.state.pingPongDelay.wet.value = 1;\n\n      this.setState({\n        pingPongDelayIsOn: true\n      });\n    }\n  }\n\n  toggleDistortion100() {\n    let { distortion } = this.state;\n    distortion.distortion = 100;\n\n    this.setState({\n      distortion: distortion\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.startSynth}>Start</div>\n        <div onClick={this.toggleAutoFilter}>Toggle Filter</div>\n        <div onClick={this.toggleFeedbackDelay}>Toggle Feedback Delay</div>\n        <div onClick={this.toggleTremolo}>Toggle Tremolo</div>\n        <div onClick={this.toggleDistortion}>\n          Toggle Distortion {this.state.distortionIsOn}\n        </div>\n        <div onClick={this.toggleDistortion100}>Toggle Distortion 100</div>\n        <div onClick={this.toggleAutoPanner}>\n          AutoPanner {this.state.autoPannerIsOn}\n        </div>\n        <div onClick={this.toggleAutoWah}>AutoWah{this.state.autoWahIsOn}</div>\n        <div onClick={this.toggleBitCrusher}>\n          Bit Crusher{this.state.bitCrusherIsOn}\n        </div>\n        <div onClick={this.toggleChebyshev}>\n          Chebyshev{this.state.chebyshevIsOn}\n        </div>\n        <div onClick={this.toggleChorus}>Chorus{this.state.chorusIsOn}</div>\n        <div onClick={this.toggleConvolver}>\n          Convolver{this.state.convolverIsOn}\n        </div>\n        <div onClick={this.toggleEffect}>Effect{this.state.effectIsOn}</div>\n        <div onClick={this.toggleFeedbackEffect}>\n          Feedback Effect{this.state.feedbackEffectIsOn}\n        </div>\n        <div onClick={this.toggleFreeverb}>\n          Freeverb{this.state.freeverbIsOn}\n        </div>\n        <div onClick={this.toggleJCReverb}>\n          JCReverb{this.state.jcReverbIsOn}\n        </div>\n        <div onClick={this.togglePhaser}>Phaser{this.state.phaserIsOn}</div>\n        <div onClick={this.togglepingPongDelay}>\n          Ping Pong Delay{this.state.pingPongDelayIsOn}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}