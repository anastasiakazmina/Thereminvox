{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2copy/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport Tone from 'tone';\nimport PlaySwitch from '../components/PlaySwitch';\nimport Distortion from '../components/effects/Distortion';\nimport FeedbackDelay from '../components/effects/FeedbackDelay'; // import BitCrusher from '../components/effects/BitCrusher'\n// import Chebyshev from '../components/effects/Chebyshev'\n// import AutoPanner from '../components/effects/AutoPanner'\n// import AutoFilter from '../components/effects/AutoFilter'\n// import AutoWah from '../components/effects/AutoWah'\n// import Freeverb from '../components/effects/Freeverb'\n// import Vibrato from '../components/effects/Vibrato'\n// import Tremolo from '../components/effects/Tremolo'\n// import Chorus from '../components/effects/Chorus'\n// import Convolver from '../components/effects/Convolver'\n// import Effect from '../components/effects/Effect'\n// import FeedbackEffect from '../components/effects/FeedbackEffect'\n// import JCReverb from '../components/effects/JCReverb'\n// import Phaser from '../components/effects/Phaser'\n// import PingPongDelay from '../components/effects/PingPongDelay'\n// import PitchShift from '../components/effects/PitchShift'\n// import Reverb from '../components/effects/Reverb'\n// import StereoWidener from '../components/effects/StereoWidener'\n\nimport Knob from '../components/Knob';\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: 'none'\n    });\n    var autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: 'triangle',\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    });\n    var tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    });\n    var convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    });\n    var effect = new Tone.Effect({\n      wet: 1\n    });\n    var feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    });\n    var jCReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    });\n    var phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    });\n    var pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    });\n    var pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    });\n    var reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    });\n    var stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    });\n    distortion.wet.value = 0; //  autoPanner.wet.value = 0\n    //  bitCrusher.wet.value = 0.354\n\n    feedbackDelay.wet.value = 0.354; //  chebyshev.wet.value = 0.5740443284426575\n    //  autoFilter.wet.value = 0\n    //  autoWah.wet.value = 0\n    //  freeverb.wet.value = 0\n    //  vibrato.wet.value = 0\n    //  tremolo.wet.value = 0\n    //  chorus.wet.value = 0\n    //  convolver.wet.value = 0\n\n    effect.wet.value = 0; //  feedbackEffect.wet.value = 0\n    //  jCReverb.wet.value = 0\n    //  phaser.wet.value = 0\n    //  pingPongDelay.wet.value = 0\n    //  pitchShift.wet.value = 0\n    //  reverb.wet.value = 0\n    //  stereoWidener.wet.value = 0\n\n    var synth = new Tone.PolySynth();\n    synth.chain(distortion, feedbackDelay, Tone.Master);\n    var loop1 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease(['C2', '8n'], time);\n    }, '32n');\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(['C2'], '4n', time);\n    }, '16n');\n    var loop3 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease(['A2', '16n'], '16n', time);\n    }, '32n');\n    var loop4 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease(['A6', '2n'], '8n', time);\n    }, '16n');\n    var loop5 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease(['G4', 'G4', 'F4', 'F4', 'E4', 'E4', 'D4', 'G4', 'G4', 'F4', 'F4', 'E4', 'E4', 'D4'], '32n', time);\n    }, '16n');\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      vibrato: {\n        effect: vibrato,\n        wet: 0,\n        on: false\n      },\n      tremolo: {\n        effect: tremolo,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false\n      },\n      convolver: {\n        effect: convolver,\n        wet: 0,\n        on: false\n      },\n      effect: {\n        effect: effect,\n        wet: 0,\n        on: false\n      },\n      feedbackEffect: {\n        effect: feedbackEffect,\n        wet: 0,\n        on: false\n      },\n      jCReverb: {\n        effect: jCReverb,\n        wet: 0,\n        on: false\n      },\n      phaser: {\n        effect: phaser,\n        wet: 0,\n        on: false\n      },\n      pingPongDelay: {\n        effect: pingPongDelay,\n        wet: 0,\n        on: false\n      },\n      pitchShift: {\n        effect: pitchShift,\n        wet: 0,\n        on: false\n      },\n      reverb: {\n        effect: reverb,\n        wet: 0,\n        on: false\n      },\n      stereoWidener: {\n        effect: stereoWidener,\n        wet: 0,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop4,\n        on: false\n      },\n      loop5: {\n        loop: loop5,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), 'generateRandom', 'toggleLoop', 'toggleEffect', 'changeEffectWetValue', 'changeEffectWetValue', 'changeAutoPannerWetValue', 'changeDistortionValue', 'changeAutoPannerValue', 'changeBitCrasherValue', 'changeFreeverbValue', 'changeAutoFilterValue', 'changeAutoWahValue', 'changeChebyshevValue', 'changeFeedbackDelayValue', 'changeVibratoValue', 'changeFeedbackDelayWetValue', 'changeChebyshevWetValue', 'changeBitCrasherWetValue', 'changeVibratoWetValue', 'changeTremoloWetValue', 'changeTremoloValue', 'changeChorusWetValue', 'changeChorusValue', 'changeConvolverWetValue', 'changeConvolverValue', 'changeEffectWetValue', 'changeEffectValue', 'changeFeedbackEffectWetValue', 'changeFeedbackEffectValue', 'changeJCReverbWetValue', 'changeJCReverbValue', 'changePhaserWetValue', 'changePhaserValue', 'changePingPongDelayWetValue', 'changePingPongDelayValue', 'changePitchShiftWetValue', 'changePitchShiftValue', 'changeReverbWetValue', 'changeReverbValue', 'changeStereoWidenerWetValue', 'changeStereoWidenerValue');\n\n    Tone.Transport.bpm.value = 30;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.generateRandom()\n      var _this$state$distortio = this.state.distortion,\n          name = _this$state$distortio.name,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.wet.value = on == true ? this.props.wet : 0;\n      effect.distortion = this.props.Distortion;\n      this.setState({\n        distortion: {\n          name: name,\n          effect: effect,\n          wet: this.props.wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue('distortion', random / 30);\n        this.changeFreeverbValue('freeverb', random / 30);\n        this.changeAutoFilterValue('autoFilter', random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start('0m');\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio2 = this.state.distortion,\n          effect = _this$state$distortio2.effect,\n          wet = _this$state$distortio2.wet,\n          on = _this$state$distortio2.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeEffectValue\",\n    value: function changeEffectValue(effectName, value) {\n      var _this$state$effect = this.state.effect,\n          effect = _this$state$effect.effect,\n          wet = _this$state$effect.wet,\n          on = _this$state$effect.on;\n      effect.effect = value;\n      this.setState({\n        effect: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayWetValue\",\n    value: function changeFeedbackDelayWetValue(effectName, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          feedbackDelay = _this$state2.feedbackDelay,\n          synth = _this$state2.synth,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4,\n          loop5 = _this$state2.loop5;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LoopContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"PlaySwitch_loop1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loop1_cir\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop1');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"loop1_cir2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"PlaySwitch_loop2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop2');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitch_loop3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop3');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitch_loop4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop4');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"PlaySwitch_loop5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop5.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop('loop5');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"effectsBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"DistortionSynth1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('distortion');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"DistortionSynth2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect('feedbackDelay');\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2copy/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","Knob","Synth","props","distortion","oversample","feedbackDelay","delayTime","maxDelay","bitCrusher","BitCrusher","bits","chebyshev","Chebyshev","order","autoPanner","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoFilter","autoWah","AutoWah","sensitivity","gain","follower","attack","release","freeverb","Freeverb","roomSize","dampening","vibrato","Vibrato","tremolo","Tremolo","spread","chorus","Chorus","convolver","Convolver","onload","noOp","normalize","effect","Effect","wet","feedbackEffect","FeedbackEffect","feedback","jCReverb","JCReverb","phaser","Phaser","stages","pingPongDelay","PingPongDelay","maxDelayTime","pitchShift","PitchShift","pitch","windowSize","reverb","Reverb","decay","preDelay","stereoWidener","StereoWidener","width","value","synth","PolySynth","chain","Master","loop1","Pattern","time","note","triggerAttackRelease","loop2","Loop","loop3","loop4","loop5","state","lastChange","Date","now","timeout","on","instrument","loop","bindAll","Transport","bpm","start","name","setState","min","max","Math","floor","random","getRandomArbitrary","changeDistortionValue","changeFreeverbValue","changeAutoFilterValue","setTimeout","generateRandom","loopName","stop","effectName","toggleEffect","toggleLoop","changeEffectWetValue","changeFeedbackDelayValue","Component"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport React from 'react'\nimport Tone from 'tone'\n\nimport PlaySwitch from '../components/PlaySwitch'\nimport Distortion from '../components/effects/Distortion'\nimport FeedbackDelay from '../components/effects/FeedbackDelay'\n// import BitCrusher from '../components/effects/BitCrusher'\n// import Chebyshev from '../components/effects/Chebyshev'\n// import AutoPanner from '../components/effects/AutoPanner'\n// import AutoFilter from '../components/effects/AutoFilter'\n// import AutoWah from '../components/effects/AutoWah'\n// import Freeverb from '../components/effects/Freeverb'\n// import Vibrato from '../components/effects/Vibrato'\n// import Tremolo from '../components/effects/Tremolo'\n// import Chorus from '../components/effects/Chorus'\n// import Convolver from '../components/effects/Convolver'\n// import Effect from '../components/effects/Effect'\n// import FeedbackEffect from '../components/effects/FeedbackEffect'\n// import JCReverb from '../components/effects/JCReverb'\n// import Phaser from '../components/effects/Phaser'\n// import PingPongDelay from '../components/effects/PingPongDelay'\n// import PitchShift from '../components/effects/PitchShift'\n// import Reverb from '../components/effects/Reverb'\n// import StereoWidener from '../components/effects/StereoWidener'\n\nimport Knob from '../components/Knob'\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props)\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: '4x'\n    })\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: '4n',\n      maxDelay: 0.8\n    })\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    })\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: 'none'\n    })\n\n    let autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: 'triangle',\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: 'sine',\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: 'lowpass',\n        rolloff: -12,\n        Q: 1\n      }\n    })\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    })\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    })\n\n    let vibrato = new Tone.Vibrato({\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: 'sine'\n    })\n\n    let tremolo = new Tone.Tremolo({\n      frequency: 10,\n      type: 'sine',\n      depth: 0.5,\n      spread: 180\n    })\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: 'sine',\n      spread: 180\n    })\n\n    let convolver = new Tone.Convolver({\n      onload: Tone.noOp,\n      normalize: true\n    })\n\n    let effect = new Tone.Effect({\n      wet: 1\n    })\n\n    let feedbackEffect = new Tone.FeedbackEffect({\n      feedback: 0.125\n    })\n\n    let jCReverb = new Tone.JCReverb({\n      roomSize: 0.5\n    })\n\n    let phaser = new Tone.Phaser({\n      frequency: 0.5,\n      octaves: 3,\n      stages: 10,\n      Q: 10,\n      baseFrequency: 350\n    })\n\n    let pingPongDelay = new Tone.PingPongDelay({\n      delayTime: 0.25,\n      maxDelayTime: 1\n    })\n\n    let pitchShift = new Tone.PitchShift({\n      pitch: 0,\n      windowSize: 0.1,\n      delayTime: 0,\n      feedback: 0\n    })\n\n    let reverb = new Tone.Reverb({\n      decay: 1.5,\n      preDelay: 0.01\n    })\n\n    let stereoWidener = new Tone.StereoWidener({\n      width: 0.5\n    })\n\n    distortion.wet.value = 0\n    //  autoPanner.wet.value = 0\n    //  bitCrusher.wet.value = 0.354\n    feedbackDelay.wet.value = 0.354\n    //  chebyshev.wet.value = 0.5740443284426575\n    //  autoFilter.wet.value = 0\n    //  autoWah.wet.value = 0\n    //  freeverb.wet.value = 0\n    //  vibrato.wet.value = 0\n    //  tremolo.wet.value = 0\n    //  chorus.wet.value = 0\n    //  convolver.wet.value = 0\n    effect.wet.value = 0\n    //  feedbackEffect.wet.value = 0\n    //  jCReverb.wet.value = 0\n    //  phaser.wet.value = 0\n    //  pingPongDelay.wet.value = 0\n    //  pitchShift.wet.value = 0\n    //  reverb.wet.value = 0\n    //  stereoWidener.wet.value = 0\n\n    let synth = new Tone.PolySynth()\n\n    synth.chain(\n      distortion,\n\n      feedbackDelay,\n\n      Tone.Master\n    )\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(['C2', '8n'], time)\n    }, '32n')\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(['C2'], '4n', time)\n    }, '16n')\n\n    let loop3 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(['A2', '16n'], '16n', time)\n    }, '32n')\n\n    let loop4 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(['A6', '2n'], '8n', time)\n    }, '16n')\n\n    let loop5 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(\n        [\n          'G4',\n          'G4',\n          'F4',\n          'F4',\n          'E4',\n          'E4',\n          'D4',\n          'G4',\n          'G4',\n          'F4',\n          'F4',\n          'E4',\n          'E4',\n          'D4'\n        ],\n        '32n',\n        time\n      )\n    }, '16n')\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      autoFilter: { effect: autoFilter, wet: 0, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chebyshev: { effect: chebyshev, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      freeverb: { effect: freeverb, wet: 0, on: false },\n      feedbackDelay: { effect: feedbackDelay, wet: 0, on: false },\n      vibrato: { effect: vibrato, wet: 0, on: false },\n      tremolo: { effect: tremolo, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false },\n      convolver: { effect: convolver, wet: 0, on: false },\n      effect: { effect: effect, wet: 0, on: false },\n      feedbackEffect: { effect: feedbackEffect, wet: 0, on: false },\n      jCReverb: { effect: jCReverb, wet: 0, on: false },\n      phaser: { effect: phaser, wet: 0, on: false },\n      pingPongDelay: { effect: pingPongDelay, wet: 0, on: false },\n      pitchShift: { effect: pitchShift, wet: 0, on: false },\n      reverb: { effect: reverb, wet: 0, on: false },\n      stereoWidener: { effect: stereoWidener, wet: 0, on: false },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop4, on: false },\n      loop5: { loop: loop5, on: false }\n    }\n\n    _.bindAll(\n      this,\n      'generateRandom',\n      'toggleLoop',\n      'toggleEffect',\n      'changeEffectWetValue',\n      'changeEffectWetValue',\n      'changeAutoPannerWetValue',\n      'changeDistortionValue',\n      'changeAutoPannerValue',\n      'changeBitCrasherValue',\n      'changeFreeverbValue',\n      'changeAutoFilterValue',\n      'changeAutoWahValue',\n      'changeChebyshevValue',\n      'changeFeedbackDelayValue',\n      'changeVibratoValue',\n      'changeFeedbackDelayWetValue',\n      'changeChebyshevWetValue',\n      'changeBitCrasherWetValue',\n      'changeVibratoWetValue',\n      'changeTremoloWetValue',\n      'changeTremoloValue',\n      'changeChorusWetValue',\n      'changeChorusValue',\n      'changeConvolverWetValue',\n      'changeConvolverValue',\n      'changeEffectWetValue',\n      'changeEffectValue',\n      'changeFeedbackEffectWetValue',\n      'changeFeedbackEffectValue',\n      'changeJCReverbWetValue',\n      'changeJCReverbValue',\n      'changePhaserWetValue',\n      'changePhaserValue',\n      'changePingPongDelayWetValue',\n      'changePingPongDelayValue',\n      'changePitchShiftWetValue',\n      'changePitchShiftValue',\n      'changeReverbWetValue',\n      'changeReverbValue',\n      'changeStereoWidenerWetValue',\n      'changeStereoWidenerValue'\n    )\n\n    Tone.Transport.bpm.value = 30\n    Tone.Transport.start()\n  }\n\n  componentDidMount() {\n    //this.generateRandom()\n\n    let { name, effect, wet, on } = this.state.distortion\n\n    effect.wet.value = on == true ? this.props.wet : 0\n    effect.distortion = this.props.Distortion\n\n    this.setState({\n      distortion: {\n        name,\n        effect,\n        wet: this.props.wet,\n        on\n      }\n    })\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000)\n\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      })\n\n      this.changeDistortionValue('distortion', random / 30)\n      this.changeFreeverbValue('freeverb', random / 30)\n      this.changeAutoFilterValue('autoFilter', random / 30)\n    }\n\n    setTimeout(() => this.generateRandom(), timeout)\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName]\n\n    on == true ? loop.stop() : loop.start('0m')\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    })\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? 0 : wet\n    on = !on\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion\n\n    effect.distortion = value\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeEffectValue(effectName, value) {\n    let { effect, wet, on } = this.state.effect\n\n    effect.effect = value\n\n    this.setState({\n      effect: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay\n\n    effect.maxDelay = value\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  changeFeedbackDelayWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName]\n\n    effect.wet.value = on == true ? value : 0\n    wet = value\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    })\n  }\n\n  render() {\n    let {\n      distortion,\n      feedbackDelay,\n\n      synth,\n      loop1,\n      loop2,\n      loop3,\n      loop4,\n      loop5\n    } = this.state\n    let { toggleEffect } = this\n\n    return (\n      <div>\n        <div className=\"LoopContainer\">\n          <div className=\"PlaySwitch_loop1\">\n            <div className=\"loop1_cir\">\n              <PlaySwitch\n                name=\"play\"\n                value={loop1.on}\n                handleToggleClick={() => this.toggleLoop('loop1')}\n              />\n              <div className=\"loop1_cir2\"></div>\n            </div>\n          </div>\n          <div className=\"PlaySwitch_loop2\">\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => this.toggleLoop('loop2')}\n            />\n          </div>\n          <div className=\"PlaySwitch_loop3\">\n            <PlaySwitch\n              name=\"play\"\n              value={loop3.on}\n              handleToggleClick={() => this.toggleLoop('loop3')}\n            />\n          </div>\n          <div className=\"PlaySwitch_loop4\">\n            <PlaySwitch\n              name=\"play\"\n              value={loop4.on}\n              handleToggleClick={() => this.toggleLoop('loop4')}\n            />\n          </div>\n          <div className=\"PlaySwitch_loop5\">\n            <PlaySwitch\n              name=\"play\"\n              value={loop5.on}\n              handleToggleClick={() => this.toggleLoop('loop5')}\n            />\n          </div>\n        </div>\n        <div className=\"effectsBoard\">\n          <div className=\"DistortionSynth1\">\n            <Distortion\n              {...this.state.distortion}\n              toggleEffect={() => toggleEffect('distortion')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeDistortionValue={this.changeDistortionValue}\n            />\n          </div>\n          <div className=\"DistortionSynth2\">\n            <FeedbackDelay\n              {...this.state.feedbackDelay}\n              toggleEffect={() => toggleEffect('feedbackDelay')}\n              changeEffectWetValue={this.changeEffectWetValue}\n              changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}