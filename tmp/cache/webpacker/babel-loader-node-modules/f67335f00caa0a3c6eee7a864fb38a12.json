{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Thereminvox.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from \"react\";\nimport Tone from \"tone\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/instrument/Instrument.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/source/FMOscillator.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/component/Filter.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/component/FrequencyEnvelope.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/component/AmplitudeEnvelope.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/core/Gain.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/signal/Scale.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/signal/Multiply.js\";\n\nvar Thereminvox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Thereminvox, _React$Component);\n\n  function Thereminvox(props) {\n    var _this;\n\n    _classCallCheck(this, Thereminvox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Thereminvox).call(this, props));\n    var audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    var oscillator = audioContext.createOscillator();\n    oscillator.type = \"sine\";\n    var analyser = audioContext.createAnalyser();\n    analyser.fftsize = 2048;\n    oscillator.connect(analyser);\n    _this.state = {\n      audioContext: audioContext,\n      oscillator: oscillator,\n      analyser: analyser,\n      playing: false,\n      x: 0,\n      y: 0,\n      fftData: []\n    };\n    _this.handleMouseMove = _this.handleMouseMove.bind(_assertThisInitialized(_this));\n    _this.handleStart = _this.handleStart.bind(_assertThisInitialized(_this));\n    _this.handleStop = _this.handleStop.bind(_assertThisInitialized(_this));\n    _this.handleStartOrStopClick = _this.handleStartOrStopClick.bind(_assertThisInitialized(_this));\n    _this.changeFrequency = _this.changeFrequency.bind(_assertThisInitialized(_this));\n    _this.changeDetune = _this.changeDetune.bind(_assertThisInitialized(_this));\n    _this.changeVisualization = _this.changeVisualization.bind(_assertThisInitialized(_this));\n    _this.handleSynthPlay = _this.handleSynthPlay.bind(_assertThisInitialized(_this));\n    _this.handleMetalSynthPlay = _this.handleMetalSynthPlay.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Thereminvox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"mousemove\", this.handleMouseMove);\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(e) {\n      this.setState({\n        x: e.clientX,\n        y: e.clientY\n      });\n      this.changeFrequency();\n      this.changeDetune();\n      this.changeVisualization();\n    }\n  }, {\n    key: \"handleStartOrStopClick\",\n    value: function handleStartOrStopClick() {\n      var playing = this.state.playing;\n\n      if (playing) {\n        this.handleStop();\n      } else {\n        this.handleStart();\n      }\n    }\n  }, {\n    key: \"handleMetalSynthPlay\",\n    value: function handleMetalSynthPlay() {\n      console.log(\"Synth\");\n      var inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.63, 3.897];\n\n      Tone.MetalSynthPlay = function (options) {\n        options = Tone.defaultArg(options, Tone.MetalSynthPlay.defaults);\n        Tone.Instrument.call(this, options);\n        this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n        this._oscillators = [];\n        this._freqMultipliers = [];\n        this._amplitue = new Tone.Gain(0).connect(this.output);\n        this._highpass = new Tone.Filter({\n          type: \"highpass\",\n          Q: -3.0102999566398125\n        }).connect(this._amplitue);\n        this._octaves = options.octaves;\n        this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n        this.envelope = new Tone.Envelope({\n          attack: options.envelope.attack,\n          attackCurve: \"linear\",\n          decay: options.envelope.decay,\n          sustain: 0,\n          release: options.envelope.release\n        }).chain(this._filterFreqScaler, this._highpass.frequency);\n        this.envelope.connect(this._amplitue.gain);\n\n        for (var i = 0; i < inharmRatios.length; i++) {\n          var osc = new Tone.FMOscillator({\n            type: \"square\",\n            modulationType: \"square\",\n            harmonicity: options.harmonicity,\n            modulationIndex: options.modulationIndex\n          });\n          osc.connect(this._highpass);\n          this._oscillators[i] = osc;\n          var mult = new Tone.Multiply(inharmRatios[i]);\n          this._freqMultipliers[i] = mult;\n          this.frequency.chain(mult, osc.frequency);\n        }\n\n        this.octaves = options.octaves;\n      };\n\n      Tone.extend(Tone.MetalSynthPlay, Tone.Instrument);\n      Tone.MetalSynthPlay.defaults = {\n        frequency: 200,\n        envelope: {\n          attack: 0.001,\n          decay: 1.4,\n          release: 0.2\n        },\n        harmonicity: 5.1,\n        modulationIndex: 32,\n        resonance: 4000,\n        octaves: 1.5\n      };\n\n      Tone.MetalSynthPlay.prototype.triggerAttack = function (time, vel) {\n        time = this.toSeconds(time);\n        vel = Tone.defaultArg(vel, 1);\n        this.envelope.triggerAttack(time, vel);\n\n        this._oscillators.forEach(function (osc) {\n          osc.start(time);\n        });\n\n        if (this.envelope.sustain === 0) {\n          this._oscillators.forEach(function (osc) {\n            osc.stop(time + this.envelope.attack + this.envelope.decay);\n          }.bind(this));\n        }\n\n        return this;\n      };\n\n      Tone.MetalSynthPlay.prototype.triggerRelease = function (time) {\n        time = this.toSeconds(time);\n        this.envelope.triggerRelease(time);\n\n        this._oscillators.forEach(function (osc) {\n          osc.stop(time + this.envelope.release);\n        }.bind(this));\n\n        return this;\n      };\n\n      Tone.MetalSynthPlay.prototype.sync = function () {\n        this._syncMethod(\"triggerAttack\", 0);\n\n        this._syncMethod(\"triggerRelease\", 0);\n\n        return this;\n      };\n\n      Tone.MetalSynthPlay.prototype.triggerAttackRelease = function (duration, time, velocity) {\n        time = this.toSeconds(time);\n        duration = this.toSeconds(duration);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + duration);\n        return this;\n      };\n\n      Object.defineProperty(Tone.MetalSynthPlay.prototype, \"modulationIndex\", {\n        get: function get() {\n          return this._oscillators[0].modulationIndex.value;\n        },\n        set: function set(val) {\n          for (var i = 0; i < this._oscillators.length; i++) {\n            this._oscillators[i].modulationIndex.value = val;\n          }\n        }\n      });\n      Object.defineProperty(Tone.MetalSynthPlay.prototype, \"harmonicity\", {\n        get: function get() {\n          return this._oscillators[0].harmonicity.value;\n        },\n        set: function set(val) {\n          for (var i = 0; i < this._oscillators.length; i++) {\n            this._oscillators[i].harmonicity.value = val;\n          }\n        }\n      });\n      Object.defineProperty(Tone.MetalSynthPlay.prototype, \"resonance\", {\n        get: function get() {\n          return this._filterFreqScaler.min;\n        },\n        set: function set(val) {\n          this._filterFreqScaler.min = val;\n          this.octaves = this._octaves;\n        }\n      });\n      Object.defineProperty(Tone.MetalSynthPlay.prototype, \"octaves\", {\n        get: function get() {\n          return this._octaves;\n        },\n        set: function set(octs) {\n          this._octaves = octs;\n          this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, octs);\n        }\n      });\n\n      Tone.MetalSynthPlay.prototype.dispose = function () {\n        Tone.Instrument.prototype.dispose.call(this);\n\n        for (var i = 0; i < this._oscillators.length; i++) {\n          this._oscillators[i].dispose();\n\n          this._freqMultipliers[i].dispose();\n        }\n\n        this._oscillators = null;\n        this._freqMultipliers = null;\n        this.frequency.dispose();\n        this.frequency = null;\n\n        this._filterFreqScaler.dispose();\n\n        this._filterFreqScaler = null;\n\n        this._amplitue.dispose();\n\n        this._amplitue = null;\n        this.envelope.dispose();\n        this.envelope = null;\n\n        this._highpass.dispose();\n\n        this._highpass = null;\n      };\n    }\n  }, {\n    key: \"handleSynthPlay\",\n    value: function handleSynthPlay() {\n      console.log(\"Yo\");\n      var synth = new Tone.Synth().toMaster(); //synth.triggerAttackRelease(\"A4\", \"4n\");\n      //let pattern = new Tone.Pattern(\n      //  function(time, note) {\n      //    synth.triggerAttackRelease(note, \"16n\");\n      //  },\n      //  [\"C4\", \"D4\", \"E4\", \"G4\", \"A4\"]\n      //);\n      //  pattern.start(0);\n      //  let synth = new Tone.Synth({\n      //  oscillator: {\n      //    type: \"pwm\",\n      //    modulationFrequency: 0.2\n      //  },\n      //  envelope: {\n      //    attack: 0.02,\n      //    decay: 0.1,\n      //    sustain: 0.2,\n      //    release: 0.9\n      //  }\n      //  }).toMaster();\n      //synth.triggerAttack(\"D3\", \"+1\");\n      //let polySynth = new Tone.PolySynth(4, Tone.Synth).toMaster();\n      //let distortion = new Tone.Distortion(0.4).toMaster();\n      //polySynth.triggerAttackRelease([\"C4\", \"E4\", \"G4\", \"B4\"], \"2n\");\n      //synth.connect(distortion);\n      //let pwm = new Tone.PWMOscillator(\"Bb3\").toMaster().start();\n      //  let note = new Tone.Event(function(time, pitch) {\n      //    synth.triggerAttackRelease(pitch, \"16n\", time);\n      //  }, \"C2\");\n      //  Tone.Transport.scheduleRepeat(\n      //    function(time) {\n      //      synth.triggerAttack(time);\n      //    },\n      //    \"8n\",\n      //    \"1m\"\n      //  );\n      //  note.set({\n      //    loop: true,\n      //    loopEnd: \"2n\"\n      //  });\n      //  note.start(0);\n      //note.stop(\"4m\");\n\n      var part = new Tone.Part(function (time, pitch) {\n        synth.triggerAttackRelease(pitch, \"8n\", time);\n      }, [[\"0\", \"C#3\"], [\"4n\", \"G3\"], [3 * Tone.Time(\"8n\"), \"G#3\"], [\"2n\", \"C3\"]]); //part.start(\"4m\");\n\n      var loop = new Tone.Loop(function (time) {\n        synth.triggerAttackRelease(\"C2\", \"8n\", time);\n      }, \"4n\");\n      loop.start(\"1n\"); //.stop(\"4m\");\n\n      Tone.Transport.bpm.value = 220;\n      Tone.Transport.start();\n    }\n  }, {\n    key: \"handleStart\",\n    value: function handleStart() {\n      var _this$state = this.state,\n          audioContext = _this$state.audioContext,\n          oscillator = _this$state.oscillator,\n          analyser = _this$state.analyser,\n          x = _this$state.x,\n          y = _this$state.y;\n      oscillator = audioContext.createOscillator();\n      oscillator.type = \"sine\";\n      oscillator.frequency.setValueAtTime(x, audioContext.currentTime);\n      oscillator.connect(audioContext.destination);\n      oscillator.start();\n      analyser = audioContext.createAnalyser();\n      analyser.fftsize = 2048;\n      oscillator.connect(analyser);\n      this.setState({\n        oscillator: oscillator,\n        analyser: analyser,\n        playing: true\n      });\n    }\n  }, {\n    key: \"handleStop\",\n    value: function handleStop() {\n      var oscillator = this.state.oscillator;\n      oscillator.stop();\n      this.setState({\n        oscillator: oscillator,\n        playing: false\n      });\n    }\n  }, {\n    key: \"changeFrequency\",\n    value: function changeFrequency() {\n      var _this$state2 = this.state,\n          audioContext = _this$state2.audioContext,\n          oscillator = _this$state2.oscillator,\n          x = _this$state2.x,\n          y = _this$state2.y;\n      oscillator.frequency.setValueAtTime(x, audioContext.currentTime);\n    }\n  }, {\n    key: \"changeDetune\",\n    value: function changeDetune() {\n      var _this$state3 = this.state,\n          audioContext = _this$state3.audioContext,\n          oscillator = _this$state3.oscillator,\n          x = _this$state3.x,\n          y = _this$state3.y;\n      oscillator.detune.setValueAtTime(y, audioContext.currentTime);\n    }\n  }, {\n    key: \"changeVisualization\",\n    value: function changeVisualization() {\n      var _this$state4 = this.state,\n          analyser = _this$state4.analyser,\n          playing = _this$state4.playing;\n\n      if (playing) {\n        var bufferLenght = analyser.frequencyBinCount;\n        var dataArray = new Uint8Array(bufferLenght);\n        analyser.getByteTimeDomainData(dataArray);\n        this.setState({\n          fftData: dataArray\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state5 = this.state,\n          playing = _this$state5.playing,\n          analyser = _this$state5.analyser,\n          fftData = _this$state5.fftData;\n      var button = \"Start\";\n\n      if (playing) {\n        button = \"Stop\";\n      }\n\n      var elements = [];\n      console.log(this.state);\n\n      if (fftData != undefined) {\n        fftData.map(function (fftParam, i) {\n          elements.push(React.createElement(\"div\", {\n            key: i,\n            className: \"analyserCol\",\n            style: {\n              height: fftParam + \"px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 387\n            },\n            __self: this\n          }));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        onClick: this.handleSynthPlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, \"Synth\"), React.createElement(\"div\", {\n        onClick: this.handleMetalSynthPlay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, \"MetalSynth\"), React.createElement(\"div\", {\n        onClick: this.handleStartOrStopClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, button), React.createElement(\"div\", {\n        className: \"analyser\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, elements));\n    }\n  }]);\n\n  return Thereminvox;\n}(React.Component);\n\nexport { Thereminvox as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Thereminvox.jsx"],"names":["React","Tone","Thereminvox","props","audioContext","window","AudioContext","webkitAudioContext","oscillator","createOscillator","type","analyser","createAnalyser","fftsize","connect","state","playing","x","y","fftData","handleMouseMove","bind","handleStart","handleStop","handleStartOrStopClick","changeFrequency","changeDetune","changeVisualization","handleSynthPlay","handleMetalSynthPlay","document","addEventListener","e","setState","clientX","clientY","console","log","inharmRatios","MetalSynthPlay","options","defaultArg","defaults","Instrument","call","frequency","Signal","Type","Frequency","_oscillators","_freqMultipliers","_amplitue","Gain","output","_highpass","Filter","Q","_octaves","octaves","_filterFreqScaler","Scale","resonance","envelope","Envelope","attack","attackCurve","decay","sustain","release","chain","gain","i","length","osc","FMOscillator","modulationType","harmonicity","modulationIndex","mult","Multiply","extend","prototype","triggerAttack","time","vel","toSeconds","forEach","start","stop","triggerRelease","sync","_syncMethod","triggerAttackRelease","duration","velocity","Object","defineProperty","get","value","set","val","min","octs","max","Math","pow","dispose","synth","Synth","toMaster","part","Part","pitch","Time","loop","Loop","Transport","bpm","setValueAtTime","currentTime","destination","detune","bufferLenght","frequencyBinCount","dataArray","Uint8Array","getByteTimeDomainData","button","elements","undefined","map","fftParam","push","height","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Tone from \"tone\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/instrument/Instrument.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/source/FMOscillator.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/component/Filter.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/component/FrequencyEnvelope.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/component/AmplitudeEnvelope.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/core/Gain.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/signal/Scale.js\";\nimport \"/Users/anastasiakazmina/hseadc2017_thereminvox2/Tone.js/Tone/signal/Multiply.js\";\n\nexport default class Thereminvox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const audioContext = new (window.AudioContext ||\n      window.webkitAudioContext)();\n    let oscillator = audioContext.createOscillator();\n    oscillator.type = \"sine\";\n\n    let analyser = audioContext.createAnalyser();\n    analyser.fftsize = 2048;\n    oscillator.connect(analyser);\n\n    this.state = {\n      audioContext: audioContext,\n      oscillator: oscillator,\n      analyser: analyser,\n      playing: false,\n      x: 0,\n      y: 0,\n      fftData: []\n    };\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n    this.handleStartOrStopClick = this.handleStartOrStopClick.bind(this);\n    this.changeFrequency = this.changeFrequency.bind(this);\n    this.changeDetune = this.changeDetune.bind(this);\n    this.changeVisualization = this.changeVisualization.bind(this);\n    this.handleSynthPlay = this.handleSynthPlay.bind(this);\n    this.handleMetalSynthPlay = this.handleMetalSynthPlay.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousemove\", this.handleMouseMove);\n  }\n\n  handleMouseMove(e) {\n    this.setState({\n      x: e.clientX,\n      y: e.clientY\n    });\n\n    this.changeFrequency();\n    this.changeDetune();\n    this.changeVisualization();\n  }\n\n  handleStartOrStopClick() {\n    let { playing } = this.state;\n\n    if (playing) {\n      this.handleStop();\n    } else {\n      this.handleStart();\n    }\n  }\n\n  handleMetalSynthPlay() {\n    console.log(\"Synth\");\n\n    let inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.63, 3.897];\n\n    Tone.MetalSynthPlay = function(options) {\n      options = Tone.defaultArg(options, Tone.MetalSynthPlay.defaults);\n      Tone.Instrument.call(this, options);\n      this.frequency = new Tone.Signal(options.frequency, Tone.Type.Frequency);\n      this._oscillators = [];\n      this._freqMultipliers = [];\n      this._amplitue = new Tone.Gain(0).connect(this.output);\n      this._highpass = new Tone.Filter({\n        type: \"highpass\",\n        Q: -3.0102999566398125\n      }).connect(this._amplitue);\n      this._octaves = options.octaves;\n      this._filterFreqScaler = new Tone.Scale(options.resonance, 7000);\n      this.envelope = new Tone.Envelope({\n        attack: options.envelope.attack,\n        attackCurve: \"linear\",\n        decay: options.envelope.decay,\n        sustain: 0,\n        release: options.envelope.release\n      }).chain(this._filterFreqScaler, this._highpass.frequency);\n      this.envelope.connect(this._amplitue.gain);\n\n      for (let i = 0; i < inharmRatios.length; i++) {\n        let osc = new Tone.FMOscillator({\n          type: \"square\",\n          modulationType: \"square\",\n          harmonicity: options.harmonicity,\n          modulationIndex: options.modulationIndex\n        });\n        osc.connect(this._highpass);\n        this._oscillators[i] = osc;\n\n        let mult = new Tone.Multiply(inharmRatios[i]);\n        this._freqMultipliers[i] = mult;\n        this.frequency.chain(mult, osc.frequency);\n      }\n      this.octaves = options.octaves;\n    };\n\n    Tone.extend(Tone.MetalSynthPlay, Tone.Instrument);\n    Tone.MetalSynthPlay.defaults = {\n      frequency: 200,\n      envelope: {\n        attack: 0.001,\n        decay: 1.4,\n        release: 0.2\n      },\n      harmonicity: 5.1,\n      modulationIndex: 32,\n      resonance: 4000,\n      octaves: 1.5\n    };\n\n    Tone.MetalSynthPlay.prototype.triggerAttack = function(time, vel) {\n      time = this.toSeconds(time);\n      vel = Tone.defaultArg(vel, 1);\n      this.envelope.triggerAttack(time, vel);\n      this._oscillators.forEach(function(osc) {\n        osc.start(time);\n      });\n\n      if (this.envelope.sustain === 0) {\n        this._oscillators.forEach(\n          function(osc) {\n            osc.stop(time + this.envelope.attack + this.envelope.decay);\n          }.bind(this)\n        );\n      }\n      return this;\n    };\n\n    Tone.MetalSynthPlay.prototype.triggerRelease = function(time) {\n      time = this.toSeconds(time);\n      this.envelope.triggerRelease(time);\n      this._oscillators.forEach(\n        function(osc) {\n          osc.stop(time + this.envelope.release);\n        }.bind(this)\n      );\n      return this;\n    };\n\n    Tone.MetalSynthPlay.prototype.sync = function() {\n      this._syncMethod(\"triggerAttack\", 0);\n      this._syncMethod(\"triggerRelease\", 0);\n      return this;\n    };\n\n    Tone.MetalSynthPlay.prototype.triggerAttackRelease = function(\n      duration,\n      time,\n      velocity\n    ) {\n      time = this.toSeconds(time);\n      duration = this.toSeconds(duration);\n      this.triggerAttack(time, velocity);\n      this.triggerRelease(time + duration);\n      return this;\n    };\n\n    Object.defineProperty(Tone.MetalSynthPlay.prototype, \"modulationIndex\", {\n      get: function() {\n        return this._oscillators[0].modulationIndex.value;\n      },\n      set: function(val) {\n        for (let i = 0; i < this._oscillators.length; i++) {\n          this._oscillators[i].modulationIndex.value = val;\n        }\n      }\n    });\n\n    Object.defineProperty(Tone.MetalSynthPlay.prototype, \"harmonicity\", {\n      get: function() {\n        return this._oscillators[0].harmonicity.value;\n      },\n      set: function(val) {\n        for (let i = 0; i < this._oscillators.length; i++) {\n          this._oscillators[i].harmonicity.value = val;\n        }\n      }\n    });\n\n    Object.defineProperty(Tone.MetalSynthPlay.prototype, \"resonance\", {\n      get: function() {\n        return this._filterFreqScaler.min;\n      },\n      set: function(val) {\n        this._filterFreqScaler.min = val;\n        this.octaves = this._octaves;\n      }\n    });\n\n    Object.defineProperty(Tone.MetalSynthPlay.prototype, \"octaves\", {\n      get: function() {\n        return this._octaves;\n      },\n      set: function(octs) {\n        this._octaves = octs;\n        this._filterFreqScaler.max =\n          this._filterFreqScaler.min * Math.pow(2, octs);\n      }\n    });\n\n    Tone.MetalSynthPlay.prototype.dispose = function() {\n      Tone.Instrument.prototype.dispose.call(this);\n      for (let i = 0; i < this._oscillators.length; i++) {\n        this._oscillators[i].dispose();\n        this._freqMultipliers[i].dispose();\n      }\n      this._oscillators = null;\n      this._freqMultipliers = null;\n      this.frequency.dispose();\n      this.frequency = null;\n      this._filterFreqScaler.dispose();\n      this._filterFreqScaler = null;\n      this._amplitue.dispose();\n      this._amplitue = null;\n      this.envelope.dispose();\n      this.envelope = null;\n      this._highpass.dispose();\n      this._highpass = null;\n    };\n  }\n\n  handleSynthPlay() {\n    console.log(\"Yo\");\n    let synth = new Tone.Synth().toMaster();\n    //synth.triggerAttackRelease(\"A4\", \"4n\");\n\n    //let pattern = new Tone.Pattern(\n    //  function(time, note) {\n    //    synth.triggerAttackRelease(note, \"16n\");\n    //  },\n    //  [\"C4\", \"D4\", \"E4\", \"G4\", \"A4\"]\n    //);\n\n    //  pattern.start(0);\n\n    //  let synth = new Tone.Synth({\n    //  oscillator: {\n    //    type: \"pwm\",\n    //    modulationFrequency: 0.2\n    //  },\n    //  envelope: {\n    //    attack: 0.02,\n    //    decay: 0.1,\n    //    sustain: 0.2,\n    //    release: 0.9\n    //  }\n    //  }).toMaster();\n\n    //synth.triggerAttack(\"D3\", \"+1\");\n\n    //let polySynth = new Tone.PolySynth(4, Tone.Synth).toMaster();\n\n    //let distortion = new Tone.Distortion(0.4).toMaster();\n    //polySynth.triggerAttackRelease([\"C4\", \"E4\", \"G4\", \"B4\"], \"2n\");\n    //synth.connect(distortion);\n\n    //let pwm = new Tone.PWMOscillator(\"Bb3\").toMaster().start();\n\n    //  let note = new Tone.Event(function(time, pitch) {\n    //    synth.triggerAttackRelease(pitch, \"16n\", time);\n    //  }, \"C2\");\n\n    //  Tone.Transport.scheduleRepeat(\n    //    function(time) {\n    //      synth.triggerAttack(time);\n    //    },\n    //    \"8n\",\n    //    \"1m\"\n    //  );\n\n    //  note.set({\n    //    loop: true,\n    //    loopEnd: \"2n\"\n    //  });\n\n    //  note.start(0);\n    //note.stop(\"4m\");\n\n    let part = new Tone.Part(\n      function(time, pitch) {\n        synth.triggerAttackRelease(pitch, \"8n\", time);\n      },\n      [[\"0\", \"C#3\"], [\"4n\", \"G3\"], [3 * Tone.Time(\"8n\"), \"G#3\"], [\"2n\", \"C3\"]]\n    );\n\n    //part.start(\"4m\");\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"4n\");\n\n    loop.start(\"1n\"); //.stop(\"4m\");\n\n    Tone.Transport.bpm.value = 220;\n    Tone.Transport.start();\n  }\n\n  handleStart() {\n    let { audioContext, oscillator, analyser, x, y } = this.state;\n\n    oscillator = audioContext.createOscillator();\n\n    oscillator.type = \"sine\";\n    oscillator.frequency.setValueAtTime(x, audioContext.currentTime);\n\n    oscillator.connect(audioContext.destination);\n    oscillator.start();\n\n    analyser = audioContext.createAnalyser();\n    analyser.fftsize = 2048;\n    oscillator.connect(analyser);\n\n    this.setState({\n      oscillator: oscillator,\n      analyser: analyser,\n      playing: true\n    });\n  }\n\n  handleStop() {\n    let { oscillator } = this.state;\n    oscillator.stop();\n\n    this.setState({\n      oscillator: oscillator,\n      playing: false\n    });\n  }\n\n  changeFrequency() {\n    let { audioContext, oscillator, x, y } = this.state;\n    oscillator.frequency.setValueAtTime(x, audioContext.currentTime);\n  }\n\n  changeDetune() {\n    let { audioContext, oscillator, x, y } = this.state;\n    oscillator.detune.setValueAtTime(y, audioContext.currentTime);\n  }\n\n  changeVisualization() {\n    const { analyser, playing } = this.state;\n\n    if (playing) {\n      const bufferLenght = analyser.frequencyBinCount;\n      let dataArray = new Uint8Array(bufferLenght);\n      analyser.getByteTimeDomainData(dataArray);\n\n      this.setState({\n        fftData: dataArray\n      });\n    }\n  }\n\n  render() {\n    const { playing, analyser, fftData } = this.state;\n    let button = \"Start\";\n\n    if (playing) {\n      button = \"Stop\";\n    }\n\n    let elements = [];\n\n    console.log(this.state);\n\n    if (fftData != undefined) {\n      fftData.map(function(fftParam, i) {\n        elements.push(\n          <div\n            key={i}\n            className=\"analyserCol\"\n            style={{ height: fftParam + \"px\" }}\n          />\n        );\n      });\n    }\n\n    return (\n      <div>\n        <div onClick={this.handleSynthPlay}>Synth</div>\n        <div onClick={this.handleMetalSynthPlay}>MetalSynth</div>\n        <div onClick={this.handleStartOrStopClick}>{button}</div>\n        <div className=\"analyser\">{elements}</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}