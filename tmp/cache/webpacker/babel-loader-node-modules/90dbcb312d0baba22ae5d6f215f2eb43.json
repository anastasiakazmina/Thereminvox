{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n    var autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    var loop = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"32n\");\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"E2\", \"1n\", time);\n    }, \"1n\");\n    var loop3 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"A2\", \"16n\", time);\n    }, \"16n\");\n    distortion.wet.value = 0;\n    var synth = new Tone.PolySynth();\n    synth.chain(distortion, autoPanner, autoWah, bitCrusher, chorus, freeverb, Tone.Master);\n    var synth1 = new Tone.Synth();\n    var synth2 = new Tone.Synth();\n    var synth3 = new Tone.Synth();\n    _this.state = {\n      lastChange: Date.now(),\n      randomDelay: 0,\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chorus: {\n        effect: chorus,\n        wet: 0,\n        on: false,\n        frequency: 1.5\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false,\n        roomSize: 1\n      },\n      loop: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"toggleLoop\", \"changeEffectWetValue\", \"changeDistortionValue\", \"toggleAutoPanner\", \"changeautoPannerValue\", \"changeautoPannerWetValue\", \"toggleAutoWah\", \"changeautoWahValue\", \"changeautoWahWetValue\", \"toggleBitCrusher\", \"changebitCrusherValue\", \"changebitCrusherWetValue\", \"toggleChorus\", \"changechorusValue\", \"changechorusWetValue\", \"toggleFreeverb\", \"changefreeverbValue\", \"changefreeverbWetValue\", \"changechorusWetValue\", \"toggleEffect\", \"generateRandom\", \"getRandomArbitrary\");\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          randomDelay = _this$state.randomDelay;\n\n      if (Date.now() - lastChange >= randomDelay) {\n        this.setState({\n          lastChange: Date.now(),\n          randomDelay: this.getRandomArbitrary(100, 3000)\n        });\n        this.generateRandom();\n      }\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start(\"0m\");\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"toggleAutoPanner\",\n    value: function toggleAutoPanner() {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          on = _this$state$autoPanne.on;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleBitCrusher\",\n    value: function toggleBitCrusher() {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          on = _this$state$bitCrushe.on;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleFreeverb\",\n    value: function toggleFreeverb() {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          on = _this$state$freeverb.on;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"toggleChorus\",\n    value: function toggleChorus() {\n      var _this$state$chorus = this.state.chorus,\n          effect = _this$state$chorus.effect,\n          on = _this$state$chorus.on,\n          frequency = _this$state$chorus.frequency;\n      this.setState({\n        chorus: {\n          effect: effect,\n          on: on,\n          frequency: frequency\n        }\n      });\n    }\n  }, {\n    key: \"toggleAutoWah\",\n    value: function toggleAutoWah() {\n      var _this$state$autoWah = this.state.autoWah,\n          effect = _this$state$autoWah.effect,\n          wet = _this$state$autoWah.wet,\n          on = _this$state$autoWah.on;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahValue\",\n    value: function changeautoWahValue(value) {\n      var _this$state$autoWah2 = this.state.autoWah,\n          effect = _this$state$autoWah2.effect,\n          wet = _this$state$autoWah2.wet,\n          on = _this$state$autoWah2.on;\n      effect.autoWah = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoWahWetValue\",\n    value: function changeautoWahWetValue(value) {\n      var _this$state$autoWah3 = this.state.autoWah,\n          effect = _this$state$autoWah3.effect,\n          wet = _this$state$autoWah3.wet,\n          on = _this$state$autoWah3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerValue\",\n    value: function changeautoPannerValue(value) {\n      var _this$state$autoPanne2 = this.state.autoPanner,\n          effect = _this$state$autoPanne2.effect,\n          wet = _this$state$autoPanne2.wet,\n          on = _this$state$autoPanne2.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeautoPannerWetValue\",\n    value: function changeautoPannerWetValue(value) {\n      var _this$state$autoPanne3 = this.state.autoPanner,\n          effect = _this$state$autoPanne3.effect,\n          wet = _this$state$autoPanne3.wet,\n          on = _this$state$autoPanne3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherValue\",\n    value: function changebitCrusherValue(value) {\n      var _this$state$bitCrushe2 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe2.effect,\n          wet = _this$state$bitCrushe2.wet,\n          on = _this$state$bitCrushe2.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changebitCrusherWetValue\",\n    value: function changebitCrusherWetValue(value) {\n      var _this$state$bitCrushe3 = this.state.bitCrusher,\n          effect = _this$state$bitCrushe3.effect,\n          wet = _this$state$bitCrushe3.wet,\n          on = _this$state$bitCrushe3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbValue\",\n    value: function changefreeverbValue(value) {\n      var _this$state$freeverb2 = this.state.freeverb,\n          effect = _this$state$freeverb2.effect,\n          wet = _this$state$freeverb2.wet,\n          on = _this$state$freeverb2.on,\n          roomSize = _this$state$freeverb2.roomSize;\n      effect.roomSize = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changefreeverbWetValue\",\n    value: function changefreeverbWetValue(value) {\n      var _this$state$freeverb3 = this.state.freeverb,\n          effect = _this$state$freeverb3.effect,\n          wet = _this$state$freeverb3.wet,\n          on = _this$state$freeverb3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusValue\",\n    value: function changechorusValue(value) {\n      var _this$state$chorus2 = this.state.chorus,\n          effect = _this$state$chorus2.effect,\n          wet = _this$state$chorus2.wet,\n          on = _this$state$chorus2.on;\n      effect.chorus = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changechorusWetValue\",\n    value: function changechorusWetValue(value) {\n      var _this$state$chorus3 = this.state.chorus,\n          effect = _this$state$chorus3.effect,\n          wet = _this$state$chorus3.wet,\n          on = _this$state$chorus3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState({\n        chorus: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          synth = _this$state2.synth,\n          autoPanner = _this$state2.autoPanner,\n          autoWah = _this$state2.autoWah,\n          bitCrusher = _this$state2.bitCrusher,\n          chorus = _this$state2.chorus,\n          freeverb = _this$state2.freeverb,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3;\n      var toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"BoxPlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleLoop;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleSynth;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this2.toggleSynth;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, \"Change Distortion Wet Value\", React.createElement(Slider, {\n        name: \"distortion\",\n        min: \"0\",\n        max: \"1\",\n        value: distortion.effect.wet.value,\n        handleValueChange: this.changeEffectWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }), \"Change Distortion Value\", React.createElement(Slider, {\n        name: \"distortion\",\n        min: \"0\",\n        max: \"100\",\n        value: distortion.effect.distortion,\n        handleValueChange: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Distortion\",\n        current: distortion.on,\n        handleClick: function handleClick() {\n          return toggleEffect(\"distortion\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Bit Crusher\", React.createElement(Slider, {\n        min: \"1\",\n        max: \"10\",\n        value: bitCrusher.effect.bitCrusher,\n        handleValueChange: this.changebitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), \"Change Bit Crusher Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: bitCrusher.effect.wet.value,\n        handleValueChange: this.changebitCrusherWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Bit Crusher\",\n        current: bitCrusher.on,\n        handleClick: this.toggleBitCrusher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \"Auto Panner\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoPanner.effect.autoPanner,\n        handleValueChange: this.changeautoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }), \"Change Auto Panner Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"10\",\n        value: autoPanner.effect.wet.value,\n        handleValueChange: this.changeautoPannerWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"AutoPanner\",\n        current: autoPanner.on,\n        handleClick: this.toggleAutoPanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"Auto Wah\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"100\",\n        value: autoWah.effect.autoWah,\n        handleValueChange: this.changeautoWahValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }), \"Change Auto Wah Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"8\",\n        value: autoWah.effect.wet.value,\n        handleValueChange: this.changeautoWahWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Auto Wah\",\n        current: autoWah.on,\n        handleClick: this.toggleAutoWah,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, \"Chorus\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }), \"Change Chorus Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: chorus.effect.wet.value,\n        handleValueChange: this.changechorusWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Chorus\",\n        current: chorus.on,\n        handleClick: this.toggleChorus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"DistortionBox4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, \"Freeverb\", React.createElement(Slider, {\n        min: \"1.5\",\n        max: \"10\",\n        value: chorus.effect.chorus,\n        handleValueChange: this.changechorusValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }), \"Change Freeverb Wet Value\", React.createElement(Slider, {\n        min: \"0\",\n        max: \"5\",\n        value: freeverb.effect.wet.value,\n        handleValueChange: this.changefreeverbWetValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }), React.createElement(ToggleSwitch, {\n        value: \"Freeverb\",\n        current: freeverb.on,\n        handleClick: this.toggleFreeverb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component); //      handleClick={() => toggleEffect(\"distortion\")}\n\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","ToggleSwitch","Slider","Knob","Synth","props","distortion","Distortion","oversample","autoPanner","AutoFilter","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoWah","AutoWah","sensitivity","gain","follower","attack","release","chorus","Chorus","delayTime","spread","bitCrusher","BitCrusher","bits","freeverb","Freeverb","roomSize","dampening","loop","Loop","time","synth","triggerAttackRelease","loop2","loop3","wet","value","PolySynth","chain","Master","synth1","synth2","synth3","state","lastChange","Date","now","randomDelay","effect","on","instrument","loop1","bindAll","Transport","bpm","start","generateRandom","min","max","Math","floor","random","setState","getRandomArbitrary","loopName","stop","effectName","toggleEffect","toggleLoop","toggleSynth","changeEffectWetValue","changeDistortionValue","changebitCrusherValue","changebitCrusherWetValue","toggleBitCrusher","changeautoPannerValue","changeautoPannerWetValue","toggleAutoPanner","changeautoWahValue","changeautoWahWetValue","toggleAutoWah","changechorusValue","changechorusWetValue","toggleChorus","changefreeverbWetValue","toggleFreeverb","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport ToggleSwitch from \"../components/ToggleSwitch\";\nimport Slider from \"../components/Slider\";\nimport Knob from \"../components/Knob\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n\n    let autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let chorus = new Tone.Chorus({\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    let loop = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"C2\", \"8n\", time);\n    }, \"32n\");\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"E2\", \"1n\", time);\n    }, \"1n\");\n\n    let loop3 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"A2\", \"16n\", time);\n    }, \"16n\");\n\n    distortion.wet.value = 0;\n\n    let synth = new Tone.PolySynth();\n    synth.chain(\n      distortion,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb,\n      Tone.Master\n    );\n    let synth1 = new Tone.Synth();\n    let synth2 = new Tone.Synth();\n    let synth3 = new Tone.Synth();\n\n    this.state = {\n      lastChange: Date.now(),\n      randomDelay: 0,\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chorus: { effect: chorus, wet: 0, on: false, frequency: 1.5 },\n      freeverb: { effect: freeverb, wet: 0, on: false, roomSize: 1 },\n      loop: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false }\n    };\n\n    _.bindAll(\n      this,\n      \"toggleLoop\",\n      \"changeEffectWetValue\",\n      \"changeDistortionValue\",\n      \"toggleAutoPanner\",\n      \"changeautoPannerValue\",\n      \"changeautoPannerWetValue\",\n      \"toggleAutoWah\",\n      \"changeautoWahValue\",\n      \"changeautoWahWetValue\",\n      \"toggleBitCrusher\",\n      \"changebitCrusherValue\",\n      \"changebitCrusherWetValue\",\n      \"toggleChorus\",\n      \"changechorusValue\",\n      \"changechorusWetValue\",\n      \"toggleFreeverb\",\n      \"changefreeverbValue\",\n      \"changefreeverbWetValue\",\n      \"changechorusWetValue\",\n      \"toggleEffect\",\n      \"generateRandom\",\n      \"getRandomArbitrary\"\n    );\n\n    Tone.Transport.bpm.value = 115;\n    Tone.Transport.start();\n  }\n\n  componentDidMount() {\n    this.generateRandom();\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  generateRandom() {\n    const { lastChange, randomDelay } = this.state;\n\n    if (Date.now() - lastChange >= randomDelay) {\n      this.setState({\n        lastChange: Date.now(),\n        randomDelay: this.getRandomArbitrary(100, 3000)\n      });\n      this.generateRandom();\n    }\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName];\n\n    on == true ? loop.stop() : loop.start(\"0m\");\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    });\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  toggleAutoPanner() {\n    let { effect, on } = this.state.autoPanner;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleBitCrusher() {\n    let { effect, on } = this.state.bitCrusher;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleFreeverb() {\n    let { effect, on } = this.state.freeverb;\n\n    this.setState({\n      freeverb: {\n        effect,\n        on\n      }\n    });\n  }\n\n  toggleChorus() {\n    let { effect, on, frequency } = this.state.chorus;\n\n    this.setState({\n      chorus: {\n        effect,\n        on,\n        frequency\n      }\n    });\n  }\n\n  toggleAutoWah() {\n    let { effect, wet, on } = this.state.autoWah;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.distortion = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.autoWah = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoWahWetValue(value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.baseFrequency = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeautoPannerWetValue(value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.bits = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changebitCrusherWetValue(value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbValue(value) {\n    let { effect, wet, on, roomSize } = this.state.freeverb;\n\n    effect.roomSize = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changefreeverbWetValue(value) {\n    let { effect, wet, on } = this.state.freeverb;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.chorus = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changechorusWetValue(value) {\n    let { effect, wet, on } = this.state.chorus;\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      chorus: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let {\n      distortion,\n      synth,\n      autoPanner,\n      autoWah,\n      bitCrusher,\n      chorus,\n      freeverb,\n      loop1,\n      loop2,\n      loop3\n    } = this.state;\n    let { toggleEffect } = this;\n    return (\n      <div>\n        <div className=\"Box\">\n          <div className=\"BoxPlay\">\n            <PlaySwitch\n              name=\"play\"\n              value={loop1.on}\n              handleToggleClick={() => this.toggleLoop}\n            />\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => this.toggleSynth}\n            />\n            <PlaySwitch\n              name=\"play\"\n              value={loop2.on}\n              handleToggleClick={() => this.toggleSynth}\n            />\n          </div>\n          <div className=\"DistortionBox\">\n            Change Distortion Wet Value\n            <Slider\n              name=\"distortion\"\n              min=\"0\"\n              max=\"1\"\n              value={distortion.effect.wet.value}\n              handleValueChange={this.changeEffectWetValue}\n            />\n            Change Distortion Value\n            <Slider\n              name=\"distortion\"\n              min=\"0\"\n              max=\"100\"\n              value={distortion.effect.distortion}\n              handleValueChange={this.changeDistortionValue}\n            />\n            <ToggleSwitch\n              value=\"Distortion\"\n              current={distortion.on}\n              handleClick={() => toggleEffect(\"distortion\")}\n            />\n          </div>\n          <div className=\"DistortionBox2\">\n            Bit Crusher\n            <Slider\n              min=\"1\"\n              max=\"10\"\n              value={bitCrusher.effect.bitCrusher}\n              handleValueChange={this.changebitCrusherValue}\n            />\n            Change Bit Crusher Wet Value\n            <Slider\n              min=\"0\"\n              max=\"10\"\n              value={bitCrusher.effect.wet.value}\n              handleValueChange={this.changebitCrusherWetValue}\n            />\n            <ToggleSwitch\n              value=\"Bit Crusher\"\n              current={bitCrusher.on}\n              handleClick={this.toggleBitCrusher}\n            />\n          </div>\n          <div className=\"DistortionBox\">\n            Auto Panner\n            <Slider\n              min=\"0\"\n              max=\"100\"\n              value={autoPanner.effect.autoPanner}\n              handleValueChange={this.changeautoPannerValue}\n            />\n            Change Auto Panner Wet Value\n            <Slider\n              min=\"0\"\n              max=\"10\"\n              value={autoPanner.effect.wet.value}\n              handleValueChange={this.changeautoPannerWetValue}\n            />\n            <ToggleSwitch\n              value=\"AutoPanner\"\n              current={autoPanner.on}\n              handleClick={this.toggleAutoPanner}\n            />\n          </div>\n          <div className=\"DistortionBox3\">\n            Auto Wah\n            <Slider\n              min=\"0\"\n              max=\"100\"\n              value={autoWah.effect.autoWah}\n              handleValueChange={this.changeautoWahValue}\n            />\n            Change Auto Wah Wet Value\n            <Slider\n              min=\"0\"\n              max=\"8\"\n              value={autoWah.effect.wet.value}\n              handleValueChange={this.changeautoWahWetValue}\n            />\n            <ToggleSwitch\n              value=\"Auto Wah\"\n              current={autoWah.on}\n              handleClick={this.toggleAutoWah}\n            />\n          </div>\n\n          <div className=\"DistortionBox\">\n            Chorus\n            <Slider\n              min=\"1.5\"\n              max=\"10\"\n              value={chorus.effect.chorus}\n              handleValueChange={this.changechorusValue}\n            />\n            Change Chorus Wet Value\n            <Slider\n              min=\"0\"\n              max=\"5\"\n              value={chorus.effect.wet.value}\n              handleValueChange={this.changechorusWetValue}\n            />\n            <ToggleSwitch\n              value=\"Chorus\"\n              current={chorus.on}\n              handleClick={this.toggleChorus}\n            />\n          </div>\n          <div className=\"DistortionBox4\">\n            Freeverb\n            <Slider\n              min=\"1.5\"\n              max=\"10\"\n              value={chorus.effect.chorus}\n              handleValueChange={this.changechorusValue}\n            />\n            Change Freeverb Wet Value\n            <Slider\n              min=\"0\"\n              max=\"5\"\n              value={freeverb.effect.wet.value}\n              handleValueChange={this.changefreeverbWetValue}\n            />\n            <ToggleSwitch\n              value=\"Freeverb\"\n              current={freeverb.on}\n              handleClick={this.toggleFreeverb}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//      handleClick={() => toggleEffect(\"distortion\")}\n"]},"metadata":{},"sourceType":"module"}