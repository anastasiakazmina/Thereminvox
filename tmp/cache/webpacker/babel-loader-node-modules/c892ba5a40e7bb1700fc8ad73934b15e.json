{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\nimport BitCrusher from \"../components/effects/BitCrusher\";\nimport Chebyshev from \"../components/effects/Chebyshev\";\nimport AutoPanner from \"../components/effects/AutoPanner\";\nimport AutoFilter from \"../components/effects/AutoFilter\";\nimport AutoWah from \"../components/effects/AutoWah\";\nimport Freeverb from \"../components/effects/Freeverb\";\nimport Knob from \"../components/Knob\";\n\nvar Synth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Synth, _React$Component);\n\n  function Synth(props) {\n    var _this;\n\n    _classCallCheck(this, Synth);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Synth).call(this, props));\n    var distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n    var feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: \"4n\",\n      maxDelay: 0.8\n    });\n    var bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n    var chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n    var autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n    var autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n    var freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n    distortion.wet.value = 0;\n    autoPanner.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    chebyshev.wet.value = 0;\n    autoFilter.wet.value = 0;\n    autoWah.wet.value = 0;\n    freeverb.wet.value = 0;\n    var synth = new Tone.PolySynth();\n    var loop1 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease([\"C3\", \"Eb3\", \"G3\", \"Bb3\"], \"16n\", time);\n    }, \"8n\");\n    var loop2 = new Tone.Loop(function (time) {\n      synth.triggerAttackRelease(\"E2\", \"16n\", time);\n    }, \"16n\");\n    var loop3 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease([\"C_1\", \"C#_1\", \"D_1\", \"D#_1\", \"E_1\", \"F_1\", \"F#_1\", \"G_1\", \"G#_1\", \"A_1\", \"A#_1\", \"B_1\", \"C0\", \"C#0\", \"D0\", \"D#0\", \"E0\", \"F0\", \"F#0\", \"G0\", \"G#0\", \"A0\", \"A#0\", \"B0\", \"C1\", \"C#1\", \"D1\", \"D#1\", \"E1\", \"F1\", \"F#1\", \"G1\", \"G#1\", \"A1\", \"A#1\", \"B1\", \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \"A2\", \"A#2\", \"B2\", \"C3\", \"C#3\", \"D3\", \"D#3\", \"E3\", \"F3\", \"F#3\", \"G3\", \"G#3\", \"A3\", \"A#3\", \"B3\", \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\", \"A4\", \"A#4\", \"B4\", \"C5\", \"C#5\", \"D5\", \"D#5\", \"E5\", \"F5\", \"F#5\", \"G5\", \"G#5\", \"A5\", \"A#5\", \"B5\", \"C6\", \"C#6\", \"D6\", \"D#6\", \"E6\", \"F6\", \"F#6\", \"G6\", \"G#6\", \"A6\", \"A#6\", \"B6\", \"C7\", \"C#7\", \"D7\", \"D#7\", \"E7\", \"F7\", \"F#7\", \"G7\", \"G#7\", \"A7\", \"A#7\", \"B7\", \"C8\", \"C#8\", \"D8\", \"D#8\", \"E8\", \"F8\", \"F#8\", \"G8\", \"G#8\", \"A8\", \"A#8\", \"B8\", \"C9\", \"C#9\", \"D9\", \"D#9\", \"E9\", \"F9\", \"F#9\", \"G9\"], \"32n\", time);\n    }, \"32n\");\n    var loop4 = new Tone.Pattern(function (time, note) {\n      synth.triggerAttackRelease([\"C4\", \"C4\", \"G4\", \"G4\", \"A4\", \"A4\", \"G4\", \"F4\", \"F4\", \"E4\", \"E4\"], \"8n\", time);\n    }, \"16n\");\n    synth.chain(bitCrusher, chebyshev, autoPanner, distortion, autoFilter, autoWah, freeverb, feedbackDelay, Tone.Master);\n    _this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      distortion: {\n        effect: distortion,\n        wet: 0,\n        on: false\n      },\n      synth: {\n        instrument: synth,\n        on: false\n      },\n      autoFilter: {\n        effect: autoFilter,\n        wet: 0,\n        on: false\n      },\n      autoPanner: {\n        effect: autoPanner,\n        wet: 0,\n        on: false\n      },\n      bitCrusher: {\n        effect: bitCrusher,\n        wet: 0,\n        on: false\n      },\n      chebyshev: {\n        effect: chebyshev,\n        wet: 0,\n        on: false\n      },\n      autoWah: {\n        effect: autoWah,\n        wet: 0,\n        on: false\n      },\n      freeverb: {\n        effect: freeverb,\n        wet: 0,\n        on: false\n      },\n      feedbackDelay: {\n        effect: feedbackDelay,\n        wet: 0,\n        on: false\n      },\n      loop1: {\n        loop: loop1,\n        on: false\n      },\n      loop2: {\n        loop: loop2,\n        on: false\n      },\n      loop3: {\n        loop: loop3,\n        on: false\n      },\n      loop4: {\n        loop: loop3,\n        on: false\n      }\n    };\n\n    _.bindAll(_assertThisInitialized(_this), \"generateRandom\", \"toggleLoop\", \"toggleEffect\", \"changeEffectWetValue\", \"changeDistortionValue\", \"changeFeedbackDelayValue\", \"changeChebyshevValue\", \"changeBitCrasherValue\", \"changeAutoPannerValue\", \"changeAutoFilterValue\", \"changeAutoWahValue\", \"changeFreeverbValue\");\n\n    Tone.Transport.bpm.value = 30;\n    Tone.Transport.start();\n    return _this;\n  }\n\n  _createClass(Synth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.generateRandom();\n    }\n  }, {\n    key: \"getRandomArbitrary\",\n    value: function getRandomArbitrary(min, max) {\n      return Math.floor(Math.random() * (max - min)) + min;\n    }\n  }, {\n    key: \"generateRandom\",\n    value: function generateRandom() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          lastChange = _this$state.lastChange,\n          timeout = _this$state.timeout;\n\n      if (Date.now() - lastChange >= timeout) {\n        var random = this.getRandomArbitrary(100, 3000);\n        this.setState({\n          lastChange: Date.now(),\n          timeout: random\n        });\n        this.changeDistortionValue(\"distortion\", random / 30);\n        this.changeFreeverbValue(\"freeverb\", random / 30);\n        this.changeAutoFilterValue(\"autoFilter\", random / 30);\n        this.changeAutoPannerValue(\"autoPanner\", random / 30);\n      }\n\n      setTimeout(function () {\n        return _this2.generateRandom();\n      }, timeout);\n    }\n  }, {\n    key: \"toggleLoop\",\n    value: function toggleLoop(loopName) {\n      var _this$state$loopName = this.state[loopName],\n          loop = _this$state$loopName.loop,\n          on = _this$state$loopName.on;\n      on == true ? loop.stop() : loop.start(\"0m\");\n      this.setState(_defineProperty({}, \"\".concat(loopName), {\n        loop: loop,\n        on: !on\n      }));\n    }\n  }, {\n    key: \"toggleEffect\",\n    value: function toggleEffect(effectName) {\n      var _this$state$effectNam = this.state[effectName],\n          effect = _this$state$effectNam.effect,\n          wet = _this$state$effectNam.wet,\n          on = _this$state$effectNam.on;\n      effect.wet.value = on == true ? 0 : wet;\n      on = !on;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeEffectWetValue\",\n    value: function changeEffectWetValue(effectName, value) {\n      var _this$state$effectNam2 = this.state[effectName],\n          effect = _this$state$effectNam2.effect,\n          wet = _this$state$effectNam2.wet,\n          on = _this$state$effectNam2.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"changeDistortionValue\",\n    value: function changeDistortionValue(effectName, value) {\n      var _this$state$distortio = this.state.distortion,\n          effect = _this$state$distortio.effect,\n          wet = _this$state$distortio.wet,\n          on = _this$state$distortio.on;\n      effect.distortion = value;\n      this.setState({\n        distortion: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoPannerValue\",\n    value: function changeAutoPannerValue(effectName, value) {\n      var _this$state$autoPanne = this.state.autoPanner,\n          effect = _this$state$autoPanne.effect,\n          wet = _this$state$autoPanne.wet,\n          on = _this$state$autoPanne.on;\n      effect.octaves = value;\n      this.setState({\n        autoPanner: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeBitCrasherValue\",\n    value: function changeBitCrasherValue(effectName, value) {\n      var _this$state$bitCrushe = this.state.bitCrusher,\n          effect = _this$state$bitCrushe.effect,\n          wet = _this$state$bitCrushe.wet,\n          on = _this$state$bitCrushe.on;\n      effect.bits = value;\n      this.setState({\n        bitCrusher: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFreeverbValue\",\n    value: function changeFreeverbValue(effectName, value) {\n      var _this$state$freeverb = this.state.freeverb,\n          effect = _this$state$freeverb.effect,\n          wet = _this$state$freeverb.wet,\n          on = _this$state$freeverb.on;\n      effect.freeverb = value;\n      this.setState({\n        freeverb: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoFilterValue\",\n    value: function changeAutoFilterValue(effectName, value) {\n      var _this$state$autoFilte = this.state.autoFilter,\n          effect = _this$state$autoFilte.effect,\n          wet = _this$state$autoFilte.wet,\n          on = _this$state$autoFilte.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoFilter: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeAutoWahValue\",\n    value: function changeAutoWahValue(effectName, value) {\n      var _this$state$autoWah = this.state.autoWah,\n          effect = _this$state$autoWah.effect,\n          wet = _this$state$autoWah.wet,\n          on = _this$state$autoWah.on;\n      effect.baseFrequency = value;\n      this.setState({\n        autoWah: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeChebyshevValue\",\n    value: function changeChebyshevValue(effectName, value) {\n      var _this$state$chebyshev = this.state.chebyshev,\n          effect = _this$state$chebyshev.effect,\n          wet = _this$state$chebyshev.wet,\n          on = _this$state$chebyshev.on;\n      effect.chebyshev = value;\n      this.setState({\n        chebyshev: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayValue\",\n    value: function changeFeedbackDelayValue(effectName, value) {\n      var _this$state$feedbackD = this.state.feedbackDelay,\n          effect = _this$state$feedbackD.effect,\n          wet = _this$state$feedbackD.wet,\n          on = _this$state$feedbackD.on;\n      effect.maxDelay = value;\n      this.setState({\n        feedbackDelay: {\n          effect: effect,\n          wet: wet,\n          on: on\n        }\n      });\n    }\n  }, {\n    key: \"changeFeedbackDelayWetValue\",\n    value: function changeFeedbackDelayWetValue(effectName, value) {\n      var _this$state$effectNam3 = this.state[effectName],\n          effect = _this$state$effectNam3.effect,\n          wet = _this$state$effectNam3.wet,\n          on = _this$state$effectNam3.on;\n      effect.wet.value = on == true ? value : 0;\n      wet = value;\n      this.setState(_defineProperty({}, \"\".concat(effectName), {\n        effect: effect,\n        wet: wet,\n        on: on\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          distortion = _this$state2.distortion,\n          feedbackDelay = _this$state2.feedbackDelay,\n          autoPanner = _this$state2.autoPanner,\n          bitCrusher = _this$state2.bitCrusher,\n          chebyshev = _this$state2.chebyshev,\n          autoFilter = _this$state2.autoFilter,\n          autoWah = _this$state2.autoWah,\n          freeverb = _this$state2.freeverb,\n          synth = _this$state2.synth,\n          loop1 = _this$state2.loop1,\n          loop2 = _this$state2.loop2,\n          loop3 = _this$state2.loop3,\n          loop4 = _this$state2.loop4;\n      var _toggleEffect = this.toggleEffect;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"LoopContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }, React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop1.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop1\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop2.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop2\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop3.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop3\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }), React.createElement(PlaySwitch, {\n        name: \"play\",\n        value: loop4.on,\n        handleToggleClick: function handleToggleClick() {\n          return _this3.toggleLoop(\"loop4\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"effectsBoard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, React.createElement(Distortion, Object.assign({}, this.state.distortion, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"distortion\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeDistortionValue: this.changeDistortionValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      })), React.createElement(FeedbackDelay, Object.assign({}, this.state.feedbackDelay, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"feedbackDelay\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFeedbackDelayValue: this.changeFeedbackDelayValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      })), React.createElement(BitCrusher, Object.assign({}, this.state.bitCrusher, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"bitCrusher\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeBitCrusherValue: this.changeBitCrusherValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      })), React.createElement(Chebyshev, Object.assign({}, this.state.chebyshev, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"chebyshev\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeChebyshevValue: this.changeChebyshevValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"effectsBoard2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(AutoPanner, Object.assign({}, this.state.autoPanner, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"autoPanner\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoPannerValue: this.changeAutoPannerValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      })), React.createElement(AutoFilter, Object.assign({}, this.state.autoFilter, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"autoFilter\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoFilterValue: this.changeAutoFilterValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      })), React.createElement(AutoWah, Object.assign({}, this.state.autoWah, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"autoWah\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeAutoWahValue: this.changeAutoWahValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      })), React.createElement(Freeverb, Object.assign({}, this.state.freeverb, {\n        toggleEffect: function toggleEffect() {\n          return _toggleEffect(\"freeverb\");\n        },\n        changeEffectWetValue: this.changeEffectWetValue,\n        changeFreeverbValue: this.changeFreeverbValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Synth;\n}(React.Component);\n\nexport { Synth as default };","map":{"version":3,"sources":["/Users/anastasiakazmina/hseadc2017_thereminvox2/app/javascript/containers/Synth.jsx"],"names":["_","React","Tone","PlaySwitch","Distortion","FeedbackDelay","BitCrusher","Chebyshev","AutoPanner","AutoFilter","AutoWah","Freeverb","Knob","Synth","props","distortion","oversample","feedbackDelay","delayTime","maxDelay","bitCrusher","bits","chebyshev","order","autoPanner","frequency","type","depth","baseFrequency","octaves","filter","rolloff","Q","autoFilter","autoWah","sensitivity","gain","follower","attack","release","freeverb","roomSize","dampening","wet","value","synth","PolySynth","loop1","Pattern","time","note","triggerAttackRelease","loop2","Loop","loop3","loop4","chain","Master","state","lastChange","Date","now","timeout","effect","on","instrument","loop","bindAll","Transport","bpm","start","generateRandom","min","max","Math","floor","random","getRandomArbitrary","setState","changeDistortionValue","changeFreeverbValue","changeAutoFilterValue","changeAutoPannerValue","setTimeout","loopName","stop","effectName","toggleEffect","toggleLoop","changeEffectWetValue","changeFeedbackDelayValue","changeBitCrusherValue","changeChebyshevValue","changeAutoWahValue","Component"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport React from \"react\";\nimport Tone from \"tone\";\n\nimport PlaySwitch from \"../components/PlaySwitch\";\nimport Distortion from \"../components/effects/Distortion\";\nimport FeedbackDelay from \"../components/effects/FeedbackDelay\";\nimport BitCrusher from \"../components/effects/BitCrusher\";\nimport Chebyshev from \"../components/effects/Chebyshev\";\nimport AutoPanner from \"../components/effects/AutoPanner\";\nimport AutoFilter from \"../components/effects/AutoFilter\";\nimport AutoWah from \"../components/effects/AutoWah\";\nimport Freeverb from \"../components/effects/Freeverb\";\n\nimport Knob from \"../components/Knob\";\n\nexport default class Synth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let distortion = new Tone.Distortion({\n      distortion: 0,\n      oversample: \"4x\"\n    });\n\n    let feedbackDelay = new Tone.FeedbackDelay({\n      delayTime: \"4n\",\n      maxDelay: 0.8\n    });\n\n    let bitCrusher = new Tone.BitCrusher({\n      bits: 4\n    });\n\n    let chebyshev = new Tone.Chebyshev({\n      order: 1,\n      oversample: \"none\"\n    });\n\n    let autoPanner = new Tone.AutoFilter({\n      frequency: 10,\n      type: \"triangle\",\n      depth: 8,\n      baseFrequency: 100,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoFilter = new Tone.AutoFilter({\n      frequency: 1,\n      type: \"sine\",\n      depth: 1,\n      baseFrequency: 200,\n      octaves: 2.6,\n      filter: {\n        type: \"lowpass\",\n        rolloff: -12,\n        Q: 1\n      }\n    });\n\n    let autoWah = new Tone.AutoWah({\n      baseFrequency: 100,\n      octaves: 6,\n      sensitivity: 0,\n      Q: 2,\n      gain: 2,\n      follower: {\n        attack: 0.3,\n        release: 0.5\n      }\n    });\n\n    let freeverb = new Tone.Freeverb({\n      roomSize: 0.7,\n      dampening: 3000\n    });\n\n    distortion.wet.value = 0;\n    autoPanner.wet.value = 0;\n    bitCrusher.wet.value = 0;\n    feedbackDelay.wet.value = 0;\n    chebyshev.wet.value = 0;\n    autoFilter.wet.value = 0;\n    autoWah.wet.value = 0;\n    freeverb.wet.value = 0;\n\n    let synth = new Tone.PolySynth();\n\n    let loop1 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease([\"C3\", \"Eb3\", \"G3\", \"Bb3\"], \"16n\", time);\n    }, \"8n\");\n\n    let loop2 = new Tone.Loop(function(time) {\n      synth.triggerAttackRelease(\"E2\", \"16n\", time);\n    }, \"16n\");\n\n    let loop3 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(\n        [\n          \"C_1\",\n          \"C#_1\",\n          \"D_1\",\n          \"D#_1\",\n          \"E_1\",\n          \"F_1\",\n          \"F#_1\",\n          \"G_1\",\n          \"G#_1\",\n          \"A_1\",\n          \"A#_1\",\n          \"B_1\",\n          \"C0\",\n          \"C#0\",\n          \"D0\",\n          \"D#0\",\n          \"E0\",\n          \"F0\",\n          \"F#0\",\n          \"G0\",\n          \"G#0\",\n          \"A0\",\n          \"A#0\",\n          \"B0\",\n          \"C1\",\n          \"C#1\",\n          \"D1\",\n          \"D#1\",\n          \"E1\",\n          \"F1\",\n          \"F#1\",\n          \"G1\",\n          \"G#1\",\n          \"A1\",\n          \"A#1\",\n          \"B1\",\n          \"C2\",\n          \"C#2\",\n          \"D2\",\n          \"D#2\",\n          \"E2\",\n          \"F2\",\n          \"F#2\",\n          \"G2\",\n          \"G#2\",\n          \"A2\",\n          \"A#2\",\n          \"B2\",\n          \"C3\",\n          \"C#3\",\n          \"D3\",\n          \"D#3\",\n          \"E3\",\n          \"F3\",\n          \"F#3\",\n          \"G3\",\n          \"G#3\",\n          \"A3\",\n          \"A#3\",\n          \"B3\",\n          \"C4\",\n          \"C#4\",\n          \"D4\",\n          \"D#4\",\n          \"E4\",\n          \"F4\",\n          \"F#4\",\n          \"G4\",\n          \"G#4\",\n          \"A4\",\n          \"A#4\",\n          \"B4\",\n          \"C5\",\n          \"C#5\",\n          \"D5\",\n          \"D#5\",\n          \"E5\",\n          \"F5\",\n          \"F#5\",\n          \"G5\",\n          \"G#5\",\n          \"A5\",\n          \"A#5\",\n          \"B5\",\n          \"C6\",\n          \"C#6\",\n          \"D6\",\n          \"D#6\",\n          \"E6\",\n          \"F6\",\n          \"F#6\",\n          \"G6\",\n          \"G#6\",\n          \"A6\",\n          \"A#6\",\n          \"B6\",\n          \"C7\",\n          \"C#7\",\n          \"D7\",\n          \"D#7\",\n          \"E7\",\n          \"F7\",\n          \"F#7\",\n          \"G7\",\n          \"G#7\",\n          \"A7\",\n          \"A#7\",\n          \"B7\",\n          \"C8\",\n          \"C#8\",\n          \"D8\",\n          \"D#8\",\n          \"E8\",\n          \"F8\",\n          \"F#8\",\n          \"G8\",\n          \"G#8\",\n          \"A8\",\n          \"A#8\",\n          \"B8\",\n          \"C9\",\n          \"C#9\",\n          \"D9\",\n          \"D#9\",\n          \"E9\",\n          \"F9\",\n          \"F#9\",\n          \"G9\"\n        ],\n        \"32n\",\n        time\n      );\n    }, \"32n\");\n\n    let loop4 = new Tone.Pattern(function(time, note) {\n      synth.triggerAttackRelease(\n        [\"C4\", \"C4\", \"G4\", \"G4\", \"A4\", \"A4\", \"G4\", \"F4\", \"F4\", \"E4\", \"E4\"],\n        \"8n\",\n        time\n      );\n    }, \"16n\");\n\n    synth.chain(\n      bitCrusher,\n      chebyshev,\n      autoPanner,\n      distortion,\n      autoFilter,\n      autoWah,\n      freeverb,\n\n      feedbackDelay,\n      Tone.Master\n    );\n\n    this.state = {\n      lastChange: Date.now(),\n      timeout: 0,\n      distortion: { effect: distortion, wet: 0, on: false },\n      synth: { instrument: synth, on: false },\n      autoFilter: { effect: autoFilter, wet: 0, on: false },\n      autoPanner: { effect: autoPanner, wet: 0, on: false },\n      bitCrusher: { effect: bitCrusher, wet: 0, on: false },\n      chebyshev: { effect: chebyshev, wet: 0, on: false },\n      autoWah: { effect: autoWah, wet: 0, on: false },\n      freeverb: { effect: freeverb, wet: 0, on: false },\n      feedbackDelay: { effect: feedbackDelay, wet: 0, on: false },\n      loop1: { loop: loop1, on: false },\n      loop2: { loop: loop2, on: false },\n      loop3: { loop: loop3, on: false },\n      loop4: { loop: loop3, on: false }\n    };\n\n    _.bindAll(\n      this,\n      \"generateRandom\",\n      \"toggleLoop\",\n      \"toggleEffect\",\n      \"changeEffectWetValue\",\n      \"changeDistortionValue\",\n      \"changeFeedbackDelayValue\",\n      \"changeChebyshevValue\",\n      \"changeBitCrasherValue\",\n      \"changeAutoPannerValue\",\n      \"changeAutoFilterValue\",\n      \"changeAutoWahValue\",\n      \"changeFreeverbValue\"\n    );\n\n    Tone.Transport.bpm.value = 30;\n    Tone.Transport.start();\n  }\n\n  componentDidMount() {\n    this.generateRandom();\n  }\n\n  getRandomArbitrary(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  generateRandom() {\n    const { lastChange, timeout } = this.state;\n\n    if (Date.now() - lastChange >= timeout) {\n      const random = this.getRandomArbitrary(100, 3000);\n\n      this.setState({\n        lastChange: Date.now(),\n        timeout: random\n      });\n\n      this.changeDistortionValue(\"distortion\", random / 30);\n      this.changeFreeverbValue(\"freeverb\", random / 30);\n      this.changeAutoFilterValue(\"autoFilter\", random / 30);\n      this.changeAutoPannerValue(\"autoPanner\", random / 30);\n    }\n\n    setTimeout(() => this.generateRandom(), timeout);\n  }\n\n  toggleLoop(loopName) {\n    let { loop, on } = this.state[loopName];\n\n    on == true ? loop.stop() : loop.start(\"0m\");\n\n    this.setState({\n      [`${loopName}`]: {\n        loop: loop,\n        on: !on\n      }\n    });\n  }\n\n  toggleEffect(effectName) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? 0 : wet;\n    on = !on;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeEffectWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeDistortionValue(effectName, value) {\n    let { effect, wet, on } = this.state.distortion;\n\n    effect.distortion = value;\n\n    this.setState({\n      distortion: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeAutoPannerValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoPanner;\n\n    effect.octaves = value;\n\n    this.setState({\n      autoPanner: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeBitCrasherValue(effectName, value) {\n    let { effect, wet, on } = this.state.bitCrusher;\n\n    effect.bits = value;\n\n    this.setState({\n      bitCrusher: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFreeverbValue(effectName, value) {\n    let { effect, wet, on } = this.state.freeverb;\n\n    effect.freeverb = value;\n\n    this.setState({\n      freeverb: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeAutoFilterValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoFilter;\n\n    effect.baseFrequency = value;\n\n    this.setState({\n      autoFilter: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeAutoWahValue(effectName, value) {\n    let { effect, wet, on } = this.state.autoWah;\n\n    effect.baseFrequency = value;\n\n    this.setState({\n      autoWah: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeChebyshevValue(effectName, value) {\n    let { effect, wet, on } = this.state.chebyshev;\n\n    effect.chebyshev = value;\n\n    this.setState({\n      chebyshev: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackDelayValue(effectName, value) {\n    let { effect, wet, on } = this.state.feedbackDelay;\n\n    effect.maxDelay = value;\n\n    this.setState({\n      feedbackDelay: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  changeFeedbackDelayWetValue(effectName, value) {\n    let { effect, wet, on } = this.state[effectName];\n\n    effect.wet.value = on == true ? value : 0;\n    wet = value;\n\n    this.setState({\n      [`${effectName}`]: {\n        effect,\n        wet,\n        on\n      }\n    });\n  }\n\n  render() {\n    let {\n      distortion,\n      feedbackDelay,\n      autoPanner,\n      bitCrusher,\n      chebyshev,\n      autoFilter,\n      autoWah,\n      freeverb,\n\n      synth,\n      loop1,\n      loop2,\n      loop3,\n      loop4\n    } = this.state;\n    let { toggleEffect } = this;\n\n    return (\n      <div>\n        <div className=\"LoopContainer\">\n          <PlaySwitch\n            name=\"play\"\n            value={loop1.on}\n            handleToggleClick={() => this.toggleLoop(\"loop1\")}\n          />\n\n          <PlaySwitch\n            name=\"play\"\n            value={loop2.on}\n            handleToggleClick={() => this.toggleLoop(\"loop2\")}\n          />\n\n          <PlaySwitch\n            name=\"play\"\n            value={loop3.on}\n            handleToggleClick={() => this.toggleLoop(\"loop3\")}\n          />\n\n          <PlaySwitch\n            name=\"play\"\n            value={loop4.on}\n            handleToggleClick={() => this.toggleLoop(\"loop4\")}\n          />\n        </div>\n\n        <div className=\"effectsBoard\">\n          <Distortion\n            {...this.state.distortion}\n            toggleEffect={() => toggleEffect(\"distortion\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeDistortionValue={this.changeDistortionValue}\n          />\n          <FeedbackDelay\n            {...this.state.feedbackDelay}\n            toggleEffect={() => toggleEffect(\"feedbackDelay\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFeedbackDelayValue={this.changeFeedbackDelayValue}\n          />\n          <BitCrusher\n            {...this.state.bitCrusher}\n            toggleEffect={() => toggleEffect(\"bitCrusher\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeBitCrusherValue={this.changeBitCrusherValue}\n          />\n          <Chebyshev\n            {...this.state.chebyshev}\n            toggleEffect={() => toggleEffect(\"chebyshev\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeChebyshevValue={this.changeChebyshevValue}\n          />\n        </div>\n        <div className=\"effectsBoard2\">\n          <AutoPanner\n            {...this.state.autoPanner}\n            toggleEffect={() => toggleEffect(\"autoPanner\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoPannerValue={this.changeAutoPannerValue}\n          />\n          <AutoFilter\n            {...this.state.autoFilter}\n            toggleEffect={() => toggleEffect(\"autoFilter\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoFilterValue={this.changeAutoFilterValue}\n          />\n          <AutoWah\n            {...this.state.autoWah}\n            toggleEffect={() => toggleEffect(\"autoWah\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeAutoWahValue={this.changeAutoWahValue}\n          />\n          <Freeverb\n            {...this.state.freeverb}\n            toggleEffect={() => toggleEffect(\"freeverb\")}\n            changeEffectWetValue={this.changeEffectWetValue}\n            changeFreeverbValue={this.changeFreeverbValue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}